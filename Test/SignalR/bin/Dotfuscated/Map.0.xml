<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2018-05-31T13:41:52</timestamp>
        <product version="5.32.1.6167" user="未注册 " serial="000-00-000-391">Dotfuscator Community Edition</product>
    </header>
    <mapping>
        <module>
            <name>WebGrease.dll</name>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;imageDirectoriesToHash&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;imageExtensions&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType0`2</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_imageDirectoriesToHash</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_imageExtensions</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;imageDirectoriesToHash&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;imageExtensions&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>imageDirectoriesToHash</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>imageExtensions</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>6</arity>
                <genericparameter sequence="0">
                    <name>&lt;cssFileSets&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;sourceDirectory&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;destinationDirectory&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="3">
                    <name>&lt;configType&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="4">
                    <name>&lt;imageExtensions&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="5">
                    <name>&lt;imageDirectories&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType1`6</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2, !3, !4, !5)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!3()</signature>
                        <name>get_configType</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_cssFileSets</name>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_destinationDirectory</name>
                    </method>
                    <method>
                        <signature>!5()</signature>
                        <name>get_imageDirectories</name>
                    </method>
                    <method>
                        <signature>!4()</signature>
                        <name>get_imageExtensions</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_sourceDirectory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!3</signature>
                        <name>&lt;configType&gt;i__Field</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;cssFileSets&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;destinationDirectory&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!5</signature>
                        <name>&lt;imageDirectories&gt;i__Field</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>!4</signature>
                        <name>&lt;imageExtensions&gt;i__Field</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;sourceDirectory&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!3()</signature>
                        <name>configType</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>cssFileSets</name>
                    </property>
                    <property>
                        <signature>!2()</signature>
                        <name>destinationDirectory</name>
                    </property>
                    <property>
                        <signature>!5()</signature>
                        <name>imageDirectories</name>
                    </property>
                    <property>
                        <signature>!4()</signature>
                        <name>imageExtensions</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>sourceDirectory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>8</arity>
                <genericparameter sequence="0">
                    <name>&lt;configType&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;ImageSpriting&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;Global&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="3">
                    <name>&lt;Bundling&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="4">
                    <name>&lt;Minification&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="5">
                    <name>&lt;Preprocessing&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="6">
                    <name>&lt;Locales&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="7">
                    <name>&lt;Themes&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType2`8</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2, !3, !4, !5, !6, !7)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!3()</signature>
                        <name>get_Bundling</name>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_Global</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_ImageSpriting</name>
                    </method>
                    <method>
                        <signature>!6()</signature>
                        <name>get_Locales</name>
                    </method>
                    <method>
                        <signature>!4()</signature>
                        <name>get_Minification</name>
                    </method>
                    <method>
                        <signature>!5()</signature>
                        <name>get_Preprocessing</name>
                    </method>
                    <method>
                        <signature>!7()</signature>
                        <name>get_Themes</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_configType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!3</signature>
                        <name>&lt;Bundling&gt;i__Field</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;Global&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;ImageSpriting&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!6</signature>
                        <name>&lt;Locales&gt;i__Field</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>!4</signature>
                        <name>&lt;Minification&gt;i__Field</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>!5</signature>
                        <name>&lt;Preprocessing&gt;i__Field</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>!7</signature>
                        <name>&lt;Themes&gt;i__Field</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;configType&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!3()</signature>
                        <name>Bundling</name>
                    </property>
                    <property>
                        <signature>!2()</signature>
                        <name>Global</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>ImageSpriting</name>
                    </property>
                    <property>
                        <signature>!6()</signature>
                        <name>Locales</name>
                    </property>
                    <property>
                        <signature>!4()</signature>
                        <name>Minification</name>
                    </property>
                    <property>
                        <signature>!5()</signature>
                        <name>Preprocessing</name>
                    </property>
                    <property>
                        <signature>!7()</signature>
                        <name>Themes</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>configType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>4</arity>
                <genericparameter sequence="0">
                    <name>&lt;jsFileSets&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;configType&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;sourceDirectory&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="3">
                    <name>&lt;destinationDirectory&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType3`4</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2, !3)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_configType</name>
                    </method>
                    <method>
                        <signature>!3()</signature>
                        <name>get_destinationDirectory</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_jsFileSets</name>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_sourceDirectory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;configType&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!3</signature>
                        <name>&lt;destinationDirectory&gt;i__Field</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;jsFileSets&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;sourceDirectory&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!1()</signature>
                        <name>configType</name>
                    </property>
                    <property>
                        <signature>!3()</signature>
                        <name>destinationDirectory</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>jsFileSets</name>
                    </property>
                    <property>
                        <signature>!2()</signature>
                        <name>sourceDirectory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>&lt;configType&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType4`1</name>
                <methodlist>
                    <method>
                        <signature>void(!0)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_configType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;configType&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>configType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>4</arity>
                <genericparameter sequence="0">
                    <name>&lt;ShouldAnalyze&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;ShouldMinify&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;AnalyzeArgs&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="3">
                    <name>&lt;TreatWarningsAsErrors&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType5`4</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2, !3)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_AnalyzeArgs</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_ShouldAnalyze</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_ShouldMinify</name>
                    </method>
                    <method>
                        <signature>!3()</signature>
                        <name>get_TreatWarningsAsErrors</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;AnalyzeArgs&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;ShouldAnalyze&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;ShouldMinify&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!3</signature>
                        <name>&lt;TreatWarningsAsErrors&gt;i__Field</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!2()</signature>
                        <name>AnalyzeArgs</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>ShouldAnalyze</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>ShouldMinify</name>
                    </property>
                    <property>
                        <signature>!3()</signature>
                        <name>TreatWarningsAsErrors</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>3</arity>
                <genericparameter sequence="0">
                    <name>&lt;fileSets&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;fileType&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;Configuration&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType6`3</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_Configuration</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_fileSets</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_fileType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;Configuration&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;fileSets&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;fileType&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!2()</signature>
                        <name>Configuration</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>fileSets</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>fileType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;bundleConfig&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;preprocessingConfig&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType7`2</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_bundleConfig</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_preprocessingConfig</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;bundleConfig&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;preprocessingConfig&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>bundleConfig</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>preprocessingConfig</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>4</arity>
                <genericparameter sequence="0">
                    <name>&lt;Inputs&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;PreprocessingConfig&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;AddSemicolons&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="3">
                    <name>&lt;output&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType8`4</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2, !3)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_AddSemicolons</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Inputs</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_PreprocessingConfig</name>
                    </method>
                    <method>
                        <signature>!3()</signature>
                        <name>get_output</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;AddSemicolons&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;Inputs&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;PreprocessingConfig&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!3</signature>
                        <name>&lt;output&gt;i__Field</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!2()</signature>
                        <name>AddSemicolons</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>Inputs</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>PreprocessingConfig</name>
                    </property>
                    <property>
                        <signature>!3()</signature>
                        <name>output</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>18</arity>
                <genericparameter sequence="0">
                    <name>&lt;ShouldExcludeProperties&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;ShouldValidateForLowerCase&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;ShouldMergeMediaQueries&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="3">
                    <name>&lt;ShouldOptimize&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="4">
                    <name>&lt;ShouldAssembleBackgroundImages&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="5">
                    <name>&lt;ShouldMinify&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="6">
                    <name>&lt;IgnoreImagesWithNonDefaultBackgroundSize&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="7">
                    <name>&lt;HackSelectors&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="8">
                    <name>&lt;BannedSelectors&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="9">
                    <name>&lt;ImageAssembleReferencesToIgnore&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="10">
                    <name>&lt;OutputUnit&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="11">
                    <name>&lt;OutputUnitFactor&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="12">
                    <name>&lt;ImageAssemblyPadding&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="13">
                    <name>&lt;HashImages&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="14">
                    <name>&lt;ForcedSpritingImageType&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="15">
                    <name>&lt;ErrorOnInvalidSprite&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="16">
                    <name>&lt;ImageAssembleScanDestinationFile&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="17">
                    <name>&lt;ImageSpritingLogPath&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType9`18</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!8()</signature>
                        <name>get_BannedSelectors</name>
                    </method>
                    <method>
                        <signature>!15()</signature>
                        <name>get_ErrorOnInvalidSprite</name>
                    </method>
                    <method>
                        <signature>!14()</signature>
                        <name>get_ForcedSpritingImageType</name>
                    </method>
                    <method>
                        <signature>!7()</signature>
                        <name>get_HackSelectors</name>
                    </method>
                    <method>
                        <signature>!13()</signature>
                        <name>get_HashImages</name>
                    </method>
                    <method>
                        <signature>!6()</signature>
                        <name>get_IgnoreImagesWithNonDefaultBackgroundSize</name>
                    </method>
                    <method>
                        <signature>!9()</signature>
                        <name>get_ImageAssembleReferencesToIgnore</name>
                    </method>
                    <method>
                        <signature>!16()</signature>
                        <name>get_ImageAssembleScanDestinationFile</name>
                    </method>
                    <method>
                        <signature>!12()</signature>
                        <name>get_ImageAssemblyPadding</name>
                    </method>
                    <method>
                        <signature>!17()</signature>
                        <name>get_ImageSpritingLogPath</name>
                    </method>
                    <method>
                        <signature>!10()</signature>
                        <name>get_OutputUnit</name>
                    </method>
                    <method>
                        <signature>!11()</signature>
                        <name>get_OutputUnitFactor</name>
                    </method>
                    <method>
                        <signature>!4()</signature>
                        <name>get_ShouldAssembleBackgroundImages</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_ShouldExcludeProperties</name>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_ShouldMergeMediaQueries</name>
                    </method>
                    <method>
                        <signature>!5()</signature>
                        <name>get_ShouldMinify</name>
                    </method>
                    <method>
                        <signature>!3()</signature>
                        <name>get_ShouldOptimize</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_ShouldValidateForLowerCase</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!8</signature>
                        <name>&lt;BannedSelectors&gt;i__Field</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>!15</signature>
                        <name>&lt;ErrorOnInvalidSprite&gt;i__Field</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>!14</signature>
                        <name>&lt;ForcedSpritingImageType&gt;i__Field</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>!7</signature>
                        <name>&lt;HackSelectors&gt;i__Field</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>!13</signature>
                        <name>&lt;HashImages&gt;i__Field</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>!6</signature>
                        <name>&lt;IgnoreImagesWithNonDefaultBackgroundSize&gt;i__Field</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>!9</signature>
                        <name>&lt;ImageAssembleReferencesToIgnore&gt;i__Field</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>!16</signature>
                        <name>&lt;ImageAssembleScanDestinationFile&gt;i__Field</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>!12</signature>
                        <name>&lt;ImageAssemblyPadding&gt;i__Field</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>!17</signature>
                        <name>&lt;ImageSpritingLogPath&gt;i__Field</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>!10</signature>
                        <name>&lt;OutputUnit&gt;i__Field</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>!11</signature>
                        <name>&lt;OutputUnitFactor&gt;i__Field</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>!4</signature>
                        <name>&lt;ShouldAssembleBackgroundImages&gt;i__Field</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;ShouldExcludeProperties&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;ShouldMergeMediaQueries&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!5</signature>
                        <name>&lt;ShouldMinify&gt;i__Field</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>!3</signature>
                        <name>&lt;ShouldOptimize&gt;i__Field</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;ShouldValidateForLowerCase&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!8()</signature>
                        <name>BannedSelectors</name>
                    </property>
                    <property>
                        <signature>!15()</signature>
                        <name>ErrorOnInvalidSprite</name>
                    </property>
                    <property>
                        <signature>!14()</signature>
                        <name>ForcedSpritingImageType</name>
                    </property>
                    <property>
                        <signature>!7()</signature>
                        <name>HackSelectors</name>
                    </property>
                    <property>
                        <signature>!13()</signature>
                        <name>HashImages</name>
                    </property>
                    <property>
                        <signature>!6()</signature>
                        <name>IgnoreImagesWithNonDefaultBackgroundSize</name>
                    </property>
                    <property>
                        <signature>!9()</signature>
                        <name>ImageAssembleReferencesToIgnore</name>
                    </property>
                    <property>
                        <signature>!16()</signature>
                        <name>ImageAssembleScanDestinationFile</name>
                    </property>
                    <property>
                        <signature>!12()</signature>
                        <name>ImageAssemblyPadding</name>
                    </property>
                    <property>
                        <signature>!17()</signature>
                        <name>ImageSpritingLogPath</name>
                    </property>
                    <property>
                        <signature>!10()</signature>
                        <name>OutputUnit</name>
                    </property>
                    <property>
                        <signature>!11()</signature>
                        <name>OutputUnitFactor</name>
                    </property>
                    <property>
                        <signature>!4()</signature>
                        <name>ShouldAssembleBackgroundImages</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>ShouldExcludeProperties</name>
                    </property>
                    <property>
                        <signature>!2()</signature>
                        <name>ShouldMergeMediaQueries</name>
                    </property>
                    <property>
                        <signature>!5()</signature>
                        <name>ShouldMinify</name>
                    </property>
                    <property>
                        <signature>!3()</signature>
                        <name>ShouldOptimize</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>ShouldValidateForLowerCase</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;imageMap&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;ImageAssemblyPadding&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousTypea`2</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_ImageAssemblyPadding</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_imageMap</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;ImageAssemblyPadding&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;imageMap&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!1()</signature>
                        <name>ImageAssemblyPadding</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>imageMap</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>4</arity>
                <genericparameter sequence="0">
                    <name>&lt;sourceDependencies&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;cacheResults&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;children&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="3">
                    <name>&lt;absolutePath&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousTypeb`4</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2, !3)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!3()</signature>
                        <name>get_absolutePath</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_cacheResults</name>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_children</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_sourceDependencies</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!3</signature>
                        <name>&lt;absolutePath&gt;i__Field</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;cacheResults&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;children&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;sourceDependencies&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!3()</signature>
                        <name>absolutePath</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>cacheResults</name>
                    </property>
                    <property>
                        <signature>!2()</signature>
                        <name>children</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>sourceDependencies</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;SpritedImage&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;ImageType&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousTypec`2</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_ImageType</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_SpritedImage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;ImageType&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;SpritedImage&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!1()</signature>
                        <name>ImageType</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>SpritedImage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>3</arity>
                <genericparameter sequence="0">
                    <name>&lt;relativePath&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;preprocessConfig&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;pptu&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousTyped`3</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_pptu</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_preprocessConfig</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_relativePath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;pptu&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;preprocessConfig&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;relativePath&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!2()</signature>
                        <name>pptu</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>preprocessConfig</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>relativePath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>4</arity>
                <genericparameter sequence="0">
                    <name>&lt;rootDirectory&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;directories&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;extensions&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="3">
                    <name>&lt;fileType&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousTypee`4</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2, !3)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_directories</name>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_extensions</name>
                    </method>
                    <method>
                        <signature>!3()</signature>
                        <name>get_fileType</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_rootDirectory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;directories&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;extensions&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!3</signature>
                        <name>&lt;fileType&gt;i__Field</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;rootDirectory&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!1()</signature>
                        <name>directories</name>
                    </property>
                    <property>
                        <signature>!2()</signature>
                        <name>extensions</name>
                    </property>
                    <property>
                        <signature>!3()</signature>
                        <name>fileType</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>rootDirectory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{6FD05D7B-8C3C-4F53-8612-47751BD441FD}</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x60001d0-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000200-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000204-1</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>$$method0x60008bd-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000a9b-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000aa1-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000b5e-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000b77-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000b89-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000bb1-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000c2d-1</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>$$method0x60014f5-1</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ActivationObject</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject, Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;CreateField&gt;b__10</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.ActivationObject)</signature>
                        <name>&lt;set_IsKnownAtCompileTime&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>AddField</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddGlobal</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AnalyzeNonGlobalScope</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AnalyzeScope</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AutoRenameFields</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>CreateField</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string, object, System.Reflection.FieldAttributes)</signature>
                        <name>CreateField</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>CreateInnerField</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string, object, System.Reflection.FieldAttributes)</signature>
                        <name>DeclareField</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeclareScope</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.INameDeclaration, Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>DefineField</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DefineLexicalDeclarations</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DefineVarDeclarations</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string)</signature>
                        <name>FindReference</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.HashSet`1&lt;string&gt;, string)</signature>
                        <name>GenerateAvoidList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>GetParentBlock</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.JSVariableField&gt;()</signature>
                        <name>GetUncrunchedLocals</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.INameReference)</signature>
                        <name>IsIterativeReference</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.INameDeclaration(string)</signature>
                        <name>LexicallyDeclaredName</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ManualRenameFields</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>SingleReferenceVariableField</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>UnreferencedArgument</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField, Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>UnreferencedFunction</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>UnreferencedVariable</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>UnreferencedVariableField</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ValidateGeneratedNames</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.INameDeclaration(string)</signature>
                        <name>VarDeclaredName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Microsoft.Ajax.Utilities.ActivationObject&gt;()</signature>
                        <name>get_ChildScopes</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Existing</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.ParameterDeclaration&gt;()</signature>
                        <name>get_GhostedCatchParameters</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.FunctionObject&gt;()</signature>
                        <name>get_GhostedFunctions</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInWithScope</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsKnownAtCompileTime</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.INameDeclaration&gt;()</signature>
                        <name>get_LexicallyDeclaredNames</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Microsoft.Ajax.Utilities.JSVariableField&gt;()</signature>
                        <name>get_NameTable</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>get_Parent</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.Lookup&gt;()</signature>
                        <name>get_ScopeLookups</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseStrict</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.INameDeclaration&gt;()</signature>
                        <name>get_VarDeclaredNames</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Microsoft.Ajax.Utilities.ActivationObject&gt;)</signature>
                        <name>set_ChildScopes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Existing</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.ParameterDeclaration&gt;)</signature>
                        <name>set_GhostedCatchParameters</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.FunctionObject&gt;)</signature>
                        <name>set_GhostedFunctions</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsInWithScope</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsKnownAtCompileTime</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.INameDeclaration&gt;)</signature>
                        <name>set_LexicallyDeclaredNames</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,Microsoft.Ajax.Utilities.JSVariableField&gt;)</signature>
                        <name>set_NameTable</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject)</signature>
                        <name>set_Parent</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.Lookup&gt;)</signature>
                        <name>set_ScopeLookups</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseStrict</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.INameDeclaration&gt;)</signature>
                        <name>set_VarDeclaredNames</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Microsoft.Ajax.Utilities.ActivationObject&gt;</signature>
                        <name>&lt;ChildScopes&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Existing&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.ParameterDeclaration&gt;</signature>
                        <name>&lt;GhostedCatchParameters&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.FunctionObject&gt;</signature>
                        <name>&lt;GhostedFunctions&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsInWithScope&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.INameDeclaration&gt;</signature>
                        <name>&lt;LexicallyDeclaredNames&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Microsoft.Ajax.Utilities.JSVariableField&gt;</signature>
                        <name>&lt;NameTable&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject</signature>
                        <name>&lt;Parent&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.Lookup&gt;</signature>
                        <name>&lt;ScopeLookups&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.INameDeclaration&gt;</signature>
                        <name>&lt;VarDeclaredNames&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ActivationObject,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.JSVariableField,Microsoft.Ajax.Utilities.JSVariableField&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate11</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_isKnownAtCompileTime</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings</signature>
                        <name>m_settings</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_useStrict</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;Microsoft.Ajax.Utilities.ActivationObject&gt;()</signature>
                        <name>ChildScopes</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Existing</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.ParameterDeclaration&gt;()</signature>
                        <name>GhostedCatchParameters</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.FunctionObject&gt;()</signature>
                        <name>GhostedFunctions</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInWithScope</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsKnownAtCompileTime</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.INameDeclaration&gt;()</signature>
                        <name>LexicallyDeclaredNames</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Microsoft.Ajax.Utilities.JSVariableField&gt;()</signature>
                        <name>NameTable</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>Parent</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.Lookup&gt;()</signature>
                        <name>ScopeLookups</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseStrict</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.INameDeclaration&gt;()</signature>
                        <name>VarDeclaredNames</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ActivationObject/&lt;&gt;c__DisplayClass5</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>&lt;UnreferencedArgument&gt;b__3</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField</signature>
                        <name>variableField</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ActivationObject/&lt;&gt;c__DisplayClass9</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.VariableDeclaration</signature>
                        <name>varDecl</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ActivationObject/&lt;&gt;c__DisplayClassc</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;SingleReferenceVariableField&gt;b__8</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject/&lt;&gt;c__DisplayClass9</signature>
                        <name>CS$&lt;&gt;8__localsa</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Declaration</signature>
                        <name>declaration</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ActivationObject/&lt;&gt;c__DisplayClasse</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;SingleReferenceVariableField&gt;b__7</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject/&lt;&gt;c__DisplayClass9</signature>
                        <name>CS$&lt;&gt;8__localsa</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject/&lt;&gt;c__DisplayClassc</signature>
                        <name>CS$&lt;&gt;8__localsd</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>refNode</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.AjaxMinExtensions</name>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.ICollection`1&lt;!!0&gt;, System.Collections.Generic.ICollection`1&lt;!!0&gt;)</signature>
                        <name>CopyItemsTo</name>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;!!0&gt;(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;, System.Func`2&lt;!!0,!!1&gt;)</signature>
                        <name>DistinctBy</name>
                    </method>
                    <method>
                        <signature>string(string, object[])</signature>
                        <name>FormatInvariant</name>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>!!1(!!0, System.Func`2&lt;!!0,!!1&gt;)</signature>
                        <name>IfNotNull</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(!!0, System.Action`1&lt;!!0&gt;)</signature>
                        <name>IfNotNull</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>IfNullOrWhiteSpace</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsNullOrWhiteSpace</name>
                    </method>
                    <method>
                        <signature>string(string, char)</signature>
                        <name>SubstringUpToFirst</name>
                    </method>
                    <method>
                        <signature>string(float64)</signature>
                        <name>ToStringInvariant</name>
                    </method>
                    <method>
                        <signature>string(float64, string)</signature>
                        <name>ToStringInvariant</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>ToStringInvariant</name>
                    </method>
                    <method>
                        <signature>string(int32, string)</signature>
                        <name>ToStringInvariant</name>
                    </method>
                    <method>
                        <signature>bool(string, System.Globalization.NumberStyles, int32&amp;)</signature>
                        <name>TryParseIntInvariant</name>
                    </method>
                    <method>
                        <signature>bool(string, System.Globalization.NumberStyles, int64&amp;)</signature>
                        <name>TryParseLongInvariant</name>
                    </method>
                    <method>
                        <signature>bool(string, float32&amp;)</signature>
                        <name>TryParseSingleInvariant</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>TSource</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TKey</name>
                </genericparameter>
                <name>Microsoft.Ajax.Utilities.AjaxMinExtensions/&lt;&gt;c__DisplayClass1`2</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>&lt;DistinctBy&gt;b__0</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;!1&gt;</signature>
                        <name>hash</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,!1&gt;</signature>
                        <name>keySelector</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.AnalyzeNodeVisitor</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;Visit&gt;b__1a</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;Visit&gt;b__1b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;Visit&gt;b__23</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;Visit&gt;b__24</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;Visit&gt;b__27</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;Visit&gt;b__28</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>&lt;Visit&gt;b__2b</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>&lt;Visit&gt;b__2c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;Visit&gt;b__36</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;Visit&gt;b__37</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.Var)</signature>
                        <name>AreAssignmentsInVar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>CombineExpressions</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block, int32, Microsoft.Ajax.Utilities.ForNode)</signature>
                        <name>CombineForNodeWithExpression</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block, int32, Microsoft.Ajax.Utilities.ReturnNode)</signature>
                        <name>CombineReturnWithExpression</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block, int32)</signature>
                        <name>CombineTwoExpressions</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block, int32)</signature>
                        <name>CombineWithPreviousExpression</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block, int32, Microsoft.Ajax.Utilities.Var)</signature>
                        <name>CombineWithPreviousVar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>ContainsReference</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator, System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.VariableDeclaration&gt;, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>ConvertAssignmentsToVarDecls</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.UnaryOperator()</signature>
                        <name>CreateVoidNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Var, int32, string)</signature>
                        <name>DeleteNoInits</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>FindLastStatement</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>GetPropertyType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>GuessAtName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IfNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IfConditionExpressionToExpression</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.IfNode(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode&amp;, Microsoft.Ajax.Utilities.AstNode&amp;)</signature>
                        <name>IsIfReturnExpr</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>LabelMatchesParent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>Optimize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Ajax.Utilities.Block, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>PreviousStatementIndex</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>StringSourceIsNotInlineSafe</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>StripDebugStatements</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.Var, int32, string)</signature>
                        <name>VarDeclExists</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Break)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CallNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationOn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ContinueNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DoWhile)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForIn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IfNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Member)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralField)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.RegExpLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ReturnNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Switch)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TryNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UnaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Var)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WhileNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WithNode)</signature>
                        <name>Visit</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.JSVariableField,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1c</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.JSVariableField,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1d</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.JSVariableField,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate25</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.JSVariableField,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate26</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.JSVariableField,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate29</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.JSVariableField,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2a</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ParameterDeclaration,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2d</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ParameterDeclaration,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2e</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.JSVariableField,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate38</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.JSVariableField,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate39</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_encounteredCCOn</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.MatchPropertiesVisitor</signature>
                        <name>m_matchVisitor</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSParser</signature>
                        <name>m_parser</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Stack`1&lt;Microsoft.Ajax.Utilities.ActivationObject&gt;</signature>
                        <name>m_scopeStack</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.AnalyzeNodeVisitor/&lt;&gt;c__DisplayClass9</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;CombineWithPreviousVar&gt;b__3</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;CombineWithPreviousVar&gt;b__4</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;CombineWithPreviousVar&gt;b__5</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Lookup</signature>
                        <name>lookup</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ArrayLiteral</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>&lt;set_Elements&gt;b__4</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>&lt;set_Elements&gt;b__5</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList()</signature>
                        <name>get_Elements</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConstant</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MayHaveIssues</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>set_Elements</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MayHaveIssues</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;MayHaveIssues&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList</signature>
                        <name>m_elements</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList()</signature>
                        <name>Elements</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConstant</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MayHaveIssues</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.AspNetBlockNode</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AspNetBlockText</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsTerminatedByExplicitSemicolon</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AspNetBlockText</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsTerminatedByExplicitSemicolon</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AspNetBlockText&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsTerminatedByExplicitSemicolon&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AspNetBlockText</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsTerminatedByExplicitSemicolon</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.AstNode</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.EncloseBlockType)</signature>
                        <name>EncloseBlock</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>EnumerateNonNullNodes</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;(System.Collections.Generic.IList`1&lt;!!0&gt;)</signature>
                        <name>EnumerateNonNullNodes</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType()</signature>
                        <name>FindPrimitiveType</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ForceToBlock</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>GetFunctionGuess</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToCode</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>UpdateWith</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ContainsInOperator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_Context</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>get_EnclosingScope</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HideFromOutput</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Index</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConstant</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDebuggerStatement</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsExpression</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsWindowLookup</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_LeftHandSide</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Parent</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSParser()</signature>
                        <name>get_Parser</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>get_Precedence</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_TerminatingContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_Context</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HideFromOutput</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Index</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Parent</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>set_Parser</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_TerminatingContext</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;Context&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;HideFromOutput&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Index&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>&lt;Parent&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSParser</signature>
                        <name>&lt;Parser&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>m_terminatingContext</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;</signature>
                        <name>s_emptyChildrenCollection</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ContainsInOperator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>Context</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>EnclosingScope</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HideFromOutput</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Index</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConstant</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDebuggerStatement</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsExpression</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsWindowLookup</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>LeftHandSide</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Parent</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSParser()</signature>
                        <name>Parser</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>Precedence</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>TerminatingContext</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <name>Microsoft.Ajax.Utilities.AstNode/&lt;EnumerateNonNullNodes&gt;d__0`1</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Microsoft.Ajax.Utilities.AstNode&gt;.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Microsoft.Ajax.Utilities.AstNode&gt;.get_Current</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;3__nodes</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ndx&gt;5__1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;!0&gt;</signature>
                        <name>nodes</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Microsoft.Ajax.Utilities.AstNode&gt;.Current</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.AstNodeList</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;RemoveAt&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;ReplaceChild&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Item&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>Append</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList(int32, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>Insert</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsSingleConstantArgument</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>RemoveAt</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConstant</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>get_Precedence</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SingleConstantArgument</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_TerminatingContext</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;</signature>
                        <name>m_list</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConstant</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode(int32)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>Precedence</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SingleConstantArgument</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>TerminatingContext</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.BinaryOperator</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;get_IsConstant&gt;b__6</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;get_IsConstant&gt;b__7</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;get_TerminatingContext&gt;b__4</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Operand1&gt;b__0</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Operand1&gt;b__1</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Operand2&gt;b__2</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Operand2&gt;b__3</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType()</signature>
                        <name>FindPrimitiveType</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>GetFunctionGuess</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SwapOperands</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ContainsInOperator</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAssign</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConstant</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_LeftHandSide</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Operand1</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Operand2</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_OperatorContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken()</signature>
                        <name>get_OperatorToken</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>get_Precedence</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_TerminatingContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Operand1</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Operand2</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_OperatorContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>set_OperatorToken</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;OperatorContext&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>&lt;OperatorToken&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.AstNode,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate8</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.AstNode,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate9</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_operand1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_operand2</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ContainsInOperator</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAssign</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConstant</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>LeftHandSide</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Operand1</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Operand2</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>OperatorContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSToken()</signature>
                        <name>OperatorToken</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>Precedence</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>TerminatingContext</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Block</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;Clear&gt;b__5</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;RemoveAt&gt;b__3</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;ReplaceChild&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Item&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>Append</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.EncloseBlockType)</signature>
                        <name>EncloseBlock</name>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IndexOf</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>Insert</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>InsertAfter</name>
                    </method>
                    <method>
                        <signature>void(int32, System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;)</signature>
                        <name>InsertRange</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>RemoveAt</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveLast</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.BlockScope()</signature>
                        <name>get_BlockScope</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_BraceOnNewLine</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>get_EnclosingScope</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ForceBraces</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDebuggerStatement</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsExpression</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_TerminatingContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BlockScope)</signature>
                        <name>set_BlockScope</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_BraceOnNewLine</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ForceBraces</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;BraceOnNewLine&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ForceBraces&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.BlockScope</signature>
                        <name>m_blockScope</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;</signature>
                        <name>m_list</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.BlockScope()</signature>
                        <name>BlockScope</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>BraceOnNewLine</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>EnclosingScope</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ForceBraces</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDebuggerStatement</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsExpression</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode(int32)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>TerminatingContext</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.BlockScope</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string, object, System.Reflection.FieldAttributes)</signature>
                        <name>CreateField</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeclareScope</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_Context</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>m_context</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>Context</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.BlockStart</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.BlockStart</signature>
                        <name>NewLine</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.BlockStart</signature>
                        <name>SameLine</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.BlockStart</signature>
                        <name>UseSource</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Break</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Label</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_LabelContext</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NestLevel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Label</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_LabelContext</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NestLevel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Label&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;LabelContext&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;NestLevel&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Label</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>LabelContext</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NestLevel</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CallNode</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>&lt;set_Arguments&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>&lt;set_Arguments&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Function&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Function&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList()</signature>
                        <name>get_Arguments</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Function</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_InBrackets</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConstructor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDebuggerStatement</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsExpression</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_LeftHandSide</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>get_Precedence</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>set_Arguments</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Function</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_InBrackets</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsConstructor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;InBrackets&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsConstructor&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList</signature>
                        <name>m_arguments</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_function</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList()</signature>
                        <name>Arguments</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Function</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>InBrackets</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConstructor</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDebuggerStatement</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsExpression</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>LeftHandSide</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>Precedence</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CatchScope</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.CodeSettings, Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string, object, System.Reflection.FieldAttributes)</signature>
                        <name>CreateField</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ParameterDeclaration()</signature>
                        <name>get_CatchParameter</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>set_CatchParameter</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ParameterDeclaration</signature>
                        <name>&lt;CatchParameter&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ParameterDeclaration()</signature>
                        <name>CatchParameter</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CodeSettings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>AddDebugLookup</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>AddKnownGlobal</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>AddNoAutoRename</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>AddRenamePair</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearRenamePairs</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetNewName</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.TreeModifications)</signature>
                        <name>IsModificationAllowed</name>
                    </method>
                    <method>
                        <signature>int32(string[])</signature>
                        <name>SetDebugLookups</name>
                    </method>
                    <method>
                        <signature>int32(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>SetDebugNamespaces</name>
                    </method>
                    <method>
                        <signature>int32(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>SetKnownGlobalIdentifiers</name>
                    </method>
                    <method>
                        <signature>int32(string[])</signature>
                        <name>SetKnownGlobalNames</name>
                    </method>
                    <method>
                        <signature>int32(string[])</signature>
                        <name>SetNoAutoRename</name>
                    </method>
                    <method>
                        <signature>int32(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>SetNoAutoRenames</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AlwaysEscapeNonAscii</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CollapseToLiteral</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ConstStatementsMozilla</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_DebugLookupCollection</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DebugLookupList</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>get_DebugLookups</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ErrorIfNotInlineSafe</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_EvalLiteralExpressions</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.EvalTreatment()</signature>
                        <name>get_EvalTreatment</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_EvalsAreSafe</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JavaScriptFormat()</signature>
                        <name>get_Format</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasRenamePairs</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IgnoreConditionalCompilation</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IgnorePreprocessorDefines</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_InlineSafeStrings</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_KnownGlobalCollection</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>get_KnownGlobalNames</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KnownGlobalNamesList</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.LocalRenaming()</signature>
                        <name>get_LocalRenaming</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MacSafariQuirks</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ManualRenamesProperties</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MinifyCode</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_NoAutoRenameCollection</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>get_NoAutoRenameIdentifiers</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoAutoRenameList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PreprocessOnly</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PreserveFunctionNames</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PreserveImportantComments</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_QuoteObjectLiteralProperties</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RemoveFunctionExpressionNames</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RemoveUnneededCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RenamePairs</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ReorderScopeDeclarations</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JavaScriptSourceMode()</signature>
                        <name>get_SourceMode</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_StrictMode</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_StripDebugStatements</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ISourceMap()</signature>
                        <name>get_SymbolsMap</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AlwaysEscapeNonAscii</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CollapseToLiteral</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ConstStatementsMozilla</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DebugLookupList</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ErrorIfNotInlineSafe</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_EvalLiteralExpressions</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.EvalTreatment)</signature>
                        <name>set_EvalTreatment</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_EvalsAreSafe</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JavaScriptFormat)</signature>
                        <name>set_Format</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IgnoreConditionalCompilation</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IgnorePreprocessorDefines</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_InlineSafeStrings</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_KnownGlobalNamesList</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LocalRenaming)</signature>
                        <name>set_LocalRenaming</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MacSafariQuirks</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ManualRenamesProperties</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MinifyCode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NoAutoRenameList</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_PreprocessOnly</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_PreserveFunctionNames</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_PreserveImportantComments</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_QuoteObjectLiteralProperties</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RemoveFunctionExpressionNames</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RemoveUnneededCode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RenamePairs</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ReorderScopeDeclarations</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JavaScriptSourceMode)</signature>
                        <name>set_SourceMode</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_StrictMode</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_StripDebugStatements</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ISourceMap)</signature>
                        <name>set_SymbolsMap</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AlwaysEscapeNonAscii&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;CollapseToLiteral&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ConstStatementsMozilla&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ErrorIfNotInlineSafe&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;EvalLiteralExpressions&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.EvalTreatment</signature>
                        <name>&lt;EvalTreatment&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JavaScriptFormat</signature>
                        <name>&lt;Format&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IgnoreConditionalCompilation&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IgnorePreprocessorDefines&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;InlineSafeStrings&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.LocalRenaming</signature>
                        <name>&lt;LocalRenaming&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;MacSafariQuirks&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ManualRenamesProperties&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;PreprocessOnly&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;PreserveFunctionNames&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;PreserveImportantComments&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;QuoteObjectLiteralProperties&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;RemoveFunctionExpressionNames&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;RemoveUnneededCode&gt;k__BackingField</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ReorderScopeDeclarations&gt;k__BackingField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JavaScriptSourceMode</signature>
                        <name>&lt;SourceMode&gt;k__BackingField</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;StrictMode&gt;k__BackingField</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;StripDebugStatements&gt;k__BackingField</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ISourceMap</signature>
                        <name>&lt;SymbolsMap&gt;k__BackingField</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>m_debugLookups</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>m_identifierReplacementMap</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>m_knownGlobals</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_minify</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>m_noRenameSet</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AlwaysEscapeNonAscii</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CollapseToLiteral</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ConstStatementsMozilla</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>DebugLookupCollection</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DebugLookupList</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>DebugLookups</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ErrorIfNotInlineSafe</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>EvalLiteralExpressions</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.EvalTreatment()</signature>
                        <name>EvalTreatment</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>EvalsAreSafe</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JavaScriptFormat()</signature>
                        <name>Format</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasRenamePairs</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IgnoreConditionalCompilation</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IgnorePreprocessorDefines</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>InlineSafeStrings</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>KnownGlobalCollection</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>KnownGlobalNames</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KnownGlobalNamesList</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.LocalRenaming()</signature>
                        <name>LocalRenaming</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MacSafariQuirks</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ManualRenamesProperties</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MinifyCode</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>NoAutoRenameCollection</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>NoAutoRenameIdentifiers</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoAutoRenameList</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>PreprocessOnly</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>PreserveFunctionNames</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>PreserveImportantComments</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>QuoteObjectLiteralProperties</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RemoveFunctionExpressionNames</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RemoveUnneededCode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RenamePairs</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ReorderScopeDeclarations</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JavaScriptSourceMode()</signature>
                        <name>SourceMode</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>StrictMode</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>StripDebugStatements</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ISourceMap()</signature>
                        <name>SymbolsMap</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ColorSlice</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_AllColorNames</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_HexShorterThanName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_NameShorterThanHex</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_StrictHexShorterThanNameAndAllNonStrict</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_StrictNameShorterThanHex</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ColorSlice/ColorName[]</signature>
                        <name>_colorArray</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>AllColorNames</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>HexShorterThanName</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>NameShorterThanHex</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>StrictHexShorterThanNameAndAllNonStrict</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>StrictNameShorterThanHex</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ColorSlice/ColorName</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Hex</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Strict</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Hex</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Strict</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Hex&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Strict&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Hex</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Strict</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ColorSlice/NestedAllColorNames</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ColorSlice/ColorName(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__b3</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__b4</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__b5</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__b6</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(Microsoft.Ajax.Utilities.ColorSlice)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,Microsoft.Ajax.Utilities.ColorSlice/ColorName&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb7</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb8</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb9</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateba</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>Data</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ColorSlice/NestedFactory</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ColorSlice</signature>
                        <name>Instance</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ColorSlice/NestedHexShorterThanName</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__a3</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__a4</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__a5</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__a6</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(Microsoft.Ajax.Utilities.ColorSlice)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatea7</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatea8</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatea9</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateaa</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>Data</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ColorSlice/NestedNameShorterThanHex</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__93</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__94</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__95</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__96</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(Microsoft.Ajax.Utilities.ColorSlice)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate97</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate98</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate99</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate9a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>Data</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ColorSlice/NestedStrictHexShorterThanNameAndAllNonStrict</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__ab</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__ac</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__ad</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__ae</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(Microsoft.Ajax.Utilities.ColorSlice)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateaf</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>Data</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ColorSlice/NestedStrictNameShorterThanHex</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__9b</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__9c</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__9d</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ColorSlice/ColorName)</signature>
                        <name>&lt;Create&gt;b__9e</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(Microsoft.Ajax.Utilities.ColorSlice)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate9f</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatea0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatea1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ColorSlice/ColorName,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatea2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>Data</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CommaOperator</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>CombineWithComma</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CommonSettings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ResourceStrings)</signature>
                        <name>AddResourceStrings</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.ResourceStrings&gt;)</signature>
                        <name>AddResourceStrings</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearResourceStrings</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Indent</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ResourceStrings)</signature>
                        <name>RemoveResourceStrings</name>
                    </method>
                    <method>
                        <signature>int32(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>SetIgnoreErrors</name>
                    </method>
                    <method>
                        <signature>int32(string[])</signature>
                        <name>SetIgnoreErrors</name>
                    </method>
                    <method>
                        <signature>int32(string[])</signature>
                        <name>SetPreprocessorDefines</name>
                    </method>
                    <method>
                        <signature>int32(System.Collections.Generic.IDictionary`2&lt;string,string&gt;)</signature>
                        <name>SetPreprocessorValues</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Unindent</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowEmbeddedAspNetBlocks</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.BlockStart()</signature>
                        <name>get_BlocksStartOnSameLine</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IgnoreAllErrors</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>get_IgnoreErrorCollection</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IgnoreErrorList</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>get_IgnoreErrors</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_IndentSize</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_KillSwitch</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_LineBreakThreshold</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LineTerminator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OutputMode()</signature>
                        <name>get_OutputMode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PreprocessorDefineList</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>get_PreprocessorDefines</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;()</signature>
                        <name>get_PreprocessorValues</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Microsoft.Ajax.Utilities.ResourceStrings&gt;()</signature>
                        <name>get_ResourceStrings</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TabSpaces</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_TermSemicolons</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowEmbeddedAspNetBlocks</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BlockStart)</signature>
                        <name>set_BlocksStartOnSameLine</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IgnoreAllErrors</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.ICollection`1&lt;string&gt;)</signature>
                        <name>set_IgnoreErrorCollection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_IgnoreErrorList</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_IndentSize</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_KillSwitch</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_LineBreakThreshold</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.OutputMode)</signature>
                        <name>set_OutputMode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PreprocessorDefineList</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,string&gt;)</signature>
                        <name>set_PreprocessorValues</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Microsoft.Ajax.Utilities.ResourceStrings&gt;)</signature>
                        <name>set_ResourceStrings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_TermSemicolons</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AllowEmbeddedAspNetBlocks&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.BlockStart</signature>
                        <name>&lt;BlocksStartOnSameLine&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IgnoreAllErrors&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;</signature>
                        <name>&lt;IgnoreErrorCollection&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;IndentSize&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;KillSwitch&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;LineBreakThreshold&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OutputMode</signature>
                        <name>&lt;OutputMode&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;</signature>
                        <name>&lt;PreprocessorValues&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Microsoft.Ajax.Utilities.ResourceStrings&gt;</signature>
                        <name>&lt;ResourceStrings&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;TermSemicolons&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_indentLevel</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AllowEmbeddedAspNetBlocks</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.BlockStart()</signature>
                        <name>BlocksStartOnSameLine</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IgnoreAllErrors</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>IgnoreErrorCollection</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>IgnoreErrorList</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>IgnoreErrors</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>IndentSize</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>KillSwitch</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>LineBreakThreshold</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LineTerminator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.OutputMode()</signature>
                        <name>OutputMode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PreprocessorDefineList</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>PreprocessorDefines</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;()</signature>
                        <name>PreprocessorValues</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;Microsoft.Ajax.Utilities.ResourceStrings&gt;()</signature>
                        <name>ResourceStrings</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TabSpaces</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>TermSemicolons</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Conditional</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__0</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__1</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_FalseExpression&gt;b__4</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_FalseExpression&gt;b__5</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_TrueExpression&gt;b__2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_TrueExpression&gt;b__3</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType()</signature>
                        <name>FindPrimitiveType</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SwapBranches</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_ColonContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Condition</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_FalseExpression</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_LeftHandSide</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>get_Precedence</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_QuestionContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_TrueExpression</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_ColonContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Condition</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_FalseExpression</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_QuestionContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_TrueExpression</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;ColonContext&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;QuestionContext&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_condition</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_falseExpression</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_trueExpression</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>ColonContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Condition</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>FalseExpression</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>LeftHandSide</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>Precedence</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>QuestionContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>TrueExpression</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ConditionalCompilationComment</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_Statements&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_Statements&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>Append</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>get_Statements</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>set_Statements</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Block</signature>
                        <name>m_statements</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>Statements</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ConditionalCompilationElse</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ConditionalCompilationElseIf</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Condition</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Condition</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_condition</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Condition</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ConditionalCompilationEnd</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ConditionalCompilationIf</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Condition</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Condition</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_condition</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Condition</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ConditionalCompilationOn</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ConditionalCompilationSet</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Value&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Value&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VariableName</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Value</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_VariableName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;VariableName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_value</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Value</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>VariableName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ConditionalCompilationStatement</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ConstStatement</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ConstantWrapper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(object, Microsoft.Ajax.Utilities.PrimitiveType, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;IsOnlyDecimalDigits&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>&lt;IsOnlyDecimalDigits&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.Text.StringBuilder&amp;)</signature>
                        <name>AddEscape</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, bool, bool, bool)</signature>
                        <name>EscapeString</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType()</signature>
                        <name>FindPrimitiveType</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsOnlyDecimalDigits</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(float64)</signature>
                        <name>NumberIsOkayToCombine</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>OkayToDoubleQuote</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ToBoolean</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ToInt32</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>ToInteger</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>ToNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>ToUInt32</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsBooleanLiteral</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConstant</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsExactInteger</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFiniteNumericLiteral</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInfinity</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsIntegerLiteral</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNaN</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNegativeZero</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNotOneOrPositiveZero</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNumericLiteral</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsOkayToCombine</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsOtherDecimal</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsParameterToRegExp</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSpecialNumeric</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsStringLiteral</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsZero</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MayHaveIssues</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType()</signature>
                        <name>get_PrimitiveType</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_StringContainsAspNetReplacement</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsParameterToRegExp</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MayHaveIssues</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.PrimitiveType)</signature>
                        <name>set_PrimitiveType</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Value</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsParameterToRegExp&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;MayHaveIssues&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType</signature>
                        <name>&lt;PrimitiveType&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;char,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_aspNetSubstitution</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_hexNumberFormat</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsBooleanLiteral</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConstant</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsExactInteger</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFiniteNumericLiteral</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInfinity</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsIntegerLiteral</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNaN</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNegativeZero</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNotOneOrPositiveZero</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNumericLiteral</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsOkayToCombine</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsOtherDecimal</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsParameterToRegExp</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSpecialNumeric</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsStringLiteral</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsZero</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MayHaveIssues</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType()</signature>
                        <name>PrimitiveType</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>StringContainsAspNetReplacement</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ConstantWrapperPP</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ForceComments</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VarName</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ForceComments</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_VarName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ForceComments&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;VarName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>ForceComments</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>VarName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Context</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DocumentContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DocumentContext, int32, int32, int32, int32, int32, int32, Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ChangeFileContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>CombineWith</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>FlattenToEnd</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>FlattenToStart</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSError)</signature>
                        <name>HandleError</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSError, bool)</signature>
                        <name>HandleError</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>IsBefore</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>ReportUndefined</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>UpdateWith</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Code</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.DocumentContext()</signature>
                        <name>get_Document</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EndColumn</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EndLineNumber</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EndLinePosition</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EndPosition</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasCode</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_OutputColumn</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_OutputLine</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SourceOffsetEnd</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SourceOffsetStart</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StartColumn</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StartLineNumber</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StartLinePosition</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StartPosition</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken()</signature>
                        <name>get_Token</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DocumentContext)</signature>
                        <name>set_Document</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_EndLineNumber</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_EndLinePosition</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_EndPosition</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_OutputColumn</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_OutputLine</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SourceOffsetEnd</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SourceOffsetStart</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_StartLineNumber</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_StartLinePosition</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_StartPosition</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>set_Token</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.DocumentContext</signature>
                        <name>&lt;Document&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;EndLineNumber&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;EndLinePosition&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;EndPosition&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;OutputColumn&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;OutputLine&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;SourceOffsetEnd&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;SourceOffsetStart&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;StartLineNumber&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;StartLinePosition&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;StartPosition&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>&lt;Token&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Code</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.DocumentContext()</signature>
                        <name>Document</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>EndColumn</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>EndLineNumber</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>EndLinePosition</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>EndPosition</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasCode</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>OutputColumn</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>OutputLine</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SourceOffsetEnd</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SourceOffsetStart</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>StartColumn</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>StartLineNumber</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>StartLinePosition</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>StartPosition</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSToken()</signature>
                        <name>Token</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ContextError</name>
                <methodlist>
                    <method>
                        <signature>void(bool, int32, string, string, string, string, int32, int32, int32, int32, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EndColumn</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EndLine</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_File</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HelpKeyword</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Message</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Severity</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StartColumn</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StartLine</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Subcategory</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_EndColumn</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_EndLine</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ErrorCode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_File</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_HelpKeyword</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsError</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Message</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Severity</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_StartColumn</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_StartLine</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Subcategory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;EndColumn&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;EndLine&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ErrorCode&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;File&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;HelpKeyword&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsError&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Message&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Severity&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;StartColumn&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;StartLine&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Subcategory&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>EndColumn</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>EndLine</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorCode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>File</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HelpKeyword</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Message</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Severity</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>StartColumn</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>StartLine</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Subcategory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ContinueNode</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Label</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_LabelContext</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NestLevel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Label</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_LabelContext</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NestLevel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Label&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;LabelContext&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;NestLevel&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Label</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>LabelContext</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NestLevel</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CrunchEnumerator</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>CrunchedLabel</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GenerateNameFromNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>NextName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FirstLetters</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PartLetters</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FirstLetters</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PartLetters</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>m_currentName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>m_skipNames</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>s_varFirstLetters</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>s_varPartLetters</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FirstLetters</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PartLetters</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssColor</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssColor</signature>
                        <name>Hex</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssColor</signature>
                        <name>Major</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssColor</signature>
                        <name>Strict</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssComment</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssComment</signature>
                        <name>All</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssComment</signature>
                        <name>Hacks</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssComment</signature>
                        <name>Important</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssComment</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssContext</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Position, Microsoft.Ajax.Utilities.Position)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Advance</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssContext()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Position()</signature>
                        <name>get_End</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Position()</signature>
                        <name>get_Start</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Position</signature>
                        <name>m_end</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Position</signature>
                        <name>m_start</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Position()</signature>
                        <name>End</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Position()</signature>
                        <name>Start</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssErrorCode</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ColorCanBeCollapsed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>DecimalNoDigit</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>DeclarationIgnored</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>DeclarationIgnoredFormat</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>DuplicateNamespaceDeclaration</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>EquivalentNumbers</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedCharset</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedClosingBrace</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedClosingBracket</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedClosingParenthesis</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedColon</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedComma</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedCommaOrOpenBrace</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedCommaOrSemicolon</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedEndOfFile</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedEqualSign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedExpression</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedFunction</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedHexColor</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedIdentifier</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedIdentifierOrString</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedImport</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedMediaFeature</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedMediaIdentifier</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedMediaQuery</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedMediaQueryExpression</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedNamespace</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedNumber</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedOpenBrace</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedOpenParenthesis</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedPercentageFromOrTo</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedProduct</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedProgId</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedRgbNumberOrPercentage</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedSelector</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedSemicolon</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedSemicolonOrClosingBrace</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedSemicolonOrOpenBrace</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedSum</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedTerm</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpectedUnit</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ExpressionError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>FallbackEncodingFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>HackGeneratesInvalidCss</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>HashAfterUnaryNotAllowed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>HighSurrogateNoLow</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>InvalidLowSurrogate</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>InvalidUnicodeRange</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>MediaQueryRequiresSpace</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>NoError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ParserSubsystem</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>PossibleCharsetError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>PossibleInvalidClassName</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ProgIdIEOnly</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>ScannerSubsystem</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>TokenAfterUnaryNotAllowed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UndeclaredNamespace</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnderscoreNotValid</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnexpectedAtKeyword</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnexpectedCharset</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnexpectedDimension</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnexpectedEndOfFile</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnexpectedEscape</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnexpectedFunction</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnexpectedNumberCharacter</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnexpectedStringCharacter</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnexpectedToken</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnknownCharacterEncoding</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnknownError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnnecessaryUnits</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnterminatedComment</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssErrorCode</signature>
                        <name>UnterminatedString</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssErrorEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CssException, Microsoft.Ajax.Utilities.ContextError)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ContextError()</signature>
                        <name>get_Error</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssException()</signature>
                        <name>get_Exception</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ContextError)</signature>
                        <name>set_Error</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CssException)</signature>
                        <name>set_Exception</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ContextError</signature>
                        <name>&lt;Error&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssException</signature>
                        <name>&lt;Exception&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ContextError()</signature>
                        <name>Error</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.CssException()</signature>
                        <name>Exception</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssException</name>
                <methodlist>
                    <method>
                        <signature>void(int32, string, int32, int32, int32, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Char</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Error</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Line</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Message</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Originator</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Severity</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Char</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Error</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Line</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Message</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Originator</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Severity</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Char&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Error&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Line&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Message&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Originator&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Severity&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Char</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Error</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Line</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Message</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Originator</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Severity</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssParser</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;NeedsSpaceAfter&gt;b__a</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;NeedsSpaceBefore&gt;b__8</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, Microsoft.Ajax.Utilities.CssScannerErrorEventArgs)</signature>
                        <name>&lt;Parse&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Microsoft.Ajax.Utilities.CssScannerContextChangeEventArgs)</signature>
                        <name>&lt;Parse&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AddNewLine</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Append</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(object, Microsoft.Ajax.Utilities.TokenType)</signature>
                        <name>Append</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>AppendCurrent</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>CommentContainsText</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(string, Microsoft.Ajax.Utilities.CssColor, bool)</signature>
                        <name>CrunchHexColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Text.StringBuilder, char)</signature>
                        <name>EscapeCharacter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetRoot</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSeverityString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>HandleCharset</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Indent</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>MightContainColorNames</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>NeedsSpaceAfter</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>NeedsSpaceBefore</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NewLine</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.TokenType()</signature>
                        <name>NextRawToken</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>NextSignificantToken</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.TokenType()</signature>
                        <name>NextToken</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>NormalizeImportantComment</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>NormalizedValueReplacementComment</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CssException)</signature>
                        <name>OnCssError</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseAspNetBlock</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseAtKeyword</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseAttrib</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseCalc</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseCharset</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseClass</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseCombinator</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseDeclaration</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed(bool)</signature>
                        <name>ParseDeclarationBlock</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed(bool)</signature>
                        <name>ParseDeclarationList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseElementName</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseExpr</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseExpression</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseExpressionFunction</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseFontFace</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseFunction</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseFunctionParameters</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseHexcolor</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseImport</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ParseKeyFrameBlocks</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseKeyFrameSelectors</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseKeyFrames</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseMargin</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseMedia</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed(bool)</signature>
                        <name>ParseMediaQuery</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ParseMediaQueryExpression</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed(bool)</signature>
                        <name>ParseMediaQueryList</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseMinMax</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseNamespace</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseOperator</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParsePage</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParsePrio</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseProduct</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseProgId</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParsePseudo</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParsePseudoPage</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseRgb</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseRule</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ParseSCDOCDCComments</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseSelector</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseSimpleSelector</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseStylesheet</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseSum</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed(bool)</signature>
                        <name>ParseTerm</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed()</signature>
                        <name>ParseUnit</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Ajax.Utilities.CssErrorCode, Microsoft.Ajax.Utilities.CssContext, object[])</signature>
                        <name>ReportError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Ajax.Utilities.CssErrorCode, object[])</signature>
                        <name>ReportError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>SkipIfSpace</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipSemicolons</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipSpace</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipSpaceComment</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipToClose</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipToEndOfDeclaration</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipToEndOfStatement</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Unindent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ValidateNamespace</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.CssErrorEventArgs&gt;)</signature>
                        <name>add_CssError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentTokenText</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.TokenType()</signature>
                        <name>get_CurrentTokenType</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings()</signature>
                        <name>get_JSSettings</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssSettings()</signature>
                        <name>get_Settings</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.CssErrorEventArgs&gt;)</signature>
                        <name>remove_CssError</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>set_JSSettings</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CssSettings)</signature>
                        <name>set_Settings</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileContext&gt;k__BackingField</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssSettings</signature>
                        <name>&lt;Settings&gt;k__BackingField</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate9</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.CssErrorEventArgs&gt;</signature>
                        <name>CssError</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssToken</signature>
                        <name>m_currentToken</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_encounteredNewLine</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_forceNewLine</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings</signature>
                        <name>m_jsSettings</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_lastOutputString</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lineLength</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_mightNeedSpace</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>m_namespaces</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_noColorAbbreviation</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_noOutput</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_outputNewLine</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Text.StringBuilder</signature>
                        <name>m_parsed</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_parsingColorValue</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssScanner</signature>
                        <name>m_scanner</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_skippedSpace</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_valueReplacement</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_regexHack1</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_regexHack2</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_regexHack3</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_regexHack4</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_regexHack5</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_regexHack6</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_regexHack7</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_rrggbb</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_valueReplacement</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_vendorSpecific</name>
                        <newname>o</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentTokenText</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.TokenType()</signature>
                        <name>CurrentTokenType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings()</signature>
                        <name>JSSettings</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.CssSettings()</signature>
                        <name>Settings</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.CssErrorEventArgs&gt;</signature>
                        <name>CssError</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssParser/&lt;&gt;c__DisplayClass6</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, Microsoft.Ajax.Utilities.JScriptExceptionEventArgs)</signature>
                        <name>&lt;ParseExpressionFunction&gt;b__5</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssParser</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>containsErrors</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssParser/Parsed</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed</signature>
                        <name>Empty</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed</signature>
                        <name>False</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssParser/Parsed</signature>
                        <name>True</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssScanner</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.TextReader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>ConvertUtf32ToUtf16</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>char()</signature>
                        <name>DirectiveNextChar</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>DirectiveScanInteger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DirectiveSkipSpace</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetEscape</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetIdent</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetName</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNewline</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNmChar</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNmStart</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNum</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetString</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetUnicode</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>int32(bool&amp;)</signature>
                        <name>GetUnicodeEncodingValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetUrl</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetW</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32(char)</signature>
                        <name>HValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsD</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsH</name>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsNmChar</name>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsNonAscii</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsSpace</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NextChar</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>NextToken</name>
                    </method>
                    <method>
                        <signature>void(string, int32, int32)</signature>
                        <name>OnContextChange</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CssException)</signature>
                        <name>OnScannerError</name>
                    </method>
                    <method>
                        <signature>char()</signature>
                        <name>PeekChar</name>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>PushChar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>PushString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ReadString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Ajax.Utilities.CssErrorCode, object[])</signature>
                        <name>ReportError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanAspNetBlock</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanAtKeyword</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanCDC</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanCDO</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanComment</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanDashMatch</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanHash</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanIdent</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanImportant</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanIncludes</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanNum</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanPrefixMatch</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanProgId</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanString</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanSubstringMatch</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanSuffixMatch</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanUnicodeRange</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssToken()</signature>
                        <name>ScanUrl</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(System.Text.StringBuilder)</signature>
                        <name>SkipAspNetBlock</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipToNextLineWithoutUpdate</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.CssScannerContextChangeEventArgs&gt;)</signature>
                        <name>add_ContextChange</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.CssScannerErrorEventArgs&gt;)</signature>
                        <name>add_ScannerError</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowEmbeddedAspNetBlocks</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_EndOfFile</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_GotEndOfLine</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RawNumber</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.CssScannerContextChangeEventArgs&gt;)</signature>
                        <name>remove_ContextChange</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.CssScannerErrorEventArgs&gt;)</signature>
                        <name>remove_ScannerError</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowEmbeddedAspNetBlocks</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_GotEndOfLine</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AllowEmbeddedAspNetBlocks&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;GotEndOfLine&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.CssScannerContextChangeEventArgs&gt;</signature>
                        <name>ContextChange</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.CssScannerErrorEventArgs&gt;</signature>
                        <name>ScannerError</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c_commentEnd</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c_commentStart</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c_dashMatch</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c_prefixMatch</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c_scanIncludes</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c_substringMatch</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c_suffixMatch</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssContext</signature>
                        <name>m_context</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>m_currentChar</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_isAtEOF</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_rawNumber</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_readAhead</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.IO.TextReader</signature>
                        <name>m_reader</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_leadingZeros</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_sourceDirective</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_trailingZeros</name>
                        <newname>n</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AllowEmbeddedAspNetBlocks</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>EndOfFile</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>GotEndOfLine</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RawNumber</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.CssScannerContextChangeEventArgs&gt;</signature>
                        <name>ContextChange</name>
                    </event>
                    <event>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.CssScannerErrorEventArgs&gt;</signature>
                        <name>ScannerError</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssScannerContextChangeEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileContext</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileContext</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileContext&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>FileContext</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssScannerErrorEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CssException)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssException()</signature>
                        <name>get_Exception</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CssException)</signature>
                        <name>set_Exception</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssException</signature>
                        <name>&lt;Exception&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.CssException()</signature>
                        <name>Exception</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssSettings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssSettings()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssColor()</signature>
                        <name>get_ColorNames</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssComment()</signature>
                        <name>get_CommentMode</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssType()</signature>
                        <name>get_CssType</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MinifyExpressions</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CssColor)</signature>
                        <name>set_ColorNames</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CssComment)</signature>
                        <name>set_CommentMode</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CssType)</signature>
                        <name>set_CssType</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MinifyExpressions</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssColor</signature>
                        <name>&lt;ColorNames&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssComment</signature>
                        <name>&lt;CommentMode&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssType</signature>
                        <name>&lt;CssType&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;MinifyExpressions&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.CssColor()</signature>
                        <name>ColorNames</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.CssComment()</signature>
                        <name>CommentMode</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.CssType()</signature>
                        <name>CssType</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MinifyExpressions</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssStrings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ColorCanBeCollapsed</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DecimalNoDigit</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DeclarationIgnored</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DeclarationIgnoredFormat</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DuplicateNamespaceDeclaration</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EquivalentNumbers</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedCharset</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedClosingBrace</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedClosingBracket</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedClosingParen</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedColon</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedComma</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedCommaOrOpenBrace</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedCommaOrSemicolon</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedEndOfFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedEqualSign</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedExpression</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedFunction</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedHexColor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedIdentifier</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedIdentifierOrString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedImport</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedMediaFeature</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedMediaIdentifier</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedMediaQuery</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedMediaQueryExpression</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedNamespace</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedOpenBrace</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedOpenParen</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedPercentageFromOrTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedProduct</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedProgId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedRgbNumberOrPercentage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedSelector</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedSemicolon</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedSemicolonOrClosingBrace</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedSemicolonOrOpenBrace</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedSum</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedTerm</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedUnit</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpressionError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FallbackEncodingFailed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HackGeneratesInvalidCSS</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HashAfterUnaryNotAllowed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HighSurrogateNoLow</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InvalidLowSurrogate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InvalidUnicodeRange</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MediaQueryRequiresSpace</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ParserSubsystem</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PossibleCharsetError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PossibleInvalidClassName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProgIdIEOnly</name>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ScannerSubsystem</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Severity0</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Severity1</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Severity2</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Severity3</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Severity4</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SeverityUnknown</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TokenAfterUnaryNotAllowed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UndeclaredNamespace</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnderscoreNotValid</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnexpectedAtKeyword</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnexpectedCharset</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnexpectedDimension</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnexpectedEndOfFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnexpectedEscape</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnexpectedFunction</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnexpectedNumberCharacter</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnexpectedStringCharacter</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnexpectedToken</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnknownCharacterEncoding</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnknownError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnnecessaryUnits</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnterminatedComment</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnterminatedString</name>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ColorCanBeCollapsed</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DecimalNoDigit</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DeclarationIgnored</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DeclarationIgnoredFormat</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DuplicateNamespaceDeclaration</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>EquivalentNumbers</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedCharset</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedClosingBrace</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedClosingBracket</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedClosingParen</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedColon</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedComma</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedCommaOrOpenBrace</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedCommaOrSemicolon</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedEndOfFile</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedEqualSign</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedExpression</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedFunction</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedHexColor</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedIdentifier</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedIdentifierOrString</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedImport</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedMediaFeature</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedMediaIdentifier</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedMediaQuery</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedMediaQueryExpression</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedNamespace</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedNumber</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedOpenBrace</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedOpenParen</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedPercentageFromOrTo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedProduct</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedProgId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedRgbNumberOrPercentage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedSelector</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedSemicolon</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedSemicolonOrClosingBrace</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedSemicolonOrOpenBrace</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedSum</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedTerm</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedUnit</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpressionError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FallbackEncodingFailed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HackGeneratesInvalidCSS</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HashAfterUnaryNotAllowed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HighSurrogateNoLow</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InvalidLowSurrogate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InvalidUnicodeRange</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MediaQueryRequiresSpace</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ParserSubsystem</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PossibleCharsetError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PossibleInvalidClassName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProgIdIEOnly</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ScannerSubsystem</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Severity0</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Severity1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Severity2</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Severity3</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Severity4</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SeverityUnknown</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TokenAfterUnaryNotAllowed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UndeclaredNamespace</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnderscoreNotValid</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnexpectedAtKeyword</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnexpectedCharset</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnexpectedDimension</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnexpectedEndOfFile</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnexpectedEscape</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnexpectedFunction</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnexpectedNumberCharacter</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnexpectedStringCharacter</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnexpectedToken</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnknownCharacterEncoding</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnknownError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnnecessaryUnits</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnterminatedComment</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnterminatedString</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssToken</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TokenType, char, Microsoft.Ajax.Utilities.CssContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TokenType, string, Microsoft.Ajax.Utilities.CssContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssContext()</signature>
                        <name>get_Context</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.TokenType()</signature>
                        <name>get_TokenType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssContext</signature>
                        <name>m_context</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_text</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>m_tokenType</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.CssContext()</signature>
                        <name>Context</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.TokenType()</signature>
                        <name>TokenType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CssType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssType</signature>
                        <name>DeclarationList</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssType</signature>
                        <name>FullStyleSheet</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.CustomNode</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToCode</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.DebuggerNode</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDebuggerStatement</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDebuggerStatement</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Declaration</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>&lt;RemoveAt&gt;b__5</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>&lt;ReplaceChild&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>&lt;ReplaceChild&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>&lt;set_Item&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>Append</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Ajax.Utilities.VariableDeclaration&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>HandleDuplicates</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>InsertAt</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>RemoveAt</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ContainsInOperator</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.VariableDeclaration(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>get_Scope</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>set_Item</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject)</signature>
                        <name>set_Scope</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject</signature>
                        <name>&lt;Scope&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.VariableDeclaration&gt;</signature>
                        <name>m_list</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ContainsInOperator</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.VariableDeclaration(int32)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>Scope</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.DetachReferences</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode[])</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>Visit</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.DetachReferences</signature>
                        <name>s_instance</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.DirectivePrologue</name>
                <methodlist>
                    <method>
                        <signature>void(string, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConstant</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsExpression</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRedundant</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseStrict</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsRedundant</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseStrict</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsRedundant&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;UseStrict&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConstant</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsExpression</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRedundant</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseStrict</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.DoWhile</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.EncloseBlockType)</signature>
                        <name>EncloseBlock</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Condition</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_WhileContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Condition</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_WhileContext</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;WhileContext&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_condition</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Condition</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>WhileContext</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.DocumentContext</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSParser, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.DocumentContext(string)</signature>
                        <name>DifferentFileContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JScriptException)</signature>
                        <name>HandleError</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>HasAlreadySeenErrorFor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UndefinedReferenceException)</signature>
                        <name>ReportUndefined</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileContext</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsGenerated</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Source</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileContext</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsGenerated</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Source</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileContext&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsGenerated&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Source&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSParser</signature>
                        <name>m_parser</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>m_reportedVariables</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>FileContext</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsGenerated</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Source</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.EmptyStatement</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.EncloseBlockType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.EncloseBlockType</signature>
                        <name>IfWithoutElse</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.EncloseBlockType</signature>
                        <name>SingleDoWhile</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.EvalTreatment</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.EvalTreatment</signature>
                        <name>Ignore</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.EvalTreatment</signature>
                        <name>MakeAllSafe</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.EvalTreatment</signature>
                        <name>MakeImmediateSafe</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.EvaluateLiteralVisitor</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>BitwiseAnd</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>BitwiseOr</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>BitwiseXor</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ArrayLiteral, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>ComputeJoin</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Divide</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>DoBinaryOperator</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>DoConditional</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)</signature>
                        <name>DoConditionalCompilationElseIf</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationIf)</signature>
                        <name>DoConditionalCompilationIf</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DoWhile)</signature>
                        <name>DoDoWhile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForNode)</signature>
                        <name>DoForNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IfNode)</signature>
                        <name>DoIfNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UnaryOperator)</signature>
                        <name>DoUnaryNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WhileNode)</signature>
                        <name>DoWhileNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Equal</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>EvalFarToTheLeft</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>EvalFarToTheRight</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>EvalThisOperator</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>EvalToTheLeft</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>EvalToTheRight</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>GreaterThan</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>GreaterThanOrEqual</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>LeftShift</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>LessThan</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>LessThanOrEqual</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>LogicalAnd</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>LogicalOr</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Minus</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Modulo</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Multiply</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>NoMultiplicativeOverOrUnderFlow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>NoOverflow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>NotEqual</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>NumericAddition</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.ArrayLiteral)</signature>
                        <name>OnlyHasConstantItems</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Plus</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>ReplaceMemberBracketWithDot</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceNodeCheckParens</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>ReplaceNodeWithLiteral</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>RightShift</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>RotateFromLeft</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>RotateFromRight</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>StrictEqual</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>StrictNotEqual</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>StringConcat</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConstantWrapper(Microsoft.Ajax.Utilities.ConstantWrapper, Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>UnsignedRightShift</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CallNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DoWhile)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IfNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Member)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UnaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WhileNode)</signature>
                        <name>Visit</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSParser</signature>
                        <name>m_parser</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Expression</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsExpression</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>get_Precedence</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsExpression</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>Precedence</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.FieldType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FieldType</signature>
                        <name>Argument</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FieldType</signature>
                        <name>Arguments</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FieldType</signature>
                        <name>CatchError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FieldType</signature>
                        <name>GhostCatch</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FieldType</signature>
                        <name>GhostFunction</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FieldType</signature>
                        <name>Global</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FieldType</signature>
                        <name>Local</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FieldType</signature>
                        <name>Predefined</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FieldType</signature>
                        <name>UndefinedGlobal</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FieldType</signature>
                        <name>WithField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.FinalPassVisitor</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>CanBeBroken</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNodeList, int32)</signature>
                        <name>CreateSplitNodeFromEnd</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.Block, Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>PossiblyBreakExpressionList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.Block)</signature>
                        <name>PossiblyBreakExpressionStatement</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator, Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>RotateOpeator</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Visit</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSParser</signature>
                        <name>m_parser</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.StatementStartVisitor</signature>
                        <name>m_statementStart</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ForIn</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;get_TerminatingContext&gt;b__4</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Collection&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Collection&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Variable&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Variable&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.EncloseBlockType)</signature>
                        <name>EncloseBlock</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.BlockScope()</signature>
                        <name>get_BlockScope</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Collection</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_OperatorContext</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_TerminatingContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Variable</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BlockScope)</signature>
                        <name>set_BlockScope</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Collection</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_OperatorContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Variable</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.BlockScope</signature>
                        <name>&lt;BlockScope&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;OperatorContext&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Block,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_collection</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_variable</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.BlockScope()</signature>
                        <name>BlockScope</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Collection</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>OperatorContext</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>TerminatingContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Variable</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ForNode</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;get_TerminatingContext&gt;b__6</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__3</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Incrementer&gt;b__4</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Incrementer&gt;b__5</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Initializer&gt;b__0</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Initializer&gt;b__1</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.EncloseBlockType)</signature>
                        <name>EncloseBlock</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.BlockScope()</signature>
                        <name>get_BlockScope</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Condition</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Incrementer</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Initializer</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_Separator1Context</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_Separator2Context</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_TerminatingContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BlockScope)</signature>
                        <name>set_BlockScope</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Condition</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Incrementer</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Initializer</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_Separator1Context</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_Separator2Context</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.BlockScope</signature>
                        <name>&lt;BlockScope&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;Separator1Context&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;Separator2Context&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Block,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate7</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_condition</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_incrementer</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_initializer</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.BlockScope()</signature>
                        <name>BlockScope</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Condition</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Incrementer</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Initializer</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>Separator1Context</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>Separator2Context</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>TerminatingContext</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.FunctionObject</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>&lt;IsArgumentTrimmable&gt;b__4</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_Body&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_Body&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>&lt;set_ParameterDeclarations&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>&lt;set_ParameterDeclarations&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>IsArgumentTrimmable</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.HashSet`1&lt;Microsoft.Ajax.Utilities.FunctionObject&gt;)</signature>
                        <name>SafeIsReferenced</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>get_Body</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>get_EnclosingScope</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.FunctionScope()</signature>
                        <name>get_FunctionScope</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.FunctionType()</signature>
                        <name>get_FunctionType</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_IdContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Initializer</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsExpression</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReferenced</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSourceElement</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_NameContext</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NameGuess</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList()</signature>
                        <name>get_ParameterDeclarations</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_ParametersContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>get_Precedence</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RefCount</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RenameNotAllowed</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>get_VariableField</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>set_Body</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionScope)</signature>
                        <name>set_FunctionScope</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionType)</signature>
                        <name>set_FunctionType</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_IdContext</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsSourceElement</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NameGuess</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>set_ParameterDeclarations</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_ParametersContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>set_VariableField</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FunctionScope</signature>
                        <name>&lt;FunctionScope&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FunctionType</signature>
                        <name>&lt;FunctionType&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;IdContext&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsSourceElement&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;NameGuess&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;ParametersContext&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField</signature>
                        <name>&lt;VariableField&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ParameterDeclaration,Microsoft.Ajax.Utilities.JSVariableField&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Block</signature>
                        <name>m_body</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList</signature>
                        <name>m_parameters</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>Body</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>EnclosingScope</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.FunctionScope()</signature>
                        <name>FunctionScope</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.FunctionType()</signature>
                        <name>FunctionType</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>IdContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Initializer</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsExpression</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsReferenced</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSourceElement</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>NameContext</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NameGuess</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList()</signature>
                        <name>ParameterDeclarations</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>ParametersContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>Precedence</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>RefCount</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RenameNotAllowed</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>VariableField</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.FunctionScope</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject, bool, Microsoft.Ajax.Utilities.CodeSettings, Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject)</signature>
                        <name>AddReference</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string, object, System.Reflection.FieldAttributes)</signature>
                        <name>CreateField</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeclareScope</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DefineArgumentsObject</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DefineFunctionExpressionName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DefineParameters</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.FunctionObject()</signature>
                        <name>get_FunctionObject</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>set_FunctionObject</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FunctionObject</signature>
                        <name>&lt;FunctionObject&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Microsoft.Ajax.Utilities.ActivationObject&gt;</signature>
                        <name>m_refScopes</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.FunctionObject()</signature>
                        <name>FunctionObject</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.FunctionType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FunctionType</signature>
                        <name>Declaration</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FunctionType</signature>
                        <name>Expression</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FunctionType</signature>
                        <name>Getter</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FunctionType</signature>
                        <name>Setter</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.GetterSetter</name>
                <methodlist>
                    <method>
                        <signature>void(string, bool, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsGetter</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsGetter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsGetter&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsGetter</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.GlobalDefineEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.GlobalScope</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UndefinedReferenceException)</signature>
                        <name>AddUndefinedReference</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AnalyzeScope</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AutoRenameFields</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>CreateField</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string, object, System.Reflection.FieldAttributes)</signature>
                        <name>CreateField</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeclareScope</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string, System.Collections.Generic.HashSet`1&lt;string&gt;, Microsoft.Ajax.Utilities.FieldType, bool)</signature>
                        <name>ResolveFromCollection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>SetAssumedGlobals</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.UndefinedReferenceException&gt;()</signature>
                        <name>get_UndefinedReferences</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>m_assumedGlobals</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>m_globalFunctions</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>m_globalProperties</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Microsoft.Ajax.Utilities.UndefinedReferenceException&gt;</signature>
                        <name>m_undefined</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.UndefinedReferenceException&gt;()</signature>
                        <name>UndefinedReferences</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.GroupingOperator</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;get_IsConstant&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Operand&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Operand&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType()</signature>
                        <name>FindPrimitiveType</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConstant</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Operand</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>get_Precedence</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Operand</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.AstNode,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_operand</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConstant</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Operand</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>Precedence</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.INameDeclaration</name>
                <methodlist>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Initializer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_NameContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Parent</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RenameNotAllowed</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>get_VariableField</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>set_VariableField</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Initializer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>NameContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Parent</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RenameNotAllowed</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>VariableField</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.INameReference</name>
                <methodlist>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_AssignmentValue</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Index</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAssignment</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>get_VariableField</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>get_VariableScope</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>AssignmentValue</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Index</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAssignment</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>VariableField</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>VariableScope</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ISourceMap</name>
                <methodlist>
                    <method>
                        <signature>void(System.IO.TextWriter, string)</signature>
                        <name>EndFile</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>EndOutputRun</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EndPackage</name>
                    </method>
                    <method>
                        <signature>void(object, int32, int32, string)</signature>
                        <name>EndSymbol</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode, int32, int32, string, Microsoft.Ajax.Utilities.Context)</signature>
                        <name>MarkSegment</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NewLineInsertedInOutput</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>StartPackage</name>
                    </method>
                    <method>
                        <signature>object(Microsoft.Ajax.Utilities.AstNode, int32, int32)</signature>
                        <name>StartSymbol</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SafeHeader</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceRoot</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_SafeHeader</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourceRoot</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>SafeHeader</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SourceRoot</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.IVisitor</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ArrayLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AspNetBlockNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Break)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CallNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElse)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationOn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationSet)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapperPP)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ContinueNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CustomNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DebuggerNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DirectivePrologue)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DoWhile)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.EmptyStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForIn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GetterSetter)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GroupingOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IfNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ImportantComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LabeledStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LexicalDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Member)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralField)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralProperty)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.RegExpLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ReturnNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Switch)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.SwitchCase)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThisLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThrowNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TryNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UnaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Var)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WhileNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WithNode)</signature>
                        <name>Visit</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.IfNode</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;get_TerminatingContext&gt;b__6</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_FalseBlock&gt;b__4</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_FalseBlock&gt;b__5</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_TrueBlock&gt;b__2</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_TrueBlock&gt;b__3</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.EncloseBlockType)</signature>
                        <name>EncloseBlock</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SwapBranches</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Condition</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_ElseContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>get_FalseBlock</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_TerminatingContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>get_TrueBlock</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Condition</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_ElseContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>set_FalseBlock</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>set_TrueBlock</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;ElseContext&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Block,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate7</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_condition</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Block</signature>
                        <name>m_falseBlock</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Block</signature>
                        <name>m_trueBlock</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Condition</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>ElseContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>FalseBlock</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>TerminatingContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>TrueBlock</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ImportantComment</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Comment&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Comment</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.InvalidSwitchEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ParameterPart</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SwitchPart</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ParameterPart</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SwitchPart</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ParameterPart&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SwitchPart&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ParameterPart</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SwitchPart</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.IterationStatement</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_Body&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_Body&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>get_Body</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>set_Body</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Block</signature>
                        <name>m_body</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>Body</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSEncoderFallback</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Text.EncoderFallbackBuffer()</signature>
                        <name>CreateFallbackBuffer</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxCharCount</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxCharCount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSEncoderFallbackBuffer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(char, char, int32)</signature>
                        <name>Fallback</name>
                    </method>
                    <method>
                        <signature>bool(char, int32)</signature>
                        <name>Fallback</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetEncoding</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>char()</signature>
                        <name>GetNextChar</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MovePrevious</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Remaining</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>m_fallbackString</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_position</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Remaining</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSError</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>AmbiguousCatchVar</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>AmbiguousNamedFunctionExpression</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>ApplicationError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>ArgumentNotReferenced</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>ArrayLiteralTrailingComma</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>AssignmentToConstant</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>BadBreak</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>BadContinue</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>BadHexEscapeSequence</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>BadLabel</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>BadNumericLiteral</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>BadReturn</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>BadSwitch</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>CCInvalidElse</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>CCInvalidElseIf</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>CCInvalidEnd</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>CCOff</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>ConditionalCompilationTooComplex</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>DupDefault</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>DuplicateCatch</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>DuplicateConstantDeclaration</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>DuplicateLexicalDeclaration</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>DuplicateName</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>ErrorEndOfFile</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>ExpressionExpected</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>FunctionExpressionExpected</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>FunctionNameMustBeIdentifier</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>FunctionNotReferenced</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>IllegalAssignment</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>IllegalChar</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>InvalidElse</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>JSParserException</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>KeywordUsedAsIdentifier</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>MisplacedFunctionDeclaration</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoCCEnd</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoCatch</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoColon</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoComma</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoCommaOrTypeDefinitionError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoCommentEnd</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoEndDebugDirective</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoEndIfDirective</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoEqual</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoIdentifier</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoLabel</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoLeftCurly</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoLeftParenthesis</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoMemberIdentifier</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoRightBracket</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoRightBracketOrComma</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoRightCurly</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoRightParenthesis</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoRightParenthesisOrComma</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoSemicolon</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NoWhile</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NumericMaximum</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NumericMinimum</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>NumericOverflow</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>ObjectConstructorTakesNoArguments</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>ObjectLiteralKeyword</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>OctalLiteralsDeprecated</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>ParameterListNotLast</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>RegExpSyntax</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>ResourceReferenceMustBeConstant</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>SemicolonInsertion</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StatementBlockExpected</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StrictComparisonIsAlwaysTrueOrFalse</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StrictModeArgumentName</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StrictModeDuplicateArgument</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StrictModeDuplicateProperty</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StrictModeFunctionName</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StrictModeInvalidAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StrictModeInvalidDelete</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StrictModeInvalidPreOrPost</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StrictModeNoWith</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StrictModeUndefinedVariable</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StrictModeVariableName</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>StringNotInlineSafe</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>SuspectAssignment</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>SuspectEquality</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>SuspectSemicolon</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>SyntaxError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>TooManyTokensSkipped</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>UncaughtException</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>UnclosedFunction</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>UndeclaredFunction</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>UndeclaredVariable</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>UnexpectedSemicolon</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>UnterminatedAspNetBlock</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>UnterminatedString</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>VariableDefinedNotReferenced</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>WithNotRecommended</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSKeyword</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSToken, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSToken, string, Microsoft.Ajax.Utilities.JSKeyword)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>CanBeIdentifier</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken(Microsoft.Ajax.Utilities.Context, int32)</signature>
                        <name>GetKeyword</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken(string, int32, int32)</signature>
                        <name>GetKeyword</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSKeyword[]()</signature>
                        <name>InitKeywords</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>m_length</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_name</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSKeyword</signature>
                        <name>m_next</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>m_token</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSONOutputVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.TextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.TextWriter, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetSmallestRep</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float64, Microsoft.Ajax.Utilities.Context)</signature>
                        <name>OutputNumber</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>OutputString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ArrayLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AspNetBlockNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Break)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CallNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElse)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationOn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationSet)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapperPP)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ContinueNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CustomNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DebuggerNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DirectivePrologue)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DoWhile)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.EmptyStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForIn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GetterSetter)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GroupingOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IfNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ImportantComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LabeledStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LexicalDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Member)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralField)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralProperty)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.RegExpLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ReturnNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Switch)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.SwitchCase)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThisLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThrowNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TryNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UnaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Var)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WhileNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WithNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsValid</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsValid</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsValid&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.IO.TextWriter</signature>
                        <name>m_writer</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_decimalFormat</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsValid</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSParser</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, Microsoft.Ajax.Utilities.GlobalDefineEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Microsoft.Ajax.Utilities.NewModuleEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>&lt;ParseBreakStatement&gt;b__2e</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>&lt;ParseContinueStatement&gt;b__2c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>&lt;ParseDebuggerStatement&gt;b__17</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;ParseExpressionList&gt;b__7d</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>&lt;ParseFunction&gt;b__44</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>&lt;ParseFunction&gt;b__45</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>&lt;ParseFunction&gt;b__46</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>&lt;ParseFunction&gt;b__47</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>&lt;ParseFunction&gt;b__48</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;ParseLeftHandSideExpression&gt;b__6f</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.ObjectLiteralProperty)</signature>
                        <name>&lt;ParseLeftHandSideExpression&gt;b__70</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;ParseLeftHandSideExpression&gt;b__71</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>&lt;ParseReturnStatement&gt;b__30</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>&lt;ParseStatement&gt;b__b</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;ParseStatement&gt;b__c</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;ParseStatement&gt;b__d</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>&lt;ParseStatement&gt;b__e</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>&lt;ParseThrowStatement&gt;b__38</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;ParseVariableStatement&gt;b__1a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>&lt;ParseVariableStatement&gt;b__1b</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.TextWriter)</signature>
                        <name>&lt;ScanNextToken&gt;b__81</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>AppendImportantComments</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>CCTooComplicated</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(string, bool, float64&amp;)</signature>
                        <name>ConvertNumericLiteralToDouble</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>CreateExpressionNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>CurrentPositionContext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSError)</signature>
                        <name>EOFError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetNextToken</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSeverityString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Ajax.Utilities.JSToken[], Microsoft.Ajax.Utilities.JSParser/RecoveryTokenException)</signature>
                        <name>IndexOfToken</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Ajax.Utilities.JSToken[], Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>IndexOfToken</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>InitializeScanner</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode, System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.Context&gt;)</signature>
                        <name>MemberExpression</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JScriptException)</signature>
                        <name>OnCompilerError</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UndefinedReferenceException)</signature>
                        <name>OnUndefinedReference</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block(Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>ParseBlock</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Break()</signature>
                        <name>ParseBreakStatement</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConditionalCompilationStatement(bool)</signature>
                        <name>ParseConditionalCompilationIf</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ConditionalCompilationSet()</signature>
                        <name>ParseConditionalCompilationSet</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ContinueNode()</signature>
                        <name>ParseContinueStatement</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>ParseDebuggerStatement</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.DoWhile()</signature>
                        <name>ParseDoStatement</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>ParseExpression</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode, bool, bool, Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>ParseExpression</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(bool)</signature>
                        <name>ParseExpression</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(bool, Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>ParseExpression</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block(Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>ParseExpression</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>ParseExpressionList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>ParseForStatement</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.FunctionObject(Microsoft.Ajax.Utilities.FunctionType, Microsoft.Ajax.Utilities.Context)</signature>
                        <name>ParseFunction</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>ParseIdentifierInitializer</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.IfNode()</signature>
                        <name>ParseIfStatement</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(bool)</signature>
                        <name>ParseLeftHandSideExpression</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode, bool&amp;)</signature>
                        <name>ParsePostfixExpression</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ReturnNode()</signature>
                        <name>ParseReturnStatement</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(bool, bool)</signature>
                        <name>ParseStatement</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(bool)</signature>
                        <name>ParseStatementLevelConditionalComment</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>ParseStatements</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>ParseSwitchStatement</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>ParseThrowStatement</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>ParseTryStatement</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(bool&amp;, bool)</signature>
                        <name>ParseUnaryExpression</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>ParseVariableStatement</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.WhileNode()</signature>
                        <name>ParseWhileStatement</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.WithNode()</signature>
                        <name>ParseWithStatement</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken()</signature>
                        <name>PeekToken</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>PreprocessOnly</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CodeSettings, System.IO.TextWriter)</signature>
                        <name>PreprocessOnly</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSError)</signature>
                        <name>ReportError</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSError, Microsoft.Ajax.Utilities.Context, bool)</signature>
                        <name>ReportError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSError, bool)</signature>
                        <name>ReportError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>ScanNextToken</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>ScanRegularExpression</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipTokensAndThrow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>SkipTokensAndThrow</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSToken[], Microsoft.Ajax.Utilities.JSParser/RecoveryTokenException)</signature>
                        <name>TokenInList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSToken[], Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>TokenInList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.JScriptExceptionEventArgs&gt;)</signature>
                        <name>add_CompilerError</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.UndefinedReferenceEventArgs&gt;)</signature>
                        <name>add_UndefinedReference</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>get_DebugLookups</name>
                    </method>
                    <method>
                        <signature>System.IO.TextWriter()</signature>
                        <name>get_EchoWriter</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.GlobalScope()</signature>
                        <name>get_GlobalScope</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings()</signature>
                        <name>get_Settings</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.JScriptExceptionEventArgs&gt;)</signature>
                        <name>remove_CompilerError</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.UndefinedReferenceEventArgs&gt;)</signature>
                        <name>remove_UndefinedReference</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.ICollection`1&lt;string&gt;)</signature>
                        <name>set_DebugLookups</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.TextWriter)</signature>
                        <name>set_EchoWriter</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GlobalScope)</signature>
                        <name>set_GlobalScope</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;</signature>
                        <name>&lt;DebugLookups&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.IO.TextWriter</signature>
                        <name>&lt;EchoWriter&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate12</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate18</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1d</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2d</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2f</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate31</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate39</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Lookup,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4a</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Lookup,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4b</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Lookup,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4c</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Lookup,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4d</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate72</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate74</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatef</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.JScriptExceptionEventArgs&gt;</signature>
                        <name>CompilerError</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.UndefinedReferenceEventArgs&gt;</signature>
                        <name>UndefinedReference</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>c_MaxSkippedTokenNumber</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.JSParser/BlockType&gt;</signature>
                        <name>m_blockType</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_breakRecursion</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>m_currentToken</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.DocumentContext</signature>
                        <name>m_document</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_finallyEscaped</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_foundEndOfLine</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.GlobalScope</signature>
                        <name>m_globalScope</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>m_goodTokensProcessed</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>m_importantComments</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Microsoft.Ajax.Utilities.JSParser/LabelInfo&gt;</signature>
                        <name>m_labelTable</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_newModule</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSParser/NoSkipTokenSet</signature>
                        <name>m_noSkipTokenSet</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSScanner</signature>
                        <name>m_scanner</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings</signature>
                        <name>m_settings</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_severity</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_tokensSkipped</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_useCurrentForNext</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>DebugLookups</name>
                    </property>
                    <property>
                        <signature>System.IO.TextWriter()</signature>
                        <name>EchoWriter</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.GlobalScope()</signature>
                        <name>GlobalScope</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings()</signature>
                        <name>Settings</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.JScriptExceptionEventArgs&gt;</signature>
                        <name>CompilerError</name>
                    </event>
                    <event>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.UndefinedReferenceEventArgs&gt;</signature>
                        <name>UndefinedReference</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSParser/&lt;&gt;c__DisplayClass75</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;ParseLeftHandSideExpression&gt;b__6e</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>commaContext</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSParser/&lt;&gt;c__DisplayClass84</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.TextWriter)</signature>
                        <name>&lt;ScanNextToken&gt;b__82</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSParser</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>nextToken</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSParser/BlockType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSParser/BlockType</signature>
                        <name>Block</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSParser/BlockType</signature>
                        <name>Finally</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSParser/BlockType</signature>
                        <name>Loop</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSParser/BlockType</signature>
                        <name>Switch</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSParser/LabelInfo</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>BlockIndex</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NestLevel</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSParser/NoSkipTokenSet</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSToken[])</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>HasToken</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSToken[])</signature>
                        <name>Remove</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.JSToken[]&gt;</signature>
                        <name>m_tokenSetList</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_ArrayInitNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_BlockConditionNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_BlockNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_BracketToken</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_CaseNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_DoWhileBodyNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_EndOfLineToken</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_EndOfStatementNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_ExpressionListNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_FunctionDeclNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_IfBodyNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_MemberExprNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_NoTrySkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_ObjectInitNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_ParenExpressionNoSkipToken</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_ParenToken</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_PostfixExpressionNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_StartStatementNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_SwitchNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_TopLevelNoSkipTokenSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken[]</signature>
                        <name>s_VariableDeclNoSkipTokenSet</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSParser/RecoveryTokenException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSToken, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>_partiallyComputedNode</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>_token</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSScanner</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>CheckCaseInsensitiveSubstring</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>CheckForNumericBadEnding</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Func`3&lt;string,string,bool&gt;(System.Collections.Generic.SortedDictionary`2&lt;string,System.Func`3&lt;string,string,bool&gt;&gt;)</signature>
                        <name>CheckForOperator</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(int32, string)</signature>
                        <name>CheckSubstring</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSScanner()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>char(int32)</signature>
                        <name>GetChar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(char)</signature>
                        <name>GetHexValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>GetOperatorPrecedence</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSError)</signature>
                        <name>HandleError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken()</signature>
                        <name>IllegalCharacter</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence[]()</signature>
                        <name>InitOperatorsPrec</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsAsciiLetter</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>IsAssignmentOperator</name>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsBlankSpace</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsDigit</name>
                    </method>
                    <method>
                        <signature>bool(char, int32)</signature>
                        <name>IsEndLineOrEOF</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsHexDigit</name>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsIdentifierPartChar</name>
                    </method>
                    <method>
                        <signature>bool(char&amp;)</signature>
                        <name>IsIdentifierStartChar</name>
                    </method>
                    <method>
                        <signature>bool(string, bool)</signature>
                        <name>IsKeyword</name>
                    </method>
                    <method>
                        <signature>bool(char, int32)</signature>
                        <name>IsLineTerminator</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>IsProcessableOperator</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>IsRightAssociativeOperator</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsSafeIdentifier</name>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsSafeIdentifierPart</name>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsSafeIdentifierStart</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValidIdentifier</name>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsValidIdentifierPart</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValidIdentifierPart</name>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsValidIdentifierStart</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>OnGlobalDefine</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>OnNewModule</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(bool)</signature>
                        <name>PPScanIdentifier</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(int32&amp;)</signature>
                        <name>PPScanInteger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string[])</signature>
                        <name>PPSkipToDirective</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(int32, char&amp;)</signature>
                        <name>PeekUnicodeEscape</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, char&amp;)</signature>
                        <name>PeekUnicodeEscape</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken()</signature>
                        <name>ScanAspNetBlock</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ScanDebugDirective</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ScanDefineDirective</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ScanElseDirective</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ScanEndIfDirective</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ScanGlobalsDirective</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(int32&amp;)</signature>
                        <name>ScanHexDigit</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ScanIdentifier</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ScanIfDirective</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken(Microsoft.Ajax.Utilities.JSKeyword)</signature>
                        <name>ScanKeyword</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken(char)</signature>
                        <name>ScanLineTerminator</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(bool)</signature>
                        <name>ScanNextToken</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken(char)</signature>
                        <name>ScanNumber</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ScanPreprocessingDirective</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ScanRegExp</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ScanRegExpFlags</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ScanSourceDirective</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>ScanString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ScanUndefineDirective</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,string&gt;)</signature>
                        <name>SetPreprocessorDefines</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipAspNetReplacement</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipBlanks</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipMultilineComment</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipOneLineTerminator</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipSingleLineComment</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipToEndOfLine</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>StripAssignment</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.GlobalDefineEventArgs&gt;)</signature>
                        <name>add_GlobalDefine</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.NewModuleEventArgs&gt;)</signature>
                        <name>add_NewModule</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowEmbeddedAspNetBlocks</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurrentLine</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>get_DebugLookupCollection</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Identifier</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IgnoreConditionalCompilation</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAtEndOfLine</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEndOfFile</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_LiteralHasIssues</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StartLinePosition</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StringLiteralValue</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_StripDebugCommentBlocks</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SuppressErrors</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UsePreprocessorDefines</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.GlobalDefineEventArgs&gt;)</signature>
                        <name>remove_GlobalDefine</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.NewModuleEventArgs&gt;)</signature>
                        <name>remove_NewModule</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowEmbeddedAspNetBlocks</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.ICollection`1&lt;string&gt;)</signature>
                        <name>set_DebugLookupCollection</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IgnoreConditionalCompilation</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_StripDebugCommentBlocks</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_SuppressErrors</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UsePreprocessorDefines</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AllowEmbeddedAspNetBlocks&gt;k__BackingField</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;</signature>
                        <name>&lt;DebugLookupCollection&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IgnoreConditionalCompilation&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;StripDebugCommentBlocks&gt;k__BackingField</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;SuppressErrors&gt;k__BackingField</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;UsePreprocessorDefines&gt;k__BackingField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.GlobalDefineEventArgs&gt;</signature>
                        <name>GlobalDefine</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.NewModuleEventArgs&gt;</signature>
                        <name>NewModule</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_conditionalCompilationIfLevel</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_conditionalCompilationOn</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_currentLine</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_currentPosition</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>m_currentToken</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_decodedString</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>m_defines</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_endPos</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Text.StringBuilder</signature>
                        <name>m_identifier</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_ifDirectiveLevel</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_inConditionalComment</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_inMultipleLineComment</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_inSingleLineComment</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lastPosOnBuilder</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_literalIssues</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_startLinePosition</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_strSourceCode</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSKeyword[]</signature>
                        <name>s_Keywords</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence[]</signature>
                        <name>s_OperatorsPrec</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AllowEmbeddedAspNetBlocks</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CurrentLine</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>DebugLookupCollection</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Identifier</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IgnoreConditionalCompilation</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAtEndOfLine</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsEndOfFile</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>LiteralHasIssues</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>StartLinePosition</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StringLiteralValue</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>StripDebugCommentBlocks</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>SuppressErrors</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UsePreprocessorDefines</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.GlobalDefineEventArgs&gt;</signature>
                        <name>GlobalDefine</name>
                    </event>
                    <event>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.NewModuleEventArgs&gt;</signature>
                        <name>NewModule</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSScanner/PPOperators</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, string, float64&amp;, float64&amp;)</signature>
                        <name>ConvertToNumeric</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>PPIsEqual</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>PPIsGreaterThan</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>PPIsGreaterThanOrEqual</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>PPIsLessThan</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>PPIsLessThanOrEqual</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>PPIsNotEqual</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>PPIsNotStrictEqual</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>PPIsStrictEqual</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSScanner/PPOperators()</signature>
                        <name>get_Instance</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSScanner/PPOperators()</signature>
                        <name>Instance</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSScanner/PPOperators/LengthComparer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>Compare</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSScanner/PPOperators/Nested</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSScanner/PPOperators</signature>
                        <name>Instance</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSToken</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>AccessField</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>AspNetBlock</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Assign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>BitwiseAnd</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>BitwiseAndAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>BitwiseNot</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>BitwiseOr</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>BitwiseOrAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>BitwiseXor</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>BitwiseXorAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Break</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Case</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Catch</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Class</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Colon</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Comma</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>ConditionalCommentEnd</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>ConditionalCommentStart</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>ConditionalCompilationElse</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>ConditionalCompilationElseIf</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>ConditionalCompilationEnd</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>ConditionalCompilationIf</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>ConditionalCompilationOn</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>ConditionalCompilationSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>ConditionalCompilationVariable</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>ConditionalIf</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Const</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Continue</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Debugger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Decrement</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Default</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Delete</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Divide</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>DivideAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Do</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Else</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>EndOfFile</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>EndOfLine</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Enum</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Equal</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Error</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Export</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Extends</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>False</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Finally</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>FirstBinaryOperator</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>FirstOperator</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>For</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Function</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Get</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>GreaterThan</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>GreaterThanEqual</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Identifier</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>If</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Implements</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Import</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>In</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Increment</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>InstanceOf</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>IntegerLiteral</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Interface</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>LastAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>LastOperator</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>LeftBracket</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>LeftCurly</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>LeftParenthesis</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>LeftShift</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>LeftShiftAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>LessThan</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>LessThanEqual</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Let</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>LogicalAnd</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>LogicalNot</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>LogicalOr</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Minus</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>MinusAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Modulo</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>ModuloAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>MultipleLineComment</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Multiply</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>MultiplyAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Native</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>New</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>NotEqual</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Null</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>NumericLiteral</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Package</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Plus</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>PlusAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>PreprocessorDirective</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Private</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Protected</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Public</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>RegularExpression</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Return</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>RightBracket</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>RightCurly</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>RightParenthesis</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>RightShift</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>RightShiftAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Semicolon</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Set</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>SingleLineComment</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Static</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>StrictEqual</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>StrictNotEqual</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>StringLiteral</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Super</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Switch</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>This</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Throw</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>True</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Try</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>TypeOf</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>UnsignedRightShift</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>UnsignedRightShiftAssign</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>UnterminatedComment</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Var</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Void</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>While</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>WhiteSpace</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>With</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>Yield</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JSVariableField</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FieldType, Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FieldType, string, System.Reflection.FieldAttributes, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.INameReference)</signature>
                        <name>AddReference</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.INameReference&gt;)</signature>
                        <name>AddReferences</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Detach</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>IsSameField</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FieldType)</signature>
                        <name>SetFieldsBasedOnType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Reflection.FieldAttributes()</signature>
                        <name>get_Attributes</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanCrunch</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CrunchedName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.INameDeclaration&gt;()</signature>
                        <name>get_Declarations</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.FieldType()</signature>
                        <name>get_FieldType</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_FieldValue</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>get_GhostedField</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasNoReferences</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_InitializationOnly</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAmbiguous</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDeclared</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFunction</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsGenerated</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLiteral</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsOuterReference</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPlaceholder</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReferenced</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReferencedInnerScope</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.INameDeclaration()</signature>
                        <name>get_OnlyDeclaration</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.INameReference()</signature>
                        <name>get_OnlyReference</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_OriginalContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>get_OuterField</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>get_OwningScope</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RefCount</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.INameReference&gt;()</signature>
                        <name>get_References</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_WasRemoved</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.FieldAttributes)</signature>
                        <name>set_Attributes</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CanCrunch</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CrunchedName</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FieldType)</signature>
                        <name>set_FieldType</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_FieldValue</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>set_GhostedField</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HasNoReferences</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_InitializationOnly</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsAmbiguous</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDeclared</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsFunction</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsGenerated</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsPlaceholder</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_OriginalContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>set_OuterField</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject)</signature>
                        <name>set_OwningScope</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Position</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_WasRemoved</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Reflection.FieldAttributes</signature>
                        <name>&lt;Attributes&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.FieldType</signature>
                        <name>&lt;FieldType&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;FieldValue&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField</signature>
                        <name>&lt;GhostedField&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;HasNoReferences&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;InitializationOnly&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsAmbiguous&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsFunction&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsPlaceholder&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;OriginalContext&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField</signature>
                        <name>&lt;OuterField&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Position&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;WasRemoved&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_canCrunch</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_crunchedName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Microsoft.Ajax.Utilities.INameDeclaration&gt;</signature>
                        <name>m_declarationTable</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_isDeclared</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_isGenerated</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject</signature>
                        <name>m_owningScope</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Microsoft.Ajax.Utilities.INameReference&gt;</signature>
                        <name>m_referenceTable</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Reflection.FieldAttributes()</signature>
                        <name>Attributes</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CanCrunch</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CrunchedName</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.INameDeclaration&gt;()</signature>
                        <name>Declarations</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.FieldType()</signature>
                        <name>FieldType</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>FieldValue</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>GhostedField</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasNoReferences</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>InitializationOnly</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAmbiguous</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDeclared</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFunction</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsGenerated</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsLiteral</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsOuterReference</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPlaceholder</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsReferenced</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsReferencedInnerScope</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.INameDeclaration()</signature>
                        <name>OnlyDeclaration</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.INameReference()</signature>
                        <name>OnlyReference</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>OriginalContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>OuterField</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>OwningScope</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Position</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>RefCount</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.INameReference&gt;()</signature>
                        <name>References</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>WasRemoved</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JScript</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AmbiguousCatchVar</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AmbiguousNamedFunctionExpression</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ApplicationError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ArgumentNotReferenced</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ArrayLiteralTrailingComma</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssignmentToConstant</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BadBreak</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BadContinue</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BadHexEscapeSequence</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BadLabel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BadNumericLiteral</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BadReturn</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BadSwitch</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CCInvalidElse</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CCInvalidElseIf</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CCInvalidEnd</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CCOff</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConditionalCompilationTooComplex</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DupDefault</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DuplicateCatch</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DuplicateConstantDeclaration</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DuplicateLexicalDeclaration</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DuplicateName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorEndOfFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpressionExpected</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FallbackEncodingFailed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FunctionExpressionExpected</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FunctionNameMustBeIdentifier</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FunctionNotReferenced</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IllegalAssignment</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IllegalChar</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InternalCompilerError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InvalidElse</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InvalidJSONOutput</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_JSParserException</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeywordUsedAsIdentifier</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MisplacedFunctionDeclaration</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoCCEnd</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoCatch</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoColon</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoComma</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoCommaOrTypeDefinitionError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoCommentEnd</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoEndDebugDirective</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoEndIfDirective</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoEqual</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoIdentifier</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoLabel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoLeftCurly</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoLeftParenthesis</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoMemberIdentifier</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoRightBracket</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoRightBracketOrComma</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoRightCurly</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoRightParenthesis</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoRightParenthesisOrComma</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoSemicolon</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoWhile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NumericMaximum</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NumericMinimum</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NumericOverflow</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ObjectConstructorTakesNoArguments</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ObjectLiteralKeyword</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OctalLiteralsDeprecated</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ParameterListNotLast</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RegExpSyntax</name>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ResourceReferenceMustBeConstant</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SemicolonInsertion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Severity0</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Severity1</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Severity2</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Severity3</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Severity4</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SeverityUnknown</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StatementBlockExpected</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StrictComparisonIsAlwaysTrueOrFalse</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StrictModeArgumentName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StrictModeDuplicateArgument</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StrictModeDuplicateProperty</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StrictModeFunctionName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StrictModeInvalidAssign</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StrictModeInvalidDelete</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StrictModeInvalidPreOrPost</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StrictModeNoWith</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StrictModeUndefinedVariable</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StrictModeVariableName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StringNotInlineSafe</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SuspectAssignment</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SuspectEquality</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SuspectSemicolon</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SyntaxError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TooManyTokensSkipped</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UncaughtException</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnclosedFunction</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UndeclaredFunction</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UndeclaredVariable</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnexpectedSemicolon</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnterminatedAspNetBlock</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnterminatedString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VariableDefinedNotReferenced</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WithNotRecommended</name>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AmbiguousCatchVar</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AmbiguousNamedFunctionExpression</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ApplicationError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ArgumentNotReferenced</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ArrayLiteralTrailingComma</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AssignmentToConstant</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BadBreak</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BadContinue</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BadHexEscapeSequence</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BadLabel</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BadNumericLiteral</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BadReturn</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BadSwitch</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CCInvalidElse</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CCInvalidElseIf</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CCInvalidEnd</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CCOff</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ConditionalCompilationTooComplex</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DupDefault</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DuplicateCatch</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DuplicateConstantDeclaration</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DuplicateLexicalDeclaration</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DuplicateName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorEndOfFile</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpressionExpected</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FallbackEncodingFailed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FunctionExpressionExpected</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FunctionNameMustBeIdentifier</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FunctionNotReferenced</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>IllegalAssignment</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>IllegalChar</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InternalCompilerError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InvalidElse</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InvalidJSONOutput</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>JSParserException</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeywordUsedAsIdentifier</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MisplacedFunctionDeclaration</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoCCEnd</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoCatch</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoColon</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoComma</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoCommaOrTypeDefinitionError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoCommentEnd</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoEndDebugDirective</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoEndIfDirective</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoEqual</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoIdentifier</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoLabel</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoLeftCurly</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoLeftParenthesis</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoMemberIdentifier</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoRightBracket</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoRightBracketOrComma</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoRightCurly</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoRightParenthesis</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoRightParenthesisOrComma</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoSemicolon</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoWhile</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NumericMaximum</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NumericMinimum</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NumericOverflow</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ObjectConstructorTakesNoArguments</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ObjectLiteralKeyword</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OctalLiteralsDeprecated</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ParameterListNotLast</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RegExpSyntax</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ResourceReferenceMustBeConstant</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SemicolonInsertion</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Severity0</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Severity1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Severity2</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Severity3</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Severity4</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SeverityUnknown</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StatementBlockExpected</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StrictComparisonIsAlwaysTrueOrFalse</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StrictModeArgumentName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StrictModeDuplicateArgument</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StrictModeDuplicateProperty</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StrictModeFunctionName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StrictModeInvalidAssign</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StrictModeInvalidDelete</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StrictModeInvalidPreOrPost</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StrictModeNoWith</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StrictModeUndefinedVariable</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StrictModeVariableName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StringNotInlineSafe</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SuspectAssignment</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SuspectEquality</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SuspectSemicolon</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SyntaxError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TooManyTokensSkipped</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UncaughtException</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnclosedFunction</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UndeclaredFunction</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UndeclaredVariable</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnexpectedSemicolon</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnterminatedAspNetBlock</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnterminatedString</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>VariableDefinedNotReferenced</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WithNotRecommended</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JScriptException</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSError, Microsoft.Ajax.Utilities.Context)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>&lt;get_Message&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Ajax.Utilities.JSError)</signature>
                        <name>GetSeverity</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanRecover</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Column</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EndColumn</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EndLine</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSError()</signature>
                        <name>get_ErrorCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorSegment</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileContext</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FullSource</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsError</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Line</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LineText</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Message</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Severity</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StartColumn</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CanRecover</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSError)</signature>
                        <name>set_ErrorCode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileContext</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsError</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;CanRecover&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSError</signature>
                        <name>&lt;ErrorCode&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileContext&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsError&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Context,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>m_context</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CanRecover</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Column</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>EndColumn</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>EndLine</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSError()</signature>
                        <name>ErrorCode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorSegment</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileContext</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FullSource</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsError</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Line</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LineText</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Message</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Severity</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>StartColumn</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JScriptExceptionEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JScriptException, Microsoft.Ajax.Utilities.ContextError)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ContextError()</signature>
                        <name>get_Error</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JScriptException()</signature>
                        <name>get_Exception</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ContextError)</signature>
                        <name>set_Error</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JScriptException)</signature>
                        <name>set_Exception</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ContextError</signature>
                        <name>&lt;Error&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JScriptException</signature>
                        <name>&lt;Exception&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ContextError()</signature>
                        <name>Error</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JScriptException()</signature>
                        <name>Exception</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JavaScriptFormat</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JavaScriptFormat</signature>
                        <name>JSON</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JavaScriptFormat</signature>
                        <name>Normal</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.JavaScriptSourceMode</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JavaScriptSourceMode</signature>
                        <name>EventHandler</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JavaScriptSourceMode</signature>
                        <name>Expression</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JavaScriptSourceMode</signature>
                        <name>Program</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.LabeledStatement</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Statement&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Statement&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.EncloseBlockType)</signature>
                        <name>EncloseBlock</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_ColonContext</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Label</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_LeftHandSide</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NestCount</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Statement</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_ColonContext</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Label</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NestCount</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Statement</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;ColonContext&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Label&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;NestCount&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_statement</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>ColonContext</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Label</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>LeftHandSide</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NestCount</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Statement</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.LexicalDeclaration</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken()</signature>
                        <name>get_StatementToken</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>set_StatementToken</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>&lt;StatementToken&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSToken()</signature>
                        <name>StatementToken</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.LocalRenaming</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.LocalRenaming</signature>
                        <name>CrunchAll</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.LocalRenaming</signature>
                        <name>KeepAll</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.LocalRenaming</signature>
                        <name>KeepLocalizationVars</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.LogicalNot</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>ConvertBinaryOperator</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Measure</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>MeasureBinaryOperator</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>TypicalHandler</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ArrayLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CallNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GroupingOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Member)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.RegExpLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThisLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UnaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>WrapWithLogicalNot</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>m_delta</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_expression</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_measure</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSParser</signature>
                        <name>m_parser</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Lookup</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>GetFunctionGuess</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, string, int32, int32)</signature>
                        <name>MatchMemberName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, string, int32)</signature>
                        <name>MatchesMemberChain</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_AssignmentValue</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAssignment</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDebuggerStatement</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsGenerated</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ReferenceType()</signature>
                        <name>get_RefType</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>get_VariableField</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>get_VariableScope</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsGenerated</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ReferenceType)</signature>
                        <name>set_RefType</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>set_VariableField</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsGenerated&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ReferenceType</signature>
                        <name>&lt;RefType&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField</signature>
                        <name>&lt;VariableField&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>AssignmentValue</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAssignment</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDebuggerStatement</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsGenerated</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ReferenceType()</signature>
                        <name>RefType</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>VariableField</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>VariableScope</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.MatchPropertiesVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, string)</signature>
                        <name>Match</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ArrayLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AspNetBlockNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Break)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CallNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElse)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationOn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationSet)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapperPP)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ContinueNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CustomNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DebuggerNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DirectivePrologue)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DoWhile)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.EmptyStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForIn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GetterSetter)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GroupingOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IfNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ImportantComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LabeledStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LexicalDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Member)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralField)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralProperty)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.RegExpLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ReturnNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Switch)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.SwitchCase)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThisLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThrowNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TryNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UnaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Var)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WhileNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WithNode)</signature>
                        <name>Visit</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>m_index</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_isMatch</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>m_parts</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Member</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Root&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Root&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>GetFunctionGuess</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDebuggerStatement</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_LeftHandSide</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_NameContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>get_Precedence</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Root</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_NameContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Root</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;NameContext&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_root</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDebuggerStatement</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>LeftHandSide</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>NameContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>Precedence</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Root</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Minifier</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MinifyJavaScript</name>
                    </method>
                    <method>
                        <signature>string(string, Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>MinifyJavaScript</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MinifyStyleSheet</name>
                    </method>
                    <method>
                        <signature>string(string, Microsoft.Ajax.Utilities.CssSettings)</signature>
                        <name>MinifyStyleSheet</name>
                    </method>
                    <method>
                        <signature>string(string, Microsoft.Ajax.Utilities.CssSettings, Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>MinifyStyleSheet</name>
                    </method>
                    <method>
                        <signature>void(object, Microsoft.Ajax.Utilities.CssErrorEventArgs)</signature>
                        <name>OnCssError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Microsoft.Ajax.Utilities.JScriptExceptionEventArgs)</signature>
                        <name>OnJavaScriptError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.ContextError&gt;()</signature>
                        <name>get_ErrorList</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>get_Errors</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_WarningLevel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_WarningLevel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;WarningLevel&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.ContextError&gt;</signature>
                        <name>m_errorList</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.ContextError&gt;()</signature>
                        <name>ErrorList</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>Errors</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>WarningLevel</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Missing</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Missing()</signature>
                        <name>get_Value</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Missing</signature>
                        <name>s_instance</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Missing()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.NewModuleEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Module</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Module</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Module&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Module</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.NewParensVisitor</name>
                <methodlist>
                    <method>
                        <signature>void(bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, bool)</signature>
                        <name>NeedsParens</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ArrayLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AspNetBlockNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Break)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CallNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElse)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationOn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationSet)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapperPP)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ContinueNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CustomNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DebuggerNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DirectivePrologue)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DoWhile)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.EmptyStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForIn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GetterSetter)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GroupingOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IfNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ImportantComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LabeledStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LexicalDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Member)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralField)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralProperty)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.RegExpLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ReturnNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Switch)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.SwitchCase)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThisLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThrowNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TryNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UnaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Var)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WhileNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WithNode)</signature>
                        <name>Visit</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>m_needsParens</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_outerHasNoArguments</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ObjectLiteral</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>&lt;set_Properties&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>&lt;set_Properties&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConstant</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList()</signature>
                        <name>get_Properties</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>set_Properties</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList</signature>
                        <name>m_properties</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConstant</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList()</signature>
                        <name>Properties</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ObjectLiteralField</name>
                <methodlist>
                    <method>
                        <signature>void(object, Microsoft.Ajax.Utilities.PrimitiveType, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_ColonContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_ColonContext</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;ColonContext&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>ColonContext</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ObjectLiteralProperty</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.ObjectLiteralField)</signature>
                        <name>&lt;set_Name&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.ObjectLiteralField)</signature>
                        <name>&lt;set_Name&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Value&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Value&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>GetFunctionGuess</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConstant</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ObjectLiteralField()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralField)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Value</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ObjectLiteralField</signature>
                        <name>m_propertyName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_propertyValue</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConstant</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ObjectLiteralField()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.OperatorPrecedence</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>Additive</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>Assignment</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>BitwiseAnd</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>BitwiseOr</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>BitwiseXor</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>Comma</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>Conditional</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>Equality</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>FieldAccess</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>Highest</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>LogicalAnd</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>LogicalOr</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>Multiplicative</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>Primary</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>Relational</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>Shift</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence</signature>
                        <name>Unary</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.OutputMode</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OutputMode</signature>
                        <name>MultipleLines</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OutputMode</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OutputMode</signature>
                        <name>SingleLine</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.OutputVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.TextWriter, Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;OutputBlock&gt;b__16</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>&lt;OutputFunctionArgsAndBody&gt;b__10</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;OutputFunctionArgsAndBody&gt;b__11</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;OutputFunctionArgsAndBody&gt;b__12</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;Visit&gt;b__4</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;Visit&gt;b__6</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>&lt;Visit&gt;b__8</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;Visit&gt;b__a</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>&lt;Visit&gt;b__c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;Visit&gt;b__e</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode, bool)</signature>
                        <name>AcceptNodeWithParens</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.TextWriter, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>BreakLine</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>EndSymbol</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>EscapeString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetSmallestRep</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Indent</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>InlineSafeString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>InsertSpaceIfNeeded</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>InsertSpaceIfNeeded</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode, string, Microsoft.Ajax.Utilities.Context)</signature>
                        <name>MarkSegment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NewLine</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(float64, string)</signature>
                        <name>NormalOrHexIfSmaller</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(float64, Microsoft.Ajax.Utilities.Context)</signature>
                        <name>NormalizeNumber</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>OperatorString</name>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>Output</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Output</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>OutputBlock</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>OutputBlockWithBraces</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TryNode)</signature>
                        <name>OutputCatchBranch</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TryNode)</signature>
                        <name>OutputFinallyBranch</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionObject, bool)</signature>
                        <name>OutputFunctionArgsAndBody</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>OutputPossibleLineBreak</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OutputSpaceOrLineBreak</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TryNode)</signature>
                        <name>OutputTryBranch</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>QuoteFactor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ReplaceableSemicolon</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>SetContextOutputPosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.Context)</signature>
                        <name>SetContextOutputPosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>SetLastCharState</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetLastCharState</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>StartSymbol</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Unindent</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ArrayLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AspNetBlockNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Break)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CallNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElse)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationOn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationSet)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapperPP)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ContinueNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CustomNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DebuggerNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DirectivePrologue)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DoWhile)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.EmptyStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForIn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GetterSetter)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GroupingOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IfNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ImportantComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LabeledStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LexicalDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Member)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralField)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralProperty)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.RegExpLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ReturnNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Switch)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.SwitchCase)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThisLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThrowNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TryNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UnaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Var)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WhileNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WithNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>int32(char)</signature>
                        <name>WriteToStream</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>WriteToStream</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ParameterDeclaration,Microsoft.Ajax.Utilities.JSVariableField&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate13</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate14</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Block,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate15</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Block,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate17</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate7</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;char,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate9</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.AstNodeList,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegated</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;char,bool&gt;</signature>
                        <name>m_addSpaceIfTrue</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_doneWithGlobalDirectives</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Stack`1&lt;string&gt;</signature>
                        <name>m_functionStack</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_indentLevel</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>m_lastCharacter</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_lastCountOdd</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lineCount</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lineLength</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_needsStrictDirective</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_noIn</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_noLineBreaks</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_onNewLine</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_outputCCOn</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.IO.TextWriter</signature>
                        <name>m_outputStream</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_segmentStartColumn</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_segmentStartLine</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings</signature>
                        <name>m_settings</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_startOfStatement</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>s_decimalFormat</name>
                        <newname>s</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.OutputVisitor/&lt;&gt;c__DisplayClass2</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>&lt;Apply&gt;b__0</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ISourceMap)</signature>
                        <name>&lt;Apply&gt;b__1</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.OutputVisitor</signature>
                        <name>outputVisitor</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ParameterDeclaration</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Initializer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_NameContext</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RenameNotAllowed</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>get_VariableField</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Position</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RenameNotAllowed</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>set_VariableField</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Position&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;RenameNotAllowed&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField</signature>
                        <name>&lt;VariableField&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Initializer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>NameContext</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Position</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RenameNotAllowed</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>VariableField</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Position</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Position()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NextChar</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NextLine</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PreviousChar</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Char</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Line</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>m_char</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_line</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Char</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Line</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.PrimitiveType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType</signature>
                        <name>Boolean</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType</signature>
                        <name>Null</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType</signature>
                        <name>Number</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType</signature>
                        <name>Other</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType</signature>
                        <name>String</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ReferenceComparer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Ajax.Utilities.JSVariableField, Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>Compare</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IComparer`1&lt;Microsoft.Ajax.Utilities.JSVariableField&gt;</signature>
                        <name>Instance</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ReferenceType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ReferenceType</signature>
                        <name>Constructor</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ReferenceType</signature>
                        <name>Function</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ReferenceType</signature>
                        <name>Variable</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.RegExpLiteral</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConstant</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Pattern</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PatternSwitches</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Pattern</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PatternSwitches</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Pattern&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PatternSwitches&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConstant</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Pattern</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PatternSwitches</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ReorderScopeVisitor</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>IsMinificationHint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Ajax.Utilities.Block, int32, Microsoft.Ajax.Utilities.DirectivePrologue)</signature>
                        <name>RelocateDirectivePrologue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Ajax.Utilities.Block, int32, Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>RelocateFunction</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Ajax.Utilities.Block, int32, Microsoft.Ajax.Utilities.Var)</signature>
                        <name>RelocateVar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>UnnestBlocks</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DirectivePrologue)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GroupingOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Var)</signature>
                        <name>Visit</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>m_combineAdjacentVars</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_conditionalCommentLevel</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.FunctionObject&gt;</signature>
                        <name>m_functionDeclarations</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.FunctionObject&gt;</signature>
                        <name>m_functionExpressions</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.DirectivePrologue&gt;</signature>
                        <name>m_moduleDirectives</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_moveFunctionDecls</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_moveVarStatements</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.Var&gt;</signature>
                        <name>m_varStatements</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ResolutionVisitor</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject, Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;ResolveGhostedFunctions&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject)</signature>
                        <name>AddGhostedFields</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.ActivationObject, Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject)</signature>
                        <name>CollapseBlockScope</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject)</signature>
                        <name>CreateFields</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>MakeExpectedGlobal</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject, Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>ResolveGhostedCatchParameter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject, Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>ResolveGhostedFunctions</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject, Microsoft.Ajax.Utilities.Lookup, Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>ResolveLookup</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject, Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>ResolveLookups</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ArrayLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AspNetBlockNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Break)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CallNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElse)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationOn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationSet)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapperPP)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ContinueNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CustomNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DebuggerNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DirectivePrologue)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DoWhile)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.EmptyStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForIn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GetterSetter)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GroupingOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IfNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ImportantComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LabeledStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LexicalDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Member)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralField)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralProperty)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.RegExpLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ReturnNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Switch)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.SwitchCase)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThisLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThrowNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TryNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UnaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Var)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WhileNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WithNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>get_CurrentLexicalScope</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>get_CurrentVariableScope</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_NextOrderIndex</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.JSVariableField,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_isUnreachable</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Stack`1&lt;Microsoft.Ajax.Utilities.ActivationObject&gt;</signature>
                        <name>m_lexicalStack</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>m_orderIndex</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings</signature>
                        <name>m_settings</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Stack`1&lt;Microsoft.Ajax.Utilities.ActivationObject&gt;</signature>
                        <name>m_variableStack</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_withDepth</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>CurrentLexicalScope</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>CurrentVariableScope</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>NextOrderIndex</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ResourceStrings</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.IDictionaryEnumerator)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;()</signature>
                        <name>get_NameValuePairs</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>set_Item</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,string&gt;)</signature>
                        <name>set_NameValuePairs</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;</signature>
                        <name>&lt;NameValuePairs&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>string(string)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;()</signature>
                        <name>NameValuePairs</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ReturnNode</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Operand&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Operand&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Operand</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Operand</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_operand</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Operand</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ScriptSharpSourceMap</name>
                <methodlist>
                    <method>
                        <signature>void(System.IO.TextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(System.IO.TextWriter, string)</signature>
                        <name>EndFile</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>EndOutputRun</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EndPackage</name>
                    </method>
                    <method>
                        <signature>void(object, int32, int32, string)</signature>
                        <name>EndSymbol</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>GetSourceFileIndex</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>MakeRelative</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode, int32, int32, string, Microsoft.Ajax.Utilities.Context)</signature>
                        <name>MarkSegment</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NewLineInsertedInOutput</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Normalize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>StartPackage</name>
                    </method>
                    <method>
                        <signature>object(Microsoft.Ajax.Utilities.AstNode, int32, int32)</signature>
                        <name>StartSymbol</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImplementationName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SafeHeader</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceRoot</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_SafeHeader</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourceRoot</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;SafeHeader&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SourceRoot&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>currentIndex</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_columnOffset</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_currentPackagePath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lineOffset</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_mapPath</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>m_sourceFileIndexMap</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Xml.XmlWriter</signature>
                        <name>m_writer</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ImplementationName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>SafeHeader</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SourceRoot</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ScriptSharpSourceMap/JavaScriptSymbol</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, string)</signature>
                        <name>End</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ScriptSharpSourceMap/JavaScriptSymbol(Microsoft.Ajax.Utilities.AstNode, int32, int32, int32)</signature>
                        <name>StartNew</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>WriteHeadersTo</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>WriteTo</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>SymbolDataFormat</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_endColumn</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_endLine</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_parentFunction</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>m_sourceContext</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_sourceFileId</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_startColumn</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_startLine</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_symbolType</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.SourceMapFactory</name>
                <methodlist>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ISourceMap(System.IO.TextWriter, string)</signature>
                        <name>Create</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.StatementStartVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;IsSafe&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsSafe</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ArrayLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AspNetBlockNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Break)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CallNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElse)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationOn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationSet)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapperPP)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ContinueNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CustomNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DebuggerNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DirectivePrologue)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DoWhile)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.EmptyStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForIn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GetterSetter)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GroupingOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IfNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ImportantComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LabeledStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LexicalDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Member)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralField)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralProperty)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.RegExpLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ReturnNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Switch)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.SwitchCase)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThisLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThrowNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TryNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UnaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Var)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WhileNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WithNode)</signature>
                        <name>Visit</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>m_isSafe</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Switch</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>&lt;set_Cases&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>&lt;set_Cases&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Expression&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Expression&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>get_BlockScope</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_BraceContext</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_BraceOnNewLine</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList()</signature>
                        <name>get_Cases</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Expression</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject)</signature>
                        <name>set_BlockScope</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_BraceContext</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_BraceOnNewLine</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>set_Cases</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Expression</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject</signature>
                        <name>&lt;BlockScope&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;BraceContext&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;BraceOnNewLine&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList</signature>
                        <name>m_cases</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_expression</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>BlockScope</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>BraceContext</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>BraceOnNewLine</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNodeList()</signature>
                        <name>Cases</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Expression</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.SwitchCase</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_CaseValue&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_CaseValue&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_Statements&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_Statements&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_CaseValue</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_ColonContext</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDefault</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>get_Statements</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_CaseValue</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_ColonContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>set_Statements</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;ColonContext&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_caseValue</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Block</signature>
                        <name>m_statements</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>CaseValue</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>ColonContext</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDefault</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>Statements</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.SwitchParser</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CodeSettings, Microsoft.Ajax.Utilities.CssSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool, System.Collections.Generic.IDictionary`2&lt;string,string&gt;)</signature>
                        <name>AlignDebugDefine</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, bool, bool&amp;)</signature>
                        <name>BooleanSwitch</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.SwitchParser()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnCssOnlyParameter</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>OnInvalidSwitch</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnJSOnlyParameter</name>
                    </method>
                    <method>
                        <signature>int32(System.Collections.Generic.IList`1&lt;string&gt;, int32, string, string)</signature>
                        <name>OnUnknownParameter</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>ResetRenamingKill</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string[](string)</signature>
                        <name>ToArguments</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_CssOnlyParameter</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.InvalidSwitchEventArgs&gt;)</signature>
                        <name>add_InvalidSwitch</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_JSOnlyParameter</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.UnknownParameterEventArgs&gt;)</signature>
                        <name>add_UnknownParameter</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AnalyzeMode</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CssSettings()</signature>
                        <name>get_CssSettings</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EncodingInputName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EncodingOutputName</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings()</signature>
                        <name>get_JSSettings</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PrettyPrint</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ReportFormat</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ReportPath</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_WarningLevel</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_CssOnlyParameter</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.InvalidSwitchEventArgs&gt;)</signature>
                        <name>remove_InvalidSwitch</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_JSOnlyParameter</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Ajax.Utilities.UnknownParameterEventArgs&gt;)</signature>
                        <name>remove_UnknownParameter</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AnalyzeMode</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CssSettings)</signature>
                        <name>set_CssSettings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EncodingInputName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EncodingOutputName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>set_JSSettings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_PrettyPrint</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ReportFormat</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ReportPath</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_WarningLevel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AnalyzeMode&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CssSettings</signature>
                        <name>&lt;CssSettings&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;EncodingInputName&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;EncodingOutputName&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings</signature>
                        <name>&lt;JSSettings&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;PrettyPrint&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ReportFormat&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ReportPath&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;WarningLevel&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>CssOnlyParameter</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.InvalidSwitchEventArgs&gt;</signature>
                        <name>InvalidSwitch</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>JSOnlyParameter</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.UnknownParameterEventArgs&gt;</signature>
                        <name>UnknownParameter</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_isMono</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AnalyzeMode</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.CssSettings()</signature>
                        <name>CssSettings</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>EncodingInputName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>EncodingOutputName</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.CodeSettings()</signature>
                        <name>JSSettings</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>PrettyPrint</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ReportFormat</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ReportPath</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>WarningLevel</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>CssOnlyParameter</name>
                    </event>
                    <event>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.InvalidSwitchEventArgs&gt;</signature>
                        <name>InvalidSwitch</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>JSOnlyParameter</name>
                    </event>
                    <event>
                        <signature>System.EventHandler`1&lt;Microsoft.Ajax.Utilities.UnknownParameterEventArgs&gt;</signature>
                        <name>UnknownParameter</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ThisLiteral</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.ThrowNode</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Operand&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Operand&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Operand</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Operand</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_operand</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Operand</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.TokenType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>AbsoluteLength</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Angle</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>AspNetBlock</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>AtKeyword</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>BottomCenterSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>BottomLeftCornerSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>BottomLeftSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>BottomRightCornerSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>BottomRightSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Character</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>CharacterSetSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Comment</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>CommentClose</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>CommentOpen</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>DashMatch</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Dimension</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Error</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>FontFaceSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Frequency</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Function</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Hash</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Identifier</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>ImportSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>ImportantSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Includes</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>KeyFramesSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>LeftBottomSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>LeftMiddleSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>LeftTopSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>MediaSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>NamespaceSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Not</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Number</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>PageSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Percentage</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>PrefixMatch</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>ProgId</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>RelativeLength</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Resolution</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>RightBottomSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>RightMiddleSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>RightTopSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Space</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Speech</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>String</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>SubstringMatch</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>SuffixMatch</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Time</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>TopCenterSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>TopLeftCornerSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>TopLeftSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>TopRightCornerSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>TopRightSymbol</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>UnicodeRange</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TokenType</signature>
                        <name>Uri</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.TreeModifications</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>ApplyUnaryMinusToNumericLiteral</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>BooleanLiteralsToNotOperators</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>BracketMemberToDotMember</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>ChangeWhileToFor</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>CombineAdjacentExpressionStatements</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>CombineAdjacentStringLiterals</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>CombineEquivalentIfReturns</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>CombineNestedIfs</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>CombineVarStatements</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>CombineVarStatementsToTopOfScope</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>DateGetTimeToUnaryPlus</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>EvaluateLiteralJoins</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>EvaluateLiteralLengths</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>EvaluateNumericExpressions</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>IfConditionCallToConditionAndCall</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>IfConditionFalseToIfNotConditionTrue</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>IfConditionReturnToCondition</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>IfElseReturnToReturnConditional</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>IfEmptyToExpression</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>IfExpressionsToExpression</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>IfNotTrueFalseToIfFalseTrue</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>InvertIfContinue</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>InvertIfReturn</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>LocalRenaming</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>MinifyNumericLiterals</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>MinifyStringLiterals</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>MoveFunctionToTopOfScope</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>MoveInExpressionsIntoForStatement</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>MoveVarIntoFor</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>NewArrayToArrayLiteral</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>NewObjectToObjectLiteral</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>PreserveImportantComments</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>PropertyRenaming</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>ReduceStrictOperatorIfTypesAreDifferent</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>ReduceStrictOperatorIfTypesAreSame</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>RemoveBreakFromLastCaseBlock</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>RemoveDuplicateVar</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>RemoveEmptyCaseWhenNoDefault</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>RemoveEmptyDefaultCase</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>RemoveEmptyFinally</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>RemoveFunctionExpressionNames</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>RemoveQuotesFromObjectLiteralNames</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>RemoveUnaryPlusOnNumericLiteral</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>RemoveUnnecessaryCCOnStatements</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>RemoveUnnecessaryLabels</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>RemoveUnusedParameters</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>RemoveUnusedVariables</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>SimplifyStringToNumericConversion</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>StripDebugStatements</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>UnfoldCommaExpressionStatements</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.TreeModifications</signature>
                        <name>VarInitializeReturnToReturnInitializer</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.TreeVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ArrayLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AspNetBlockNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNodeList)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.BinaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Break)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CallNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Conditional)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElse)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationIf)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationOn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConditionalCompilationSet)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapper)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ConstantWrapperPP)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ContinueNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.CustomNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DebuggerNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DirectivePrologue)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.DoWhile)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.EmptyStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForIn)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ForNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.FunctionObject)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GetterSetter)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.GroupingOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IfNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ImportantComment)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LabeledStatement)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.LexicalDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Member)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralField)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ObjectLiteralProperty)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.RegExpLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ReturnNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Switch)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.SwitchCase)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThisLiteral)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ThrowNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.TryNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UnaryOperator)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Var)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.VariableDeclaration)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WhileNode)</signature>
                        <name>Visit</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.WithNode)</signature>
                        <name>Visit</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.TryNode</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>&lt;get_CatchVarContext&gt;b__a</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>&lt;get_CatchVarName&gt;b__8</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_CatchBlock&gt;b__2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_CatchBlock&gt;b__3</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>&lt;set_CatchParameter&gt;b__6</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>&lt;set_CatchParameter&gt;b__7</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_FinallyBlock&gt;b__4</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_FinallyBlock&gt;b__5</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_TryBlock&gt;b__0</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_TryBlock&gt;b__1</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>SetCatchVariable</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>get_CatchBlock</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_CatchContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ParameterDeclaration()</signature>
                        <name>get_CatchParameter</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_CatchVarContext</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CatchVarName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>get_FinallyBlock</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_FinallyContext</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>get_TryBlock</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>set_CatchBlock</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_CatchContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ParameterDeclaration)</signature>
                        <name>set_CatchParameter</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>set_FinallyBlock</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_FinallyContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>set_TryBlock</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;CatchContext&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;FinallyContext&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ParameterDeclaration,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate9</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.ParameterDeclaration,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Block</signature>
                        <name>m_catchBlock</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ParameterDeclaration</signature>
                        <name>m_catchParameter</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Block</signature>
                        <name>m_finallyBlock</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Block</signature>
                        <name>m_tryBlock</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>CatchBlock</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>CatchContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ParameterDeclaration()</signature>
                        <name>CatchParameter</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>CatchVarContext</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CatchVarName</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>FinallyBlock</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>FinallyContext</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>TryBlock</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.UnaryOperator</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;get_IsConstant&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Operand&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Operand&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.PrimitiveType()</signature>
                        <name>FindPrimitiveType</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ConditionalCommentContainsOn</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConstant</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPostfix</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Operand</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_OperatorContext</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OperatorInConditionalCompilationComment</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSToken()</signature>
                        <name>get_OperatorToken</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>get_Precedence</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ConditionalCommentContainsOn</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsPostfix</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Operand</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_OperatorContext</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_OperatorInConditionalCompilationComment</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSToken)</signature>
                        <name>set_OperatorToken</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ConditionalCommentContainsOn&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsPostfix&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;OperatorContext&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;OperatorInConditionalCompilationComment&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSToken</signature>
                        <name>&lt;OperatorToken&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.AstNode,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_operand</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ConditionalCommentContainsOn</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConstant</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPostfix</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Operand</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>OperatorContext</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>OperatorInConditionalCompilationComment</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSToken()</signature>
                        <name>OperatorToken</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.OperatorPrecedence()</signature>
                        <name>Precedence</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.UndefinedReferenceEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UndefinedReferenceException)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.UndefinedReferenceException()</signature>
                        <name>get_Exception</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.UndefinedReferenceException)</signature>
                        <name>set_Exception</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.UndefinedReferenceException</signature>
                        <name>&lt;Exception&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.UndefinedReferenceException()</signature>
                        <name>Exception</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.UndefinedReferenceException</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Lookup, Microsoft.Ajax.Utilities.Context)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Column</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Line</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_LookupNode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ReferenceType()</signature>
                        <name>get_ReferenceType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>m_context</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Lookup</signature>
                        <name>m_lookup</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_name</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.ReferenceType</signature>
                        <name>m_type</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Column</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Line</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>LookupNode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ReferenceType()</signature>
                        <name>ReferenceType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.UnknownParameterEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_Arguments</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Index</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ParameterPart</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SwitchPart</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_Arguments</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Index</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ParameterPart</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SwitchPart</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;Arguments&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Index&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ParameterPart&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SwitchPart&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>Arguments</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Index</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ParameterPart</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SwitchPart</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.V3SourceMap</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.TextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>&lt;MarkSegment&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.V3SourceMap/Segment(int32, int32, int32, int32, string, string)</signature>
                        <name>CreateSegment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(System.Text.StringBuilder, int32)</signature>
                        <name>EncodeNumber</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Text.StringBuilder, Microsoft.Ajax.Utilities.V3SourceMap/Segment, System.Collections.Generic.IList`1&lt;string&gt;, System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>EncodeNumbers</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.TextWriter, string)</signature>
                        <name>EndFile</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>EndOutputRun</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EndPackage</name>
                    </method>
                    <method>
                        <signature>void(object, int32, int32, string)</signature>
                        <name>EndSymbol</name>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.IList`1&lt;string&gt;, System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>GenerateMappings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>MakeRelative</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode, int32, int32, string, Microsoft.Ajax.Utilities.Context)</signature>
                        <name>MarkSegment</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NewLineInsertedInOutput</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Normalize</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>OutputEscapedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>StartPackage</name>
                    </method>
                    <method>
                        <signature>object(Microsoft.Ajax.Utilities.AstNode, int32, int32)</signature>
                        <name>StartSymbol</name>
                    </method>
                    <method>
                        <signature>void(string, System.Collections.Generic.ICollection`1&lt;string&gt;)</signature>
                        <name>WriteProperty</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>WriteProperty</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>WriteProperty</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WritePropertyStart</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImplementationName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SafeHeader</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceRoot</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_SafeHeader</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourceRoot</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;SafeHeader&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SourceRoot&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_columnOffset</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_hasProperty</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lastDestinationColumn</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lastDestinationLine</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lastFileIndex</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lastNameIndex</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lastSourceColumn</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lastSourceLine</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lineOffset</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_mapPath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_maxMinifiedLine</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_minifiedPath</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>m_nameList</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>m_names</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Ajax.Utilities.V3SourceMap/Segment&gt;</signature>
                        <name>m_segments</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>m_sourceFileList</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>m_sourceFiles</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.IO.TextWriter</signature>
                        <name>m_writer</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>s_base64</name>
                        <newname>s</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ImplementationName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>SafeHeader</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SourceRoot</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.V3SourceMap/Segment</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DestinationColumn</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DestinationLine</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SourceColumn</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SourceLine</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SymbolName</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DestinationColumn</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DestinationLine</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SourceColumn</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SourceLine</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SymbolName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;DestinationColumn&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;DestinationLine&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;SourceColumn&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;SourceLine&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SymbolName&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>DestinationColumn</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>DestinationLine</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SourceColumn</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SourceLine</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SymbolName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.Var</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.VariableDeclaration</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;get_VariableScope&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Initializer&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Initializer&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>GetFunctionGuess</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>IsEquivalentTo</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_AssignContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_AssignmentValue</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasInitializer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Identifier</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Initializer</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAssignment</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCCSpecialCase</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsExpression</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsGenerated</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_NameContext</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RenameNotAllowed</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseCCOn</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>get_VariableField</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>get_VariableScope</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_AssignContext</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Identifier</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Initializer</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCCSpecialCase</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsGenerated</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context)</signature>
                        <name>set_NameContext</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseCCOn</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>set_VariableField</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;AssignContext&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Identifier&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsCCSpecialCase&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Context</signature>
                        <name>&lt;NameContext&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;UseCCOn&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField</signature>
                        <name>&lt;VariableField&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.JSVariableField,Microsoft.Ajax.Utilities.ActivationObject&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_initializer</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_isGenerated</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>AssignContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>AssignmentValue</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasInitializer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Identifier</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Initializer</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAssignment</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsCCSpecialCase</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsExpression</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsGenerated</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>NameContext</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RenameNotAllowed</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseCCOn</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField()</signature>
                        <name>VariableField</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.ActivationObject()</signature>
                        <name>VariableScope</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.WhileNode</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;get_TerminatingContext&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_Condition&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.EncloseBlockType)</signature>
                        <name>EncloseBlock</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_Condition</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_TerminatingContext</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_Condition</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Block,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_condition</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>Condition</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>TerminatingContext</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.WithNode</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;get_TerminatingContext&gt;b__4</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_Body&gt;b__2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>&lt;set_Body&gt;b__3</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_WithObject&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>&lt;set_WithObject&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.IVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.EncloseBlockType)</signature>
                        <name>EncloseBlock</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>ReplaceChild</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>get_Body</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RequiresSeparator</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>get_TerminatingContext</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>get_WithObject</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.Block)</signature>
                        <name>set_Body</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.AstNode)</signature>
                        <name>set_WithObject</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Ajax.Utilities.Block,Microsoft.Ajax.Utilities.Context&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.Block</signature>
                        <name>m_body</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.AstNode</signature>
                        <name>m_withObject</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Block()</signature>
                        <name>Body</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Ajax.Utilities.AstNode&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RequiresSeparator</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.Context()</signature>
                        <name>TerminatingContext</name>
                    </property>
                    <property>
                        <signature>Microsoft.Ajax.Utilities.AstNode()</signature>
                        <name>WithObject</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.WithScope</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Ajax.Utilities.ActivationObject, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.CodeSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>CreateField</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(string, object, System.Reflection.FieldAttributes)</signature>
                        <name>CreateField</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>CreateInnerField</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeclareScope</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Ajax.Utilities.WithScope/&lt;&gt;c__DisplayClass1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField(Microsoft.Ajax.Utilities.JSVariableField)</signature>
                        <name>&lt;CreateInnerField&gt;b__0</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.WithScope</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>Microsoft.Ajax.Utilities.JSVariableField</signature>
                        <name>outerField</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>System.Diagnostics.Contracts.RuntimeContractsAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(System.Diagnostics.Contracts.RuntimeContractsFlags)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>System.Diagnostics.Contracts.RuntimeContractsFlags</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>Asserts</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>Assumes</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>AsyncEnsures</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>Ensures</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>InheritContracts</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>Invariants</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>LegacyRequires</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>NoChecking</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>Requires</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>RequiresWithException</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>StandardMode</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.RuntimeContractsFlags</signature>
                        <name>ThrowOnFailure</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>System.Diagnostics.Contracts.__ContractsRuntime</name>
                <methodlist>
                    <method>
                        <signature>void(bool, string, string)</signature>
                        <name>Ensures</name>
                    </method>
                    <method>
                        <signature>void(System.Diagnostics.Contracts.ContractFailureKind, string, string, System.Exception)</signature>
                        <name>ReportFailure</name>
                    </method>
                    <method>
                        <signature>void(bool, string, string)</signature>
                        <name>Requires</name>
                    </method>
                    <method>
                        <signature>void(System.Diagnostics.Contracts.ContractFailureKind, string, string, string, System.Exception)</signature>
                        <name>TriggerFailure</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>insideContractEvaluation</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>System.Diagnostics.Contracts.__ContractsRuntime/ContractException</name>
                <methodlist>
                    <method>
                        <signature>void(System.Diagnostics.Contracts.ContractFailureKind, string, string, string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Runtime.Serialization.SafeSerializationEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Condition</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Failure</name>
                    </method>
                    <method>
                        <signature>System.Diagnostics.Contracts.ContractFailureKind()</signature>
                        <name>get_Kind</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserMessage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Diagnostics.Contracts.__ContractsRuntime/ContractException/ContractExceptionData</signature>
                        <name>m_data</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Condition</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Failure</name>
                    </property>
                    <property>
                        <signature>System.Diagnostics.Contracts.ContractFailureKind()</signature>
                        <name>Kind</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserMessage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>System.Diagnostics.Contracts.__ContractsRuntime/ContractException/ContractExceptionData</name>
                <methodlist>
                    <method>
                        <signature>void(object)</signature>
                        <name>System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_Condition</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Contracts.ContractFailureKind</signature>
                        <name>_Kind</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_UserMessage</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.AssemblerActivity</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.TextWriter, string, string, WebGrease.Configuration.PreprocessingConfig)</signature>
                        <name>Append</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(WebGrease.ContentItemType, string, string, string)</signature>
                        <name>Bundle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(WebGrease.ContentItemType)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AddSemicolons</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Configuration.InputSpec&gt;()</signature>
                        <name>get_Inputs</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MinimalOutput</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OutputFile</name>
                    </method>
                    <method>
                        <signature>WebGrease.Configuration.PreprocessingConfig()</signature>
                        <name>get_PreprocessingConfig</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AddSemicolons</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;WebGrease.Configuration.InputSpec&gt;)</signature>
                        <name>set_Inputs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MinimalOutput</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OutputFile</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.PreprocessingConfig)</signature>
                        <name>set_PreprocessingConfig</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AddSemicolons&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Configuration.InputSpec&gt;</signature>
                        <name>&lt;Inputs&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;MinimalOutput&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OutputFile&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.PreprocessingConfig</signature>
                        <name>&lt;PreprocessingConfig&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>EndsWithSemicolon</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>endedInSemicolon</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AddSemicolons</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Configuration.InputSpec&gt;()</signature>
                        <name>Inputs</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MinimalOutput</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OutputFile</name>
                    </property>
                    <property>
                        <signature>WebGrease.Configuration.PreprocessingConfig()</signature>
                        <name>PreprocessingConfig</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.AssemblerActivity/&lt;&gt;c__DisplayClass2</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;Execute&gt;b__0</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;Execute&gt;b__1</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.AssemblerActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>contentItem</name>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItemType</signature>
                        <name>resultContentItemType</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.BundleActivity</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.WebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>&lt;RestoreBundleFromCache&gt;b__4</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.AssemblerActivity, System.Collections.Generic.IEnumerable`1&lt;WebGrease.Configuration.IFileSet&gt;, WebGrease.Activities.FileTypes)</signature>
                        <name>Bundle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.AssemblerActivity, System.Collections.Generic.IEnumerable`1&lt;WebGrease.Configuration.IFileSet&gt;, WebGrease.Activities.FileTypes)</signature>
                        <name>BundleFileSets</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.IEnumerable`1&lt;WebGrease.Configuration.IFileSet&gt;)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>RestoreBundleFromCache</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.WebGreaseContext</signature>
                        <name>context</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.BundleActivity/&lt;&gt;c__DisplayClass2</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;BundleFileSets&gt;b__0</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.BundleActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.AssemblerActivity</signature>
                        <name>assembler</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Configuration.IFileSet&gt;</signature>
                        <name>fileSets</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileTypes</signature>
                        <name>fileType</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.BundleActivity/&lt;&gt;c__DisplayClass6</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.AssemblerActivity</signature>
                        <name>assembler</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.BundleActivity/&lt;&gt;c__DisplayClass8</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Configuration.IFileSet</signature>
                        <name>fileSet</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.BundleActivity/&lt;&gt;c__DisplayClassa</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Configuration.BundlingConfig</signature>
                        <name>bundleConfig</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.BundleActivity/&lt;&gt;c__DisplayClassc</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;Bundle&gt;b__5</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.BundleActivity/&lt;&gt;c__DisplayClass6</signature>
                        <name>CS$&lt;&gt;8__locals7</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.BundleActivity/&lt;&gt;c__DisplayClass8</signature>
                        <name>CS$&lt;&gt;8__locals9</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.BundleActivity/&lt;&gt;c__DisplayClassa</signature>
                        <name>CS$&lt;&gt;8__localsb</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>outputFile</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.PreprocessingConfig</signature>
                        <name>preprocessingConfig</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.CssLocalizationActivity</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Execute&gt;b__11</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Activities.CssLocalizationInput)</signature>
                        <name>&lt;Execute&gt;b__12</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;Execute&gt;b__13</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;ExpandLocaleAndThemeResources&gt;b__17</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.CssLocalizationInput, string)</signature>
                        <name>ExpandLocaleAndThemeResources</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(WebGrease.IWebGreaseContext, WebGrease.ContentItem, System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;, System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;, bool)</signature>
                        <name>LocalizeAndTheme</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Activities.CssLocalizationInput&gt;()</signature>
                        <name>get_CssLocalizationInputs</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DestinationDirectory</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocalesResourcesDirectory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ThemesResourcesDirectory</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;WebGrease.Activities.CssLocalizationInput&gt;)</signature>
                        <name>set_CssLocalizationInputs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DestinationDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LocalesResourcesDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ThemesResourcesDirectory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Activities.CssLocalizationInput&gt;</signature>
                        <name>&lt;CssLocalizationInputs&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DestinationDirectory&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LocalesResourcesDirectory&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ThemesResourcesDirectory&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Activities.CssLocalizationInput,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate14</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate15</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate18</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>ReplaceCssCommentsRegexPattern</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Activities.CssLocalizationInput&gt;()</signature>
                        <name>CssLocalizationInputs</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DestinationDirectory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LocalesResourcesDirectory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ThemesResourcesDirectory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.CssLocalizationActivity/&lt;&gt;c__DisplayClass6</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;LocalizeAndTheme&gt;b__0</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentPivot(string)</signature>
                        <name>&lt;LocalizeAndTheme&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ContentPivot)</signature>
                        <name>&lt;LocalizeAndTheme&gt;b__2</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ContentPivot)</signature>
                        <name>&lt;LocalizeAndTheme&gt;b__5</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;string,WebGrease.ContentPivot&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate8</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>inputItem</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;</signature>
                        <name>localeResources</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.ContentItem&gt;</signature>
                        <name>results</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>shouldMinify</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;</signature>
                        <name>themeResources</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.CssLocalizationActivity/&lt;&gt;c__DisplayClass6/&lt;&gt;c__DisplayClassc</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentPivot&gt;(string)</signature>
                        <name>&lt;LocalizeAndTheme&gt;b__3</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.CssLocalizationActivity/&lt;&gt;c__DisplayClass6</signature>
                        <name>CS$&lt;&gt;8__locals7</name>
                    </field>
                    <field>
                        <signature>System.Tuple`2&lt;System.Collections.Generic.List`1&lt;string&gt;,System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;</signature>
                        <name>groupedThemeResource</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.CssLocalizationActivity/&lt;&gt;c__DisplayClass6/&lt;&gt;c__DisplayClassc/&lt;&gt;c__DisplayClasse</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentPivot(string)</signature>
                        <name>&lt;LocalizeAndTheme&gt;b__4</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.CssLocalizationActivity/&lt;&gt;c__DisplayClass6</signature>
                        <name>CS$&lt;&gt;8__locals7</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.CssLocalizationActivity/&lt;&gt;c__DisplayClass6/&lt;&gt;c__DisplayClassc</signature>
                        <name>CS$&lt;&gt;8__localsd</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>locale</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.CssLocalizationInput</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DestinationFile</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_Locales</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceFile</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_Themes</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DestinationFile</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_Locales</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourceFile</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_Themes</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DestinationFile&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;Locales&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SourceFile&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;Themes&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DestinationFile</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>Locales</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SourceFile</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>Themes</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.ErrorCode</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Default</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.EverythingActivity</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(string)</signature>
                        <name>&lt;Bundle&gt;b__33</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(WebGrease.ContentPivot)</signature>
                        <name>&lt;MinifyCss&gt;b__36</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(WebGrease.ContentPivot)</signature>
                        <name>&lt;MinifyJs&gt;b__39</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(WebGrease.Configuration.IFileSet, string, WebGrease.Activities.FileTypes, string, bool)</signature>
                        <name>Bundle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(System.Collections.Generic.IEnumerable`1&lt;WebGrease.Configuration.InputSpec&gt;, string, WebGrease.Configuration.PreprocessingConfig, WebGrease.Activities.FileTypes, bool)</signature>
                        <name>BundleFiles</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Activities.MinifyCssActivity(WebGrease.Activities.FileHasherActivity, System.Collections.Generic.IList`1&lt;string&gt;, System.Collections.Generic.IList`1&lt;string&gt;, string, WebGrease.Configuration.CssMinificationConfig, WebGrease.Configuration.CssSpritingConfig)</signature>
                        <name>CreateCssMinifier</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.FileHasherActivity, WebGrease.Activities.FileHasherActivity, WebGrease.ICacheSection)</signature>
                        <name>EnsureCssLogFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.FileHasherActivity, WebGrease.ICacheSection)</signature>
                        <name>EnsureJsLogFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.FileHasherActivity, System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;)</signature>
                        <name>EnsureLogFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.IEnumerable`1&lt;WebGrease.Configuration.IFileSet&gt;, WebGrease.Activities.FileTypes)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.IEnumerable`1&lt;WebGrease.Configuration.CssFileSet&gt;, string, string, string, System.Collections.Generic.IList`1&lt;string&gt;, System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>ExecuteCss</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, System.Collections.Generic.IList`1&lt;string&gt;, System.Collections.Generic.IList`1&lt;string&gt;, WebGrease.Configuration.CssFileSet, WebGrease.Activities.FileHasherActivity, WebGrease.Activities.FileHasherActivity, string)</signature>
                        <name>ExecuteCssFileSet</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ExecuteHashImages</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.IEnumerable`1&lt;WebGrease.Configuration.JSFileSet&gt;, string, string, string)</signature>
                        <name>ExecuteJS</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Configuration.JSFileSet, WebGrease.Activities.FileHasherActivity, string)</signature>
                        <name>ExecuteJSFileSet</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, string, string, WebGrease.ContentPivot)</signature>
                        <name>GetContentPivotDestinationFilePath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(WebGrease.ContentItem, string, string)</signature>
                        <name>GetDestinationFilePaths</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Activities.FileHasherActivity(WebGrease.IWebGreaseContext, string, string, WebGrease.Activities.FileTypes, string, string, System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>GetFileHasher</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Activities.FileHasherActivity(string, System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>GetImageFileHasher</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;(WebGrease.Configuration.IFileSet, WebGrease.IWebGreaseContext, WebGrease.Activities.FileTypes)</signature>
                        <name>GetLocaleResources</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;(WebGrease.Configuration.CssFileSet, WebGrease.IWebGreaseContext, WebGrease.Activities.FileTypes)</signature>
                        <name>GetThemeResources</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem, System.Exception, string, string)</signature>
                        <name>HandleError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(WebGrease.Activities.FileHasherActivity, System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;, string, string)</signature>
                        <name>HashContentItems</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext, WebGrease.Activities.FileHasherActivity, System.Collections.Generic.IEnumerable`1&lt;string&gt;, System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>HashImages</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;, System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;, System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;, bool)</signature>
                        <name>LocalizeAndThemeCss</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;, System.Collections.Generic.IEnumerable`1&lt;string&gt;, System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;)</signature>
                        <name>LocalizeJs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Activities.MinifyCssResult&gt;(System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;, WebGrease.Activities.MinifyCssActivity, WebGrease.Activities.FileHasherActivity, bool)</signature>
                        <name>MinifyCss</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;, WebGrease.Configuration.JsMinificationConfig, WebGrease.Configuration.JSValidationConfig)</signature>
                        <name>MinifyJs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(string, System.Collections.Generic.IEnumerable`1&lt;WebGrease.Configuration.InputSpec&gt;, WebGrease.Configuration.PreprocessingConfig)</signature>
                        <name>PreprocessFiles</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.ContentPivot,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate37</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.ContentPivot,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3a</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CssDestinationDirectoryName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ImagesDestinationDirectoryName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>JsDestinationDirectoryName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PreprocessingTempDirectory</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>StaticAssemblerDirectoryName</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ToolsTempDirectoryName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>imagesLogFile</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>logDirectory</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>preprocessingTempDirectory</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>staticAssemblerDirectory</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>toolsTempDirectory</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.EverythingActivity/&lt;&gt;c__DisplayClass1c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;ExecuteCssFileSet&gt;b__10</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ContentItem)</signature>
                        <name>&lt;ExecuteCssFileSet&gt;b__11</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Activities.MinifyCssResult)</signature>
                        <name>&lt;ExecuteCssFileSet&gt;b__12</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(WebGrease.Activities.MinifyCssResult)</signature>
                        <name>&lt;ExecuteCssFileSet&gt;b__13</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(WebGrease.Activities.MinifyCssResult)</signature>
                        <name>&lt;ExecuteCssFileSet&gt;b__15</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;ExecuteCssFileSet&gt;b__17</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>&lt;ExecuteCssFileSet&gt;b__18</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>&lt;ExecuteCssFileSet&gt;b__19</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>&lt;ExecuteCssFileSet&gt;b__1a</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ICacheSection)</signature>
                        <name>&lt;ExecuteCssFileSet&gt;b__1b</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.EverythingActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.ContentItem,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1e</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Activities.MinifyCssResult,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1f</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Activities.MinifyCssResult,WebGrease.ContentItem&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate20</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Activities.MinifyCssResult,System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate21</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>configType</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.CssFileSet</signature>
                        <name>cssFileSet</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileHasherActivity</signature>
                        <name>cssHasher</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.CssMinificationConfig</signature>
                        <name>cssMinificationConfig</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.CssSpritingConfig</signature>
                        <name>cssSpritingConfig</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>imageDirectories</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>imageExtensions</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileHasherActivity</signature>
                        <name>imageHasher</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>imagesDestinationDirectory</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.EverythingActivity/&lt;&gt;c__DisplayClass1c/&lt;&gt;c__DisplayClass22</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>&lt;ExecuteCssFileSet&gt;b__14</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>&lt;ExecuteCssFileSet&gt;b__16</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.EverythingActivity/&lt;&gt;c__DisplayClass1c</signature>
                        <name>CS$&lt;&gt;8__locals1d</name>
                    </field>
                    <field>
                        <signature>WebGrease.ICacheSection</signature>
                        <name>cacheSection</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.EverythingActivity/&lt;&gt;c__DisplayClass26</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;ExecuteJS&gt;b__24</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ICacheSection)</signature>
                        <name>&lt;ExecuteJS&gt;b__25</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.EverythingActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>configType</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Configuration.JSFileSet&gt;</signature>
                        <name>jsFileSets</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileHasherActivity</signature>
                        <name>jsHasher</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.EverythingActivity/&lt;&gt;c__DisplayClass2e</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;ExecuteJSFileSet&gt;b__28</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ContentItem)</signature>
                        <name>&lt;ExecuteJSFileSet&gt;b__29</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ICacheSection)</signature>
                        <name>&lt;ExecuteJSFileSet&gt;b__2b</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;ExecuteJSFileSet&gt;b__2c</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>&lt;ExecuteJSFileSet&gt;b__2d</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.EverythingActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.ContentItem,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate30</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>configType</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.JSFileSet</signature>
                        <name>jsFileSet</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileHasherActivity</signature>
                        <name>jsHasher</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.EverythingActivity/&lt;&gt;c__DisplayClass2e/&lt;&gt;c__DisplayClass31</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>&lt;ExecuteJSFileSet&gt;b__2a</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.EverythingActivity/&lt;&gt;c__DisplayClass2e</signature>
                        <name>CS$&lt;&gt;8__locals2f</name>
                    </field>
                    <field>
                        <signature>WebGrease.ICacheSection</signature>
                        <name>cacheSection</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.EverythingActivity/&lt;&gt;c__DisplayClass9</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;HashImages&gt;b__4</name>
                    </method>
                    <method>
                        <signature>WebGrease.Configuration.InputSpec(string)</signature>
                        <name>&lt;HashImages&gt;b__5</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ICacheSection)</signature>
                        <name>&lt;HashImages&gt;b__6</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;HashImages&gt;b__7</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>&lt;HashImages&gt;b__8</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;string,WebGrease.Configuration.InputSpec&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>imageDirectoriesToHash</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>imageExtensions</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileHasherActivity</signature>
                        <name>imageHasher</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.EverythingActivity/&lt;&gt;c__DisplayClasse</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;ExecuteCss&gt;b__c</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ICacheSection)</signature>
                        <name>&lt;ExecuteCss&gt;b__d</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.EverythingActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>configType</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Configuration.CssFileSet&gt;</signature>
                        <name>cssFileSets</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileHasherActivity</signature>
                        <name>cssHasher</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>imageDirectories</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>imageExtensions</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>imageHashedOutputPath</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileHasherActivity</signature>
                        <name>imageHasher</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.FileHasherActivity</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.List`1&lt;string&gt;&gt;)</signature>
                        <name>&lt;AppendToWorkLog&gt;b__6</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Execute&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Xml.Linq.XElement)</signature>
                        <name>&lt;LoadBeforeWrite&gt;b__10</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Xml.Linq.XElement)</signature>
                        <name>&lt;LoadBeforeWrite&gt;b__f</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;WriteLog&gt;b__b</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;WriteLog&gt;b__c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(WebGrease.ContentItem, System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>AppendToWorkLog</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;)</signature>
                        <name>AppendToWorkLog</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>AppendToWorkLog</name>
                    </method>
                    <method>
                        <signature>void(string, string, bool)</signature>
                        <name>AppendToWorkLog</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetConfigTypeLogFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, string, string)</signature>
                        <name>GetDestinationFilePath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(string)</signature>
                        <name>GetFilters</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Xml.Linq.XElement(string)</signature>
                        <name>GetLogRoot</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetUrlPath</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(WebGrease.ContentItem, System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>Hash</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(string, string, System.Collections.Generic.IEnumerable`1&lt;string&gt;, string)</signature>
                        <name>Hash</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(WebGrease.ContentItem)</signature>
                        <name>Hash</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadBeforeWrite</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MakeOutputAbsolute</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>NormalizeFileForWorkLog</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>WriteLog</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BasePrefixToAddToOutputPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BasePrefixToRemoveFromInputPathInLog</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BasePrefixToRemoveFromOutputPathInLog</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConfigType</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CreateExtraDirectoryLevelFromHashes</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DestinationDirectory</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Activities.FileTypes()</signature>
                        <name>get_FileType</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileTypeFilter</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LogFileName</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldPreserveSourceDirectoryStructure</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_SourceDirectories</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BasePrefixToAddToOutputPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BasePrefixToRemoveFromInputPathInLog</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BasePrefixToRemoveFromOutputPathInLog</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ConfigType</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CreateExtraDirectoryLevelFromHashes</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DestinationDirectory</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.FileTypes)</signature>
                        <name>set_FileType</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileTypeFilter</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LogFileName</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldPreserveSourceDirectoryStructure</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_SourceDirectories</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BasePrefixToAddToOutputPath&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BasePrefixToRemoveFromInputPathInLog&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BasePrefixToRemoveFromOutputPathInLog&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ConfigType&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;CreateExtraDirectoryLevelFromHashes&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DestinationDirectory&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileTypes</signature>
                        <name>&lt;FileType&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileTypeFilter&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LogFileName&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldPreserveSourceDirectoryStructure&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;SourceDirectories&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Xml.Linq.XElement,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate11</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Xml.Linq.XElement,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate12</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.List`1&lt;string&gt;&gt;,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate7</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegated</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatee</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;string&gt;&gt;</signature>
                        <name>renamedFilesLog</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BasePrefixToAddToOutputPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BasePrefixToRemoveFromInputPathInLog</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BasePrefixToRemoveFromOutputPathInLog</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ConfigType</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CreateExtraDirectoryLevelFromHashes</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DestinationDirectory</name>
                    </property>
                    <property>
                        <signature>WebGrease.Activities.FileTypes()</signature>
                        <name>FileType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileTypeFilter</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LogFileName</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldPreserveSourceDirectoryStructure</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>SourceDirectories</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.FileHasherActivity/&lt;&gt;c__DisplayClass3</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(string)</signature>
                        <name>&lt;Hash&gt;b__1</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(System.IO.FileInfo)</signature>
                        <name>&lt;Hash&gt;b__2</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.FileHasherActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rootSourceDirectory</name>
                    </field>
                    <field>
                        <signature>System.IO.DirectoryInfo</signature>
                        <name>sourceDirectoryInfo</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.FileHasherActivity/&lt;&gt;c__DisplayClass8</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.List`1&lt;string&gt;&gt;)</signature>
                        <name>&lt;AppendToWorkLog&gt;b__5</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>fileAfterHashing</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fileBeforeHashing</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.FileTypes</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.FileTypes</signature>
                        <name>All</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileTypes</signature>
                        <name>CSS</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileTypes</signature>
                        <name>Image</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileTypes</signature>
                        <name>JS</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileTypes</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.JSLocalizationActivity</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Execute&gt;b__8</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Activities.JSLocalizationInput)</signature>
                        <name>&lt;Execute&gt;b__9</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;Execute&gt;b__a</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;)</signature>
                        <name>&lt;Localize&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.JSLocalizationInput, string, string)</signature>
                        <name>ExpandLocaleResources</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(WebGrease.IWebGreaseContext, WebGrease.ContentItem, System.Collections.Generic.IEnumerable`1&lt;string&gt;, System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;)</signature>
                        <name>Localize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DestinationDirectory</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Activities.JSLocalizationInput&gt;()</signature>
                        <name>get_JsLocalizationInputs</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ResourcesDirectory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DestinationDirectory</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;WebGrease.Activities.JSLocalizationInput&gt;)</signature>
                        <name>set_JsLocalizationInputs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ResourcesDirectory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DestinationDirectory&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Activities.JSLocalizationInput&gt;</signature>
                        <name>&lt;JsLocalizationInputs&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ResourcesDirectory&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Activities.JSLocalizationInput,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatec</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DestinationDirectory</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Activities.JSLocalizationInput&gt;()</signature>
                        <name>JsLocalizationInputs</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ResourcesDirectory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.JSLocalizationActivity/&lt;&gt;c__DisplayClass4</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Localize&gt;b__1</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentPivot(string)</signature>
                        <name>&lt;Localize&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;string,WebGrease.ContentPivot&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate6</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>contentItem</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;</signature>
                        <name>localeResources</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.ContentItem&gt;</signature>
                        <name>results</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.JSLocalizationInput</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DestinationFile</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_Locales</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceFile</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DestinationFile</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_Locales</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourceFile</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DestinationFile&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;Locales&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SourceFile&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DestinationFile</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>Locales</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SourceFile</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.LogError</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(System.Exception, string, string, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.Exception, string, string)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.LogExtendedError</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(string, string, string, string, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, string, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, string)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyCssActivity</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage)</signature>
                        <name>&lt;CreateSpritedImages&gt;b__20</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(WebGrease.ImageAssemble.InputImage)</signature>
                        <name>&lt;GetRelativeSpriteCacheKey&gt;b__25</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetRelativeSpriteCacheKey&gt;b__26</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Tuple`2&lt;string,System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;&gt;(WebGrease.Css.Ast.AstNode)</signature>
                        <name>ApplyConfiguredVisitors</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageLog(string, WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog, System.Collections.Generic.IEnumerable`1&lt;WebGrease.ImageAssemble.InputImage&gt;, WebGrease.ICacheSection, System.Collections.Generic.ICollection`1&lt;WebGrease.ContentItem&gt;)</signature>
                        <name>CreateSpritedImages</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Visitor.ImageAssemblyScanVisitor(WebGrease.Css.Ast.AstNode)</signature>
                        <name>ExecuteImageAssemblyScan</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.AstNode, System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageLog&gt;)</signature>
                        <name>ExecuteImageAssemblyUpdate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.IEnumerable`1&lt;WebGrease.ImageAssemble.InputImage&gt;)</signature>
                        <name>GetRelativeSpriteCacheKey</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(WebGrease.Activities.FileHasherActivity)</signature>
                        <name>GetVarBySettings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Tuple`2&lt;string,System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;&gt;(string, WebGrease.Activities.FileHasherActivity, WebGrease.ICacheSection)</signature>
                        <name>HashImages</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(WebGrease.IWebGreaseContext, string)</signature>
                        <name>PreHashImages</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Activities.MinifyCssResult(WebGrease.ContentItem, WebGrease.Activities.FileHasherActivity)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageLog(string, WebGrease.ICacheSection, System.Collections.Generic.List`1&lt;WebGrease.ContentItem&gt;)</signature>
                        <name>RestoreSpritedImagesFromCache</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Tuple`2&lt;WebGrease.Css.Ast.AstNode,System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;&gt;(WebGrease.Css.Ast.AstNode)</signature>
                        <name>SpriteBackgroundImages</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Tuple`2&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageLog,System.Collections.Generic.List`1&lt;WebGrease.ContentItem&gt;&gt;(WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanOutput, string, WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog)</signature>
                        <name>SpriteImageFromLog</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput&gt;()</signature>
                        <name>get_AdditionalImageAssemblyBuckets</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;()</signature>
                        <name>get_BannedSelectors</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DestinationFile</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ErrorOnInvalidSprite</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;()</signature>
                        <name>get_ForcedSpritingImageType</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;()</signature>
                        <name>get_HackSelectors</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IgnoreImagesWithNonDefaultBackgroundSize</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;()</signature>
                        <name>get_ImageAssembleReferencesToIgnore</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImageAssembleScanDestinationFile</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>get_ImageAssemblyPadding</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImageBasePrefixToAddToOutputPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImageBasePrefixToRemoveFromOutputPathInLog</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_ImageDirectories</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_ImageExtensions</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImageSpritingLogPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImagesOutputDirectory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OutputUnit</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_OutputUnitFactor</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldAssembleBackgroundImages</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldExcludeProperties</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldMergeMediaQueries</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldMinify</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldOptimize</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldValidateForLowerCase</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceFile</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput&gt;)</signature>
                        <name>set_AdditionalImageAssemblyBuckets</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.HashSet`1&lt;string&gt;)</signature>
                        <name>set_BannedSelectors</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DestinationFile</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ErrorOnInvalidSprite</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;)</signature>
                        <name>set_ForcedSpritingImageType</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.HashSet`1&lt;string&gt;)</signature>
                        <name>set_HackSelectors</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IgnoreImagesWithNonDefaultBackgroundSize</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.HashSet`1&lt;string&gt;)</signature>
                        <name>set_ImageAssembleReferencesToIgnore</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ImageAssembleScanDestinationFile</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>set_ImageAssemblyPadding</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ImageBasePrefixToAddToOutputPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ImageBasePrefixToRemoveFromOutputPathInLog</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_ImageDirectories</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_ImageExtensions</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ImageSpritingLogPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ImagesOutputDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OutputUnit</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_OutputUnitFactor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldAssembleBackgroundImages</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldExcludeProperties</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldMergeMediaQueries</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldMinify</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldOptimize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldValidateForLowerCase</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourceFile</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput&gt;</signature>
                        <name>&lt;AdditionalImageAssemblyBuckets&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>&lt;BannedSelectors&gt;k__BackingField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DestinationFile&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ErrorOnInvalidSprite&gt;k__BackingField</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;</signature>
                        <name>&lt;ForcedSpritingImageType&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>&lt;HackSelectors&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IgnoreImagesWithNonDefaultBackgroundSize&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>&lt;ImageAssembleReferencesToIgnore&gt;k__BackingField</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ImageAssembleScanDestinationFile&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>&lt;ImageAssemblyPadding&gt;k__BackingField</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ImageBasePrefixToAddToOutputPath&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ImageBasePrefixToRemoveFromOutputPathInLog&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;ImageDirectories&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;ImageExtensions&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ImageSpritingLogPath&gt;k__BackingField</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ImagesOutputDirectory&gt;k__BackingField</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OutputUnit&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>&lt;OutputUnitFactor&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldAssembleBackgroundImages&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldExcludeProperties&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldMergeMediaQueries&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldMinify&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldOptimize&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldValidateForLowerCase&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SourceFile&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate21</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>UrlHashAllRegexPattern</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>UrlHashRegexPattern</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;</signature>
                        <name>availableSourceImages</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput&gt;()</signature>
                        <name>AdditionalImageAssemblyBuckets</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;()</signature>
                        <name>BannedSelectors</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DestinationFile</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ErrorOnInvalidSprite</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;()</signature>
                        <name>ForcedSpritingImageType</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;()</signature>
                        <name>HackSelectors</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IgnoreImagesWithNonDefaultBackgroundSize</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;()</signature>
                        <name>ImageAssembleReferencesToIgnore</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImageAssembleScanDestinationFile</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>ImageAssemblyPadding</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImageBasePrefixToAddToOutputPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImageBasePrefixToRemoveFromOutputPathInLog</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>ImageDirectories</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>ImageExtensions</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImageSpritingLogPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImagesOutputDirectory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OutputUnit</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>OutputUnitFactor</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldAssembleBackgroundImages</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldExcludeProperties</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldMergeMediaQueries</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldMinify</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldOptimize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldValidateForLowerCase</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SourceFile</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyCssActivity/&lt;&gt;c__DisplayClass17</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ApplyConfiguredVisitors&gt;b__13</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ApplyConfiguredVisitors&gt;b__14</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;ApplyConfiguredVisitors&gt;b__15</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.MinifyCssActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.AstNode</signature>
                        <name>stylesheetNode</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyCssActivity/&lt;&gt;c__DisplayClass1a</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Tuple`2&lt;WebGrease.Css.Ast.AstNode,System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;&gt;()</signature>
                        <name>&lt;SpriteBackgroundImages&gt;b__19</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.MinifyCssActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.AstNode</signature>
                        <name>stylesheetNode</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyCssActivity/&lt;&gt;c__DisplayClass1e</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;SpriteImageFromLog&gt;b__1c</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;SpriteImageFromLog&gt;b__1d</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.MinifyCssActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog</signature>
                        <name>imageAssemblyAnalysisLog</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageLog</signature>
                        <name>imageLog</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.ImageAssemble.InputImage&gt;</signature>
                        <name>imageReferencesToAssemble</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mapXmlFile</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.ContentItem&gt;</signature>
                        <name>results</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyCssActivity/&lt;&gt;c__DisplayClass23</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>&lt;RestoreSpritedImagesFromCache&gt;b__22</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>destinationDirectory</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyCssActivity/&lt;&gt;c__DisplayClass3</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;Process&gt;b__0</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;Process&gt;b__2</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.MinifyCssActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>contentItem</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.ContentItem&gt;</signature>
                        <name>hashedImageContentItems</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileHasherActivity</signature>
                        <name>imageHasher</name>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>minifiedContentItem</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.ContentItem&gt;</signature>
                        <name>spritedImageContentItems</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyCssActivity/&lt;&gt;c__DisplayClass3/&lt;&gt;c__DisplayClass5</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.StyleSheetNode()</signature>
                        <name>&lt;Process&gt;b__1</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.MinifyCssActivity/&lt;&gt;c__DisplayClass3</signature>
                        <name>CS$&lt;&gt;8__locals4</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>cssContent</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyCssActivity/&lt;&gt;c__DisplayClass9</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;PreHashImages&gt;b__7</name>
                    </method>
                    <method>
                        <signature>string(System.Text.RegularExpressions.Match)</signature>
                        <name>&lt;PreHashImages&gt;b__8</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Text.RegularExpressions.MatchEvaluator</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>cssContent</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyCssActivity/&lt;&gt;c__DisplayClasse</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Tuple`2&lt;string,System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;&gt;()</signature>
                        <name>&lt;HashImages&gt;b__c</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.MinifyCssActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.ICacheSection</signature>
                        <name>cacheSection</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>cssContent</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileHasherActivity</signature>
                        <name>imageHasher</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyCssActivity/&lt;&gt;c__DisplayClasse/&lt;&gt;c__DisplayClass10</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(System.Text.RegularExpressions.Match)</signature>
                        <name>&lt;HashImages&gt;b__d</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.MinifyCssActivity/&lt;&gt;c__DisplayClasse</signature>
                        <name>CS$&lt;&gt;8__localsf</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>contentImagesToHash</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.ContentItem&gt;</signature>
                        <name>hashedContentItems</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>hashedImages</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyCssResult</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.ContentItem, System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;, System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem()</signature>
                        <name>get_Css</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;()</signature>
                        <name>get_HashedImages</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;()</signature>
                        <name>get_SpritedImages</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>set_Css</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;)</signature>
                        <name>set_HashedImages</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;)</signature>
                        <name>set_SpritedImages</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>&lt;Css&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;</signature>
                        <name>&lt;HashedImages&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;</signature>
                        <name>&lt;SpritedImages&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.ContentItem()</signature>
                        <name>Css</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;()</signature>
                        <name>HashedImages</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;()</signature>
                        <name>SpritedImages</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyJSActivity</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>Microsoft.Ajax.Utilities.SwitchParser(Microsoft.Ajax.Utilities.Minifier)</signature>
                        <name>GetMinifierSettings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem, System.Collections.Generic.ICollection`1&lt;Microsoft.Ajax.Utilities.ContextError&gt;)</signature>
                        <name>HandleMinifierErrors</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(WebGrease.ContentItem)</signature>
                        <name>Minify</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AnalyzeArgs</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DestinationFile</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MinifyArgs</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldAnalyze</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldMinify</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceFile</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AnalyzeArgs</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DestinationFile</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MinifyArgs</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldAnalyze</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldMinify</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourceFile</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AnalyzeArgs&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DestinationFile&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MinifyArgs&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldAnalyze&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldMinify&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SourceFile&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AnalyzeArgs</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DestinationFile</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MinifyArgs</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldAnalyze</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldMinify</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SourceFile</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.MinifyJSActivity/&lt;&gt;c__DisplayClass3</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;Minify&gt;b__1</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;Minify&gt;b__2</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.MinifyJSActivity</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>minifiedJsContentItem</name>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>sourceContentItem</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.PreprocessorActivity</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;()</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Configuration.InputSpec&gt;()</signature>
                        <name>get_Inputs</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MinimalOutput</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OutputFolder</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Configuration.PreprocessingConfig()</signature>
                        <name>get_PreprocessingConfig</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;WebGrease.Configuration.InputSpec&gt;)</signature>
                        <name>set_Inputs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MinimalOutput</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OutputFolder</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.PreprocessingConfig)</signature>
                        <name>set_PreprocessingConfig</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Configuration.InputSpec&gt;</signature>
                        <name>&lt;Inputs&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;MinimalOutput&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OutputFolder&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.PreprocessingConfig</signature>
                        <name>&lt;PreprocessingConfig&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Configuration.InputSpec&gt;()</signature>
                        <name>Inputs</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MinimalOutput</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OutputFolder</name>
                    </property>
                    <property>
                        <signature>WebGrease.Configuration.PreprocessingConfig()</signature>
                        <name>PreprocessingConfig</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.RenamedFile</name>
                <methodlist>
                    <method>
                        <signature>void(System.Xml.Linq.XContainer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_InputNames</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OutputName</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_InputNames</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OutputName</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;InputNames&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OutputName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>InputNames</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OutputName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.RenamedFilesLog</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Activities.RenamedFile&gt;()</signature>
                        <name>get_RenamedFiles</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;WebGrease.Activities.RenamedFile&gt;)</signature>
                        <name>set_RenamedFiles</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Activities.RenamedFile&gt;</signature>
                        <name>&lt;RenamedFiles&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Activities.RenamedFile&gt;()</signature>
                        <name>RenamedFiles</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.RenamedFilesLogs</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.ICollection`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.RenamedFile)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.RenamedFile)</signature>
                        <name>&lt;.ctor&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;.ctor&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>AllInputFileNamesMatch</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>FindHashPath</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>HasItems</name>
                    </method>
                    <method>
                        <signature>WebGrease.Activities.RenamedFilesLogs(string)</signature>
                        <name>LoadHashedImagesLogs</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>NormalizeSlash</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate8</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>dictionary</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;string&gt;&gt;</signature>
                        <name>m_reverseDictionary</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.RenamedFilesLogs/&lt;&gt;c__DisplayClass6</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;.ctor&gt;b__1</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.RenamedFilesLogs</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.RenamedFile</signature>
                        <name>renamedFile</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.ResourceDirectoryPath</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowOverrides</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Directory</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowOverrides</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Directory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AllowOverrides&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Directory&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AllowOverrides</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Directory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.ResourceOverrideException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>GetObjectData</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TokenKey</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TokenKey</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TokenKey&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TokenKey</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.ResourceType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.ResourceType</signature>
                        <name>Locales</name>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.ResourceType</signature>
                        <name>Themes</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.ResourcesManager</name>
                <methodlist>
                    <method>
                        <signature>bool(string, string, string&amp;)</signature>
                        <name>HasResources</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, System.Collections.Generic.Dictionary`2&lt;string,string&gt;&amp;)</signature>
                        <name>TryGetResources</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.ResourcesResolutionActivity</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Execute&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>&lt;GetMergedResources&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetMergedResources</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>HasSomethingToResolve</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ApplicationDirectoryName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DestinationDirectory</name>
                    </method>
                    <method>
                        <signature>WebGrease.Activities.FileTypes()</signature>
                        <name>get_FileType</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_ResourceKeys</name>
                    </method>
                    <method>
                        <signature>WebGrease.Activities.ResourceType()</signature>
                        <name>get_ResourceTypeFilter</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SiteDirectoryName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ApplicationDirectoryName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DestinationDirectory</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.FileTypes)</signature>
                        <name>set_FileType</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_ResourceKeys</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.ResourceType)</signature>
                        <name>set_ResourceTypeFilter</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SiteDirectoryName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourceDirectory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ApplicationDirectoryName&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DestinationDirectory&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.FileTypes</signature>
                        <name>&lt;FileType&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;ResourceKeys&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.ResourceType</signature>
                        <name>&lt;ResourceTypeFilter&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SiteDirectoryName&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SourceDirectory&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;</signature>
                        <name>EmptyResult</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ApplicationDirectoryName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DestinationDirectory</name>
                    </property>
                    <property>
                        <signature>WebGrease.Activities.FileTypes()</signature>
                        <name>FileType</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>ResourceKeys</name>
                    </property>
                    <property>
                        <signature>WebGrease.Activities.ResourceType()</signature>
                        <name>ResourceTypeFilter</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SiteDirectoryName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SourceDirectory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.ResourcesResolver</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext, string, WebGrease.Activities.ResourceType, string, string, System.Collections.Generic.IEnumerable`1&lt;string&gt;, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(System.Collections.Generic.IDictionary`2&lt;string,string&gt;)</signature>
                        <name>&lt;GetGroupedUsedResourceKeys&gt;b__8</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Text.RegularExpressions.Match)</signature>
                        <name>&lt;GetGroupedUsedResourceKeys&gt;b__9</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetGroupedUsedResourceKeys&gt;b__a</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>&lt;GetGroupedUsedResourceKeys&gt;b__c</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>&lt;GetGroupedUsedResourceKeys&gt;b__d</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>&lt;GetGroupedUsedResourceKeys&gt;b__e</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Activities.ResourceDirectoryPath)</signature>
                        <name>&lt;GetResources&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, System.Collections.Generic.IDictionary`2&lt;string,string&gt;)</signature>
                        <name>ExpandResourceKeys</name>
                    </method>
                    <method>
                        <signature>WebGrease.Activities.ResourcesResolver(WebGrease.IWebGreaseContext, string, WebGrease.Activities.ResourceType, string, string, System.Collections.Generic.IEnumerable`1&lt;string&gt;, string)</signature>
                        <name>Factory</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;System.Tuple`2&lt;System.Collections.Generic.List`1&lt;string&gt;,System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;&gt;(string, System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;)</signature>
                        <name>GetGroupedUsedResourceKeys</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetMergedResources</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.SortedDictionary`2&lt;string,string&gt;(string, string)</signature>
                        <name>GetResources</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,string&gt;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;, bool, bool)</signature>
                        <name>MergeResources</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(string)</signature>
                        <name>ReadResources</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResolveHierarchy</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.Collections.Generic.IDictionary`2&lt;string,string&gt;)</signature>
                        <name>WriteResources</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;System.Text.RegularExpressions.Match,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate10</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate11</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate13</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate14</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate15</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Activities.ResourceDirectoryPath,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.IDictionary`2&lt;string,string&gt;,System.Collections.Generic.IEnumerable`1&lt;string&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatef</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>LocalizationResourceKeyRegex</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>outputDirectoryPath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Activities.ResourceDirectoryPath&gt;</signature>
                        <name>resourceDirectoryPaths</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>resourceKeys</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.ResourcesResolver/&lt;&gt;c__DisplayClass16</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>&lt;GetGroupedUsedResourceKeys&gt;b__b</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>usedResourceKeys</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Activities.ResourcesResolver/&lt;&gt;c__DisplayClass6</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(System.Text.RegularExpressions.Match)</signature>
                        <name>&lt;ExpandResourceKeys&gt;b__5</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;</signature>
                        <name>resources</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.BuildWorkflowException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, string, int32, int32, int32, int32, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>GetObjectData</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ColumnNumber</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EndColumnNumber</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EndLineNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_File</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasDetailedError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HelpKeyword</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_LineNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Subcategory</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ColumnNumber</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_EndColumnNumber</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_EndLineNumber</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ErrorCode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_File</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HasDetailedError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_HelpKeyword</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_LineNumber</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Subcategory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ColumnNumber&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;EndColumnNumber&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;EndLineNumber&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ErrorCode&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;File&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;HasDetailedError&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;HelpKeyword&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;LineNumber&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Subcategory&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>ColumnNumber</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>EndColumnNumber</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>EndLineNumber</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorCode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>File</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasDetailedError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HelpKeyword</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>LineNumber</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Subcategory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CacheDependencyGraph</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>AddDependencyLink</name>
                    </method>
                    <method>
                        <signature>System.Guid(string)</signature>
                        <name>AddDependencyNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Save</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.Guid,System.Guid&gt;&gt;</signature>
                        <name>links</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,System.Guid&gt;</signature>
                        <name>nodes</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CacheDependencyGraph/&lt;&gt;c__DisplayClass2</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Xml.Linq.XElement(System.Collections.Generic.KeyValuePair`2&lt;string,System.Guid&gt;)</signature>
                        <name>&lt;Save&gt;b__0</name>
                    </method>
                    <method>
                        <signature>System.Xml.Linq.XElement(System.Collections.Generic.KeyValuePair`2&lt;System.Guid,System.Guid&gt;)</signature>
                        <name>&lt;Save&gt;b__1</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Xml.Linq.XNamespace</signature>
                        <name>xmlns</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CacheFileCategories</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>AssemblerResult</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HashedImage</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HashedMinifiedCssResult</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HashedMinifiedJsResult</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HashedSpriteImage</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MinifiedCssResult</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MinifiedJsResult</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PreprocessingResult</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RelativeFileNames</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SolutionCacheConfig</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SpriteLogFile</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SpriteLogFileXml</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CacheManager</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Configuration.WebGreaseConfiguration, WebGrease.LogManager)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICacheSection(string, WebGrease.ContentItem, object, WebGrease.Configuration.IFileSet)</signature>
                        <name>BeginSection</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CleanUp</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ICacheSection)</signature>
                        <name>EndSection</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetAbsoluteCacheFilePath</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>SetContext</name>
                    </method>
                    <method>
                        <signature>string(string, WebGrease.ContentItem)</signature>
                        <name>StoreInCache</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICacheSection()</signature>
                        <name>get_CurrentCacheSection</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.ReadOnlyCacheSection&gt;()</signature>
                        <name>get_LoadedCacheSections</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RootPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>cacheRootPath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ICacheSection</signature>
                        <name>currentCacheSection</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.ReadOnlyCacheSection&gt;</signature>
                        <name>loadedCacheSections</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.ICacheSection()</signature>
                        <name>CurrentCacheSection</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.ReadOnlyCacheSection&gt;()</signature>
                        <name>LoadedCacheSections</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RootPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CacheManager/&lt;&gt;c__DisplayClass1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ICacheSection)</signature>
                        <name>&lt;BeginSection&gt;b__0</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.CacheManager</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.IFileSet</signature>
                        <name>cacheVaryByFileSet</name>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>contentItem</name>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>settings</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CacheManager/&lt;&gt;c__DisplayClass4</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;CleanUp&gt;b__3</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>expireTime</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CacheResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.CacheResult(WebGrease.IWebGreaseContext, string, bool, string, WebGrease.ContentItem)</signature>
                        <name>FromContentFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CachedFilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ContentHash</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_EndResult</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileCategory</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RelativeContentPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RelativeHashedContentPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CachedFilePath</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ContentHash</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_EndResult</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileCategory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RelativeContentPath</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RelativeHashedContentPath</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CachedFilePath&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ContentHash&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;EndResult&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileCategory&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RelativeContentPath&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RelativeHashedContentPath&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CachedFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ContentHash</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>EndResult</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileCategory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RelativeContentPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RelativeHashedContentPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CacheSection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.CacheSection&gt;()</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(WebGrease.CacheVaryByFile)</signature>
                        <name>&lt;Begin&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(WebGrease.CacheResult)</signature>
                        <name>&lt;GetCachedContentItems&gt;b__b</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(WebGrease.CacheSection)</signature>
                        <name>&lt;ToReadOnlyCacheSectionJson&gt;b__d</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.CacheResult)</signature>
                        <name>&lt;Touch&gt;b__f</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.CacheSection)</signature>
                        <name>AddChildCacheSection</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem, string, bool)</signature>
                        <name>AddResult</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.InputSpec)</signature>
                        <name>AddSourceDependency</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddSourceDependency</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.IO.SearchOption)</signature>
                        <name>AddSourceDependency</name>
                    </method>
                    <method>
                        <signature>WebGrease.CacheSection(WebGrease.IWebGreaseContext, string, System.Action`1&lt;WebGrease.ICacheSection&gt;, WebGrease.ICacheSection)</signature>
                        <name>Begin</name>
                    </method>
                    <method>
                        <signature>WebGrease.CacheSection(WebGrease.IWebGreaseContext, string, string, WebGrease.ICacheSection)</signature>
                        <name>Begin</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CanBeRestoredFromCache</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CanBeSkipped</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EndSection</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext, string)</signature>
                        <name>EnsureCachePath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string)</signature>
                        <name>GetCacheData</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.CacheResult&gt;(string, bool)</signature>
                        <name>GetCacheResults</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(string)</signature>
                        <name>GetCachedContentItem</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(string, string, string, System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentPivot&gt;)</signature>
                        <name>GetCachedContentItem</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(string, bool)</signature>
                        <name>GetCachedContentItems</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(string, !!0)</signature>
                        <name>SetCacheData</name>
                    </method>
                    <method>
                        <signature>string(WebGrease.CacheSection)</signature>
                        <name>ToReadOnlyCacheSectionJson</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Touch</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>VaryByContentItem</name>
                    </method>
                    <method>
                        <signature>void(object, bool)</signature>
                        <name>VaryBySettings</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.CacheSection&gt;()</signature>
                        <name>get_ChildCacheSections</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ICacheSection()</signature>
                        <name>get_Parent</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UniqueKey</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`1&lt;System.Collections.Generic.List`1&lt;WebGrease.CacheSection&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.CacheVaryByFile,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.CacheResult,WebGrease.ContentItem&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatec</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.CacheSection,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatee</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CacheSectionFileVersionKey</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>absolutePath</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>cacheCategory</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.CacheResult&gt;</signature>
                        <name>cacheResults</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ReadOnlyCacheSection</signature>
                        <name>cachedSection</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Lazy`1&lt;System.Collections.Generic.List`1&lt;WebGrease.CacheSection&gt;&gt;</signature>
                        <name>childCacheSections</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isUnsaved</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>WebGrease.CacheSection</signature>
                        <name>parent</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.CacheSourceDependency&gt;</signature>
                        <name>sourceDependencies</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>uniqueKey</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.CacheVaryByFile&gt;</signature>
                        <name>varyByFiles</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>varyBySettings</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.CacheSection&gt;()</signature>
                        <name>ChildCacheSections</name>
                    </property>
                    <property>
                        <signature>WebGrease.ICacheSection()</signature>
                        <name>Parent</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UniqueKey</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CacheSection/&lt;&gt;c__DisplayClass6</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ICacheSection)</signature>
                        <name>&lt;Begin&gt;b__5</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>uniqueKey</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CacheSourceDependency</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.CacheSourceDependency(WebGrease.IWebGreaseContext, WebGrease.Configuration.InputSpec)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>string(WebGrease.IWebGreaseContext, WebGrease.Configuration.InputSpec)</signature>
                        <name>GetInputSpecHash</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.IWebGreaseContext)</signature>
                        <name>HasChanged</name>
                    </method>
                    <method>
                        <signature>WebGrease.Configuration.InputSpec()</signature>
                        <name>get_InputSpec</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InputSpecHash</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.InputSpec)</signature>
                        <name>set_InputSpec</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InputSpecHash</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Configuration.InputSpec</signature>
                        <name>&lt;InputSpec&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;InputSpecHash&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Configuration.InputSpec()</signature>
                        <name>InputSpec</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InputSpecHash</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CacheSourceDependency/&lt;&gt;c__DisplayClass1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetInputSpecHash&gt;b__0</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CacheVaryByFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.CacheVaryByFile(WebGrease.IWebGreaseContext, WebGrease.ContentItem)</signature>
                        <name>FromFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Hash</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Hash</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Hash&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Hash</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Path</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Common.FileHelper</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>WriteFile</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.ActivityMode</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.Configuration.ActivityMode</signature>
                        <name>All</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.ActivityMode</signature>
                        <name>AutoName</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.ActivityMode</signature>
                        <name>Bundle</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.ActivityMode</signature>
                        <name>ExpandTokens</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.ActivityMode</signature>
                        <name>Minify</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.ActivityMode</signature>
                        <name>ShowHelp</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.ActivityMode</signature>
                        <name>SpriteImages</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.ActivityMode</signature>
                        <name>Validate</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.ArgumentProcessor</name>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.AutoNameConfig</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldAutoName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldAutoName</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldAutoName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldAutoName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.BundlingConfig</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MinimalOutput</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldBundleFiles</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MinimalOutput</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldBundleFiles</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;MinimalOutput&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldBundleFiles&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>MinimalOutput</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldBundleFiles</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.CssFileSet</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssMinificationConfig&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssSpritingConfig&gt;, System.Collections.Generic.IList`1&lt;string&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement, string, System.Collections.Generic.IList`1&lt;string&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssMinificationConfig&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssSpritingConfig&gt;, System.Collections.Generic.IList`1&lt;string&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;, WebGrease.Configuration.GlobalConfig, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.AutoNameConfig&gt;()</signature>
                        <name>get_Autonaming</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;()</signature>
                        <name>get_Bundling</name>
                    </method>
                    <method>
                        <signature>WebGrease.Configuration.GlobalConfig()</signature>
                        <name>get_GlobalConfig</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssSpritingConfig&gt;()</signature>
                        <name>get_ImageSpriting</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.InputSpec&gt;()</signature>
                        <name>get_InputSpecs</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_LoadedConfigurationFiles</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_Locales</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssMinificationConfig&gt;()</signature>
                        <name>get_Minification</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Output</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;()</signature>
                        <name>get_Preprocessing</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_Themes</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.AutoNameConfig&gt;)</signature>
                        <name>set_Autonaming</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;)</signature>
                        <name>set_Bundling</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.GlobalConfig)</signature>
                        <name>set_GlobalConfig</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssSpritingConfig&gt;)</signature>
                        <name>set_ImageSpriting</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;WebGrease.Configuration.InputSpec&gt;)</signature>
                        <name>set_InputSpecs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_LoadedConfigurationFiles</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_Locales</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssMinificationConfig&gt;)</signature>
                        <name>set_Minification</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Output</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;)</signature>
                        <name>set_Preprocessing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_Themes</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.AutoNameConfig&gt;</signature>
                        <name>&lt;Autonaming&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;</signature>
                        <name>&lt;Bundling&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.GlobalConfig</signature>
                        <name>&lt;GlobalConfig&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssSpritingConfig&gt;</signature>
                        <name>&lt;ImageSpriting&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.InputSpec&gt;</signature>
                        <name>&lt;InputSpecs&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;LoadedConfigurationFiles&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;Locales&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssMinificationConfig&gt;</signature>
                        <name>&lt;Minification&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Output&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;</signature>
                        <name>&lt;Preprocessing&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;Themes&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>usingFileSetLocales</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>usingFileSetThemes</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.AutoNameConfig&gt;()</signature>
                        <name>Autonaming</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;()</signature>
                        <name>Bundling</name>
                    </property>
                    <property>
                        <signature>WebGrease.Configuration.GlobalConfig()</signature>
                        <name>GlobalConfig</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssSpritingConfig&gt;()</signature>
                        <name>ImageSpriting</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.InputSpec&gt;()</signature>
                        <name>InputSpecs</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>LoadedConfigurationFiles</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>Locales</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssMinificationConfig&gt;()</signature>
                        <name>Minification</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Output</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;()</signature>
                        <name>Preprocessing</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>Themes</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.CssFileSet/&lt;&gt;c__DisplayClass1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement, string)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Configuration.CssFileSet</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Xml.Linq.XElement&gt;</signature>
                        <name>fileSetElements</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.CssMinificationConfig</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_ForbiddenSelectors</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_RemoveSelectors</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldExcludeProperties</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldMergeMediaQueries</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldMinify</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldOptimize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldValidateLowerCase</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>set_ForbiddenSelectors</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>set_RemoveSelectors</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldExcludeProperties</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldMergeMediaQueries</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldMinify</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldOptimize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldValidateLowerCase</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>&lt;ForbiddenSelectors&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>&lt;RemoveSelectors&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldExcludeProperties&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldMergeMediaQueries&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldMinify&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldOptimize&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldValidateLowerCase&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>ForbiddenSelectors</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>RemoveSelectors</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldExcludeProperties</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldMergeMediaQueries</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldMinify</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldOptimize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldValidateLowerCase</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.CssSpritingConfig</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DestinationImageFolder</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ErrorOnInvalidSprite</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;()</signature>
                        <name>get_ForceImageType</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IgnoreImagesWithNonDefaultBackgroundSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ImagePadding</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_ImagesToIgnore</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OutputUnit</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_OutputUnitFactor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldAutoSprite</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldAutoVersionBackgroundImages</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_WriteLogFile</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DestinationImageFolder</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ErrorOnInvalidSprite</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;)</signature>
                        <name>set_ForceImageType</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IgnoreImagesWithNonDefaultBackgroundSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ImagePadding</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>set_ImagesToIgnore</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OutputUnit</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_OutputUnitFactor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldAutoSprite</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldAutoVersionBackgroundImages</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_WriteLogFile</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DestinationImageFolder&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ErrorOnInvalidSprite&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;</signature>
                        <name>&lt;ForceImageType&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IgnoreImagesWithNonDefaultBackgroundSize&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ImagePadding&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>&lt;ImagesToIgnore&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OutputUnit&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>&lt;OutputUnitFactor&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldAutoSprite&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldAutoVersionBackgroundImages&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;WriteLogFile&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DestinationImageFolder</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ErrorOnInvalidSprite</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;()</signature>
                        <name>ForceImageType</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IgnoreImagesWithNonDefaultBackgroundSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ImagePadding</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>ImagesToIgnore</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OutputUnit</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>OutputUnitFactor</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldAutoSprite</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldAutoVersionBackgroundImages</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>WriteLogFile</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.GlobalConfig</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_TreatWarningsAsErrors</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_TreatWarningsAsErrors</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>&lt;TreatWarningsAsErrors&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>TreatWarningsAsErrors</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.IFileSet</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;()</signature>
                        <name>get_Bundling</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.InputSpec&gt;()</signature>
                        <name>get_InputSpecs</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_LoadedConfigurationFiles</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_Locales</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Output</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;()</signature>
                        <name>get_Preprocessing</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;()</signature>
                        <name>Bundling</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.InputSpec&gt;()</signature>
                        <name>InputSpecs</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>LoadedConfigurationFiles</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>Locales</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Output</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;()</signature>
                        <name>Preprocessing</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.INamedConfig</name>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.InputSpec</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>GetObjectHashCode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsOptional</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                    </method>
                    <method>
                        <signature>System.IO.SearchOption()</signature>
                        <name>get_SearchOption</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SearchPattern</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsOptional</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                    </method>
                    <method>
                        <signature>void(System.IO.SearchOption)</signature>
                        <name>set_SearchOption</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SearchPattern</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsOptional&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.IO.SearchOption</signature>
                        <name>&lt;SearchOption&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SearchPattern&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsOptional</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Path</name>
                    </property>
                    <property>
                        <signature>System.IO.SearchOption()</signature>
                        <name>SearchOption</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SearchPattern</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.JSFileSet</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JsMinificationConfig&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement, string, System.Collections.Generic.IList`1&lt;string&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JsMinificationConfig&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;, WebGrease.Configuration.GlobalConfig, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.AutoNameConfig&gt;()</signature>
                        <name>get_AutoNaming</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;()</signature>
                        <name>get_Bundling</name>
                    </method>
                    <method>
                        <signature>WebGrease.Configuration.GlobalConfig()</signature>
                        <name>get_GlobalConfig</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.InputSpec&gt;()</signature>
                        <name>get_InputSpecs</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_LoadedConfigurationFiles</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_Locales</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JsMinificationConfig&gt;()</signature>
                        <name>get_Minification</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Output</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;()</signature>
                        <name>get_Preprocessing</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JSValidationConfig&gt;()</signature>
                        <name>get_Validation</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.AutoNameConfig&gt;)</signature>
                        <name>set_AutoNaming</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;)</signature>
                        <name>set_Bundling</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.GlobalConfig)</signature>
                        <name>set_GlobalConfig</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;WebGrease.Configuration.InputSpec&gt;)</signature>
                        <name>set_InputSpecs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_LoadedConfigurationFiles</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_Locales</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JsMinificationConfig&gt;)</signature>
                        <name>set_Minification</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Output</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;)</signature>
                        <name>set_Preprocessing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JSValidationConfig&gt;)</signature>
                        <name>set_Validation</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.AutoNameConfig&gt;</signature>
                        <name>&lt;AutoNaming&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;</signature>
                        <name>&lt;Bundling&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.GlobalConfig</signature>
                        <name>&lt;GlobalConfig&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.InputSpec&gt;</signature>
                        <name>&lt;InputSpecs&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;LoadedConfigurationFiles&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;Locales&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JsMinificationConfig&gt;</signature>
                        <name>&lt;Minification&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Output&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;</signature>
                        <name>&lt;Preprocessing&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JSValidationConfig&gt;</signature>
                        <name>&lt;Validation&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>usingFileSetLocales</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.AutoNameConfig&gt;()</signature>
                        <name>AutoNaming</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;()</signature>
                        <name>Bundling</name>
                    </property>
                    <property>
                        <signature>WebGrease.Configuration.GlobalConfig()</signature>
                        <name>GlobalConfig</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.InputSpec&gt;()</signature>
                        <name>InputSpecs</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>LoadedConfigurationFiles</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>Locales</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JsMinificationConfig&gt;()</signature>
                        <name>Minification</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Output</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;()</signature>
                        <name>Preprocessing</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JSValidationConfig&gt;()</signature>
                        <name>Validation</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.JSFileSet/&lt;&gt;c__DisplayClass1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement, string)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Configuration.JSFileSet</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Xml.Linq.XElement&gt;</signature>
                        <name>fileSetElements</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.JSValidationConfig</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AnalyzeArguments</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldAnalyze</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AnalyzeArguments</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldAnalyze</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AnalyzeArguments&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldAnalyze&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AnalyzeArguments</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldAnalyze</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.JsMinificationConfig</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GlobalsToIgnore</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MinificationArugments</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldMinify</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_GlobalsToIgnore</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MinificationArugments</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldMinify</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;GlobalsToIgnore&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MinificationArugments&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldMinify&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>GlobalsToIgnore</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MinificationArugments</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldMinify</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.PreprocessingConfig</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Xml.Linq.XElement()</signature>
                        <name>get_Element</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.Collection`1&lt;string&gt;()</signature>
                        <name>get_PreprocessingEngines</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement)</signature>
                        <name>set_Element</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.Collection`1&lt;string&gt;)</signature>
                        <name>set_PreprocessingEngines</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Xml.Linq.XElement</signature>
                        <name>&lt;Element&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Enabled&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.Collection`1&lt;string&gt;</signature>
                        <name>&lt;PreprocessingEngines&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Xml.Linq.XElement()</signature>
                        <name>Element</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Enabled</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.Collection`1&lt;string&gt;()</signature>
                        <name>PreprocessingEngines</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Configuration.WebGreaseConfiguration</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.FileInfo, string, string, string, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.WebGreaseConfiguration, System.IO.FileInfo)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(System.Text.RegularExpressions.Match)</signature>
                        <name>&lt;EnsureAndExpandDirectory&gt;b__8</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Xml.Linq.XElement)</signature>
                        <name>&lt;ForEachConfigSourceElement&gt;b__4</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;ForEachConfigSourceElement&gt;b__5</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(System.Xml.Linq.XElement)</signature>
                        <name>&lt;ParseSettings&gt;b__a</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement, string)</signature>
                        <name>&lt;ParseSettings&gt;b__c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;ParseSettings&gt;b__d</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;ParseSettings&gt;b__e</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(WebGrease.Configuration.CssFileSet)</signature>
                        <name>&lt;get_AllLoadedConfigurationFiles&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(WebGrease.Configuration.JSFileSet)</signature>
                        <name>&lt;get_AllLoadedConfigurationFiles&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;, string, System.Func`2&lt;string,string&gt;)</signature>
                        <name>AddSeperatedValues</name>
                    </method>
                    <method>
                        <signature>string(string, bool)</signature>
                        <name>EnsureAndExpandDirectory</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement, string, System.Action`2&lt;System.Xml.Linq.XElement,string&gt;)</signature>
                        <name>ForEachConfigSourceElement</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement, string)</signature>
                        <name>Parse</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Parse</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;System.Xml.Linq.XElement&gt;, string)</signature>
                        <name>ParseSettings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement, string)</signature>
                        <name>ParseSettings</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Validate</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_AllLoadedConfigurationFiles</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ApplicationRootDirectory</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CacheEnabled</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CacheRootPath</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_CacheTimeout</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CacheUniqueKey</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConfigType</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.CssFileSet&gt;()</signature>
                        <name>get_CssFileSets</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;()</signature>
                        <name>get_DefaultBundling</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssMinificationConfig&gt;()</signature>
                        <name>get_DefaultCssMinification</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JsMinificationConfig&gt;()</signature>
                        <name>get_DefaultJSMinification</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_DefaultLocales</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;()</signature>
                        <name>get_DefaultPreprocessing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssSpritingConfig&gt;()</signature>
                        <name>get_DefaultSpriting</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_DefaultThemes</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DestinationDirectory</name>
                    </method>
                    <method>
                        <signature>WebGrease.Configuration.GlobalConfig()</signature>
                        <name>get_Global</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_ImageDirectories</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_ImageDirectoriesToHash</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_ImageExtensions</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IntermediateErrorDirectory</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.JSFileSet&gt;()</signature>
                        <name>get_JSFileSets</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_LoadedConfigurationFiles</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LogsDirectory</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Measure</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OverrideTokensDirectory</name>
                    </method>
                    <method>
                        <signature>WebGrease.TemporaryOverrides()</signature>
                        <name>get_Overrides</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PreprocessingPluginPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ReportPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceDirectory</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TokensDirectory</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ToolsTempDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ApplicationRootDirectory</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CacheEnabled</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CacheRootPath</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_CacheTimeout</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CacheUniqueKey</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ConfigType</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;WebGrease.Configuration.CssFileSet&gt;)</signature>
                        <name>set_CssFileSets</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;)</signature>
                        <name>set_DefaultBundling</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssMinificationConfig&gt;)</signature>
                        <name>set_DefaultCssMinification</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JsMinificationConfig&gt;)</signature>
                        <name>set_DefaultJSMinification</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_DefaultLocales</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;)</signature>
                        <name>set_DefaultPreprocessing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssSpritingConfig&gt;)</signature>
                        <name>set_DefaultSpriting</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_DefaultThemes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DestinationDirectory</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.GlobalConfig)</signature>
                        <name>set_Global</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_ImageDirectories</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_ImageDirectoriesToHash</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_ImageExtensions</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_IntermediateErrorDirectory</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;WebGrease.Configuration.JSFileSet&gt;)</signature>
                        <name>set_JSFileSets</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;)</signature>
                        <name>set_LoadedConfigurationFiles</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LogsDirectory</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Measure</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OverrideTokensDirectory</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.TemporaryOverrides)</signature>
                        <name>set_Overrides</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PreprocessingPluginPath</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ReportPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourceDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TokensDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ToolsTempDirectory</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ApplicationRootDirectory&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;CacheEnabled&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CacheRootPath&gt;k__BackingField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>&lt;CacheTimeout&gt;k__BackingField</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CacheUniqueKey&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ConfigType&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.CssFileSet&gt;</signature>
                        <name>&lt;CssFileSets&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;</signature>
                        <name>&lt;DefaultBundling&gt;k__BackingField</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssMinificationConfig&gt;</signature>
                        <name>&lt;DefaultCssMinification&gt;k__BackingField</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JsMinificationConfig&gt;</signature>
                        <name>&lt;DefaultJSMinification&gt;k__BackingField</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;DefaultLocales&gt;k__BackingField</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;</signature>
                        <name>&lt;DefaultPreprocessing&gt;k__BackingField</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssSpritingConfig&gt;</signature>
                        <name>&lt;DefaultSpriting&gt;k__BackingField</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;DefaultThemes&gt;k__BackingField</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DestinationDirectory&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.GlobalConfig</signature>
                        <name>&lt;Global&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;ImageDirectories&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;ImageDirectoriesToHash&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;ImageExtensions&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;IntermediateErrorDirectory&gt;k__BackingField</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.JSFileSet&gt;</signature>
                        <name>&lt;JSFileSets&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>&lt;LoadedConfigurationFiles&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LogsDirectory&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Measure&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OverrideTokensDirectory&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>WebGrease.TemporaryOverrides</signature>
                        <name>&lt;Overrides&gt;k__BackingField</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PreprocessingPluginPath&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ReportPath&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SourceDirectory&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TokensDirectory&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ToolsTempDirectory&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Configuration.CssFileSet,System.Collections.Generic.IEnumerable`1&lt;string&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Configuration.JSFileSet,System.Collections.Generic.IEnumerable`1&lt;string&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Xml.Linq.XElement,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate6</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate7</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.MatchEvaluator</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate9</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Xml.Linq.XElement,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>EnvironmentVariablesMatchPattern</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>MinimumCacheTimeout</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,WebGrease.Configuration.GlobalConfig&gt;</signature>
                        <name>global</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>AllLoadedConfigurationFiles</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ApplicationRootDirectory</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CacheEnabled</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CacheRootPath</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>CacheTimeout</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CacheUniqueKey</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ConfigType</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.CssFileSet&gt;()</signature>
                        <name>CssFileSets</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.BundlingConfig&gt;()</signature>
                        <name>DefaultBundling</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssMinificationConfig&gt;()</signature>
                        <name>DefaultCssMinification</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.JsMinificationConfig&gt;()</signature>
                        <name>DefaultJSMinification</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>DefaultLocales</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.PreprocessingConfig&gt;()</signature>
                        <name>DefaultPreprocessing</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Configuration.CssSpritingConfig&gt;()</signature>
                        <name>DefaultSpriting</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>DefaultThemes</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DestinationDirectory</name>
                    </property>
                    <property>
                        <signature>WebGrease.Configuration.GlobalConfig()</signature>
                        <name>Global</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>ImageDirectories</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>ImageDirectoriesToHash</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>ImageExtensions</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>IntermediateErrorDirectory</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Configuration.JSFileSet&gt;()</signature>
                        <name>JSFileSets</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>LoadedConfigurationFiles</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LogsDirectory</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Measure</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OverrideTokensDirectory</name>
                    </property>
                    <property>
                        <signature>WebGrease.TemporaryOverrides()</signature>
                        <name>Overrides</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PreprocessingPluginPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ReportPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SourceDirectory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TokensDirectory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ToolsTempDirectory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ContentItem</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ContentFromDisk</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(WebGrease.CacheResult, WebGrease.ContentPivot[])</signature>
                        <name>FromCacheResult</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(WebGrease.CacheResult, string, string, WebGrease.ContentPivot[])</signature>
                        <name>FromCacheResult</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(string, WebGrease.ContentItem, WebGrease.ContentPivot[])</signature>
                        <name>FromContent</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(string, WebGrease.ContentPivot[])</signature>
                        <name>FromContent</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(string, string, string, WebGrease.ContentPivot[])</signature>
                        <name>FromContent</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(WebGrease.ContentItem, string, string)</signature>
                        <name>FromContentItem</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(string, string, string, WebGrease.ContentPivot[])</signature>
                        <name>FromFile</name>
                    </method>
                    <method>
                        <signature>string(WebGrease.IWebGreaseContext)</signature>
                        <name>GetContentHash</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>WriteTo</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>WriteToContentPath</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>WriteToRelativeHashedPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AbsoluteContentPath</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AbsoluteDiskPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Content</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItemType()</signature>
                        <name>get_ContentItemType</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ContentValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFromDisk</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentPivot&gt;()</signature>
                        <name>get_Pivots</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RelativeContentPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RelativeHashedContentPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AbsoluteContentPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItemType)</signature>
                        <name>set_ContentItemType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ContentValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentPivot&gt;)</signature>
                        <name>set_Pivots</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RelativeContentPath</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RelativeHashedContentPath</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AbsoluteContentPath&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItemType</signature>
                        <name>&lt;ContentItemType&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ContentValue&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentPivot&gt;</signature>
                        <name>&lt;Pivots&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RelativeContentPath&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RelativeHashedContentPath&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>content</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>contentHash</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AbsoluteContentPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AbsoluteDiskPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Content</name>
                    </property>
                    <property>
                        <signature>WebGrease.ContentItemType()</signature>
                        <name>ContentItemType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ContentValue</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFromDisk</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentPivot&gt;()</signature>
                        <name>Pivots</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RelativeContentPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RelativeHashedContentPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ContentItemType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.ContentItemType</signature>
                        <name>Path</name>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItemType</signature>
                        <name>Value</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ContentPivot</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;ToString&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Locale</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Theme</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Locale</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Theme</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Locale&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Theme&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Locale</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Theme</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.AllowedImportData</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.AllowedImportData</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.AllowedImportData</signature>
                        <name>String</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.AllowedImportData</signature>
                        <name>Uri</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Animation.KeyFramesBlockNode</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;()</signature>
                        <name>get_DeclarationNodes</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>get_KeyFramesSelectors</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;)</signature>
                        <name>set_DeclarationNodes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;)</signature>
                        <name>set_KeyFramesSelectors</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;</signature>
                        <name>&lt;DeclarationNodes&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;</signature>
                        <name>&lt;KeyFramesSelectors&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;()</signature>
                        <name>DeclarationNodes</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>KeyFramesSelectors</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Animation.KeyFramesNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Animation.KeyFramesBlockNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IdentValue</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Animation.KeyFramesBlockNode&gt;()</signature>
                        <name>get_KeyFramesBlockNodes</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyFramesSymbol</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StringValue</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_IdentValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Animation.KeyFramesBlockNode&gt;)</signature>
                        <name>set_KeyFramesBlockNodes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_KeyFramesSymbol</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StringValue</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;IdentValue&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Animation.KeyFramesBlockNode&gt;</signature>
                        <name>&lt;KeyFramesBlockNodes&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;KeyFramesSymbol&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;StringValue&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>IdentValue</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Animation.KeyFramesBlockNode&gt;()</signature>
                        <name>KeyFramesBlockNodes</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeyFramesSymbol</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StringValue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.AstException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.AstNode</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Combinator</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.Combinator</signature>
                        <name>GreaterThanSign</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Combinator</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Combinator</signature>
                        <name>PlusSign</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Combinator</signature>
                        <name>SingleSpace</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Combinator</signature>
                        <name>Tilde</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Combinator</signature>
                        <name>ZeroSpace</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Combinator, WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Combinator()</signature>
                        <name>get_Combinator</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode()</signature>
                        <name>get_SimpleSelectorSequenceNode</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Combinator)</signature>
                        <name>set_Combinator</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode)</signature>
                        <name>set_SimpleSelectorSequenceNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.Combinator</signature>
                        <name>&lt;Combinator&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode</signature>
                        <name>&lt;SimpleSelectorSequenceNode&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.Combinator()</signature>
                        <name>Combinator</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode()</signature>
                        <name>SimpleSelectorSequenceNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.DeclarationNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, WebGrease.Css.Ast.ExprNode, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.ExprNode()</signature>
                        <name>get_ExprNode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Prio</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Property</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.ExprNode)</signature>
                        <name>set_ExprNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Prio</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Property</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.ExprNode</signature>
                        <name>&lt;ExprNode&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Prio&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Property&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.ExprNode()</signature>
                        <name>ExprNode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Prio</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Property</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.DocumentQueryNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, string, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.RulesetNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DocumentSymbol</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MatchFunctionName</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.RulesetNode&gt;()</signature>
                        <name>get_Rulesets</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DocumentSymbol</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MatchFunctionName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.RulesetNode&gt;)</signature>
                        <name>set_Rulesets</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DocumentSymbol&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MatchFunctionName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.RulesetNode&gt;</signature>
                        <name>&lt;Rulesets&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DocumentSymbol</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MatchFunctionName</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.RulesetNode&gt;()</signature>
                        <name>Rulesets</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.ExprNode</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermNode, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.TermNode()</signature>
                        <name>get_TermNode</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;()</signature>
                        <name>get_TermsWithOperators</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermNode)</signature>
                        <name>set_TermNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;)</signature>
                        <name>set_TermsWithOperators</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.TermNode</signature>
                        <name>&lt;TermNode&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;</signature>
                        <name>&lt;TermsWithOperators&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.TermNode()</signature>
                        <name>TermNode</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;()</signature>
                        <name>TermsWithOperators</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.FunctionNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, WebGrease.Css.Ast.ExprNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.ExprNode()</signature>
                        <name>get_ExprNode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FunctionName</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.ExprNode)</signature>
                        <name>set_ExprNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FunctionName</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.ExprNode</signature>
                        <name>&lt;ExprNode&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FunctionName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.ExprNode()</signature>
                        <name>ExprNode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FunctionName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.ImportNode</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.AllowedImportData, string, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaQueryNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AllowedImportData()</signature>
                        <name>get_AllowedImportDataType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImportDataValue</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaQueryNode&gt;()</signature>
                        <name>get_MediaQueries</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.AllowedImportData)</signature>
                        <name>set_AllowedImportDataType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ImportDataValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaQueryNode&gt;)</signature>
                        <name>set_MediaQueries</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.AllowedImportData</signature>
                        <name>&lt;AllowedImportDataType&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ImportDataValue&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaQueryNode&gt;</signature>
                        <name>&lt;MediaQueries&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.AllowedImportData()</signature>
                        <name>AllowedImportDataType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImportDataValue</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaQueryNode&gt;()</signature>
                        <name>MediaQueries</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.MediaQuery.MediaExpressionNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, WebGrease.Css.Ast.ExprNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.ExprNode()</signature>
                        <name>get_ExprNode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MediaFeature</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.ExprNode)</signature>
                        <name>set_ExprNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MediaFeature</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.ExprNode</signature>
                        <name>&lt;ExprNode&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MediaFeature&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.ExprNode()</signature>
                        <name>ExprNode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MediaFeature</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.MediaQuery.MediaNode</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaQueryNode&gt;, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.RulesetNode&gt;, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.PageNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaQueryNode&gt;()</signature>
                        <name>get_MediaQueries</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.PageNode&gt;()</signature>
                        <name>get_PageNodes</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.RulesetNode&gt;()</signature>
                        <name>get_Rulesets</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaQueryNode&gt;)</signature>
                        <name>set_MediaQueries</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.PageNode&gt;)</signature>
                        <name>set_PageNodes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.RulesetNode&gt;)</signature>
                        <name>set_Rulesets</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaQueryNode&gt;</signature>
                        <name>&lt;MediaQueries&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.PageNode&gt;</signature>
                        <name>&lt;PageNodes&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.RulesetNode&gt;</signature>
                        <name>&lt;Rulesets&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaQueryNode&gt;()</signature>
                        <name>MediaQueries</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.PageNode&gt;()</signature>
                        <name>PageNodes</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.RulesetNode&gt;()</signature>
                        <name>Rulesets</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.MediaQuery.MediaQueryNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaExpressionNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaExpressionNode&gt;()</signature>
                        <name>get_MediaExpressions</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MediaType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NotText</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OnlyText</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaExpressionNode&gt;)</signature>
                        <name>set_MediaExpressions</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MediaType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NotText</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OnlyText</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaExpressionNode&gt;</signature>
                        <name>&lt;MediaExpressions&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MediaType&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;NotText&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OnlyText&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.MediaQuery.MediaExpressionNode&gt;()</signature>
                        <name>MediaExpressions</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MediaType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NotText</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OnlyText</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.NamespaceNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Prefix</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Prefix</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Prefix&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Prefix</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.PageNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;()</signature>
                        <name>get_Declarations</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PseudoPage</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;)</signature>
                        <name>set_Declarations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PseudoPage</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;</signature>
                        <name>&lt;Declarations&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PseudoPage&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;()</signature>
                        <name>Declarations</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PseudoPage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.RulesetNode</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SelectorsGroupNode, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;()</signature>
                        <name>get_Declarations</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorsGroupNode()</signature>
                        <name>get_SelectorsGroupNode</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;)</signature>
                        <name>set_Declarations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SelectorsGroupNode)</signature>
                        <name>set_SelectorsGroupNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;</signature>
                        <name>&lt;Declarations&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorsGroupNode</signature>
                        <name>&lt;SelectorsGroupNode&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;()</signature>
                        <name>Declarations</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorsGroupNode()</signature>
                        <name>SelectorsGroupNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.AttribNode</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode, string, WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Ident</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode()</signature>
                        <name>get_OperatorAndValueNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode()</signature>
                        <name>get_SelectorNamespacePrefixNode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Ident</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode)</signature>
                        <name>set_OperatorAndValueNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode)</signature>
                        <name>set_SelectorNamespacePrefixNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Ident&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode</signature>
                        <name>&lt;OperatorAndValueNode&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode</signature>
                        <name>&lt;SelectorNamespacePrefixNode&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Ident</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode()</signature>
                        <name>OperatorAndValueNode</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode()</signature>
                        <name>SelectorNamespacePrefixNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.AttribOperatorKind, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorKind()</signature>
                        <name>get_AttribOperatorKind</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IdentOrString</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.AttribOperatorKind)</signature>
                        <name>set_AttribOperatorKind</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_IdentOrString</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorKind</signature>
                        <name>&lt;AttribOperatorKind&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;IdentOrString&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorKind()</signature>
                        <name>AttribOperatorKind</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>IdentOrString</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.AttribOperatorKind</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorKind</signature>
                        <name>DashMatch</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorKind</signature>
                        <name>Equal</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorKind</signature>
                        <name>Includes</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorKind</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorKind</signature>
                        <name>Prefix</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorKind</signature>
                        <name>Substring</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorKind</signature>
                        <name>Suffix</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.FunctionalPseudoNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, WebGrease.Css.Ast.Selectors.SelectorExpressionNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FunctionName</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorExpressionNode()</signature>
                        <name>get_SelectorExpressionNode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FunctionName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SelectorExpressionNode)</signature>
                        <name>set_SelectorExpressionNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FunctionName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorExpressionNode</signature>
                        <name>&lt;SelectorExpressionNode&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>FunctionName</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorExpressionNode()</signature>
                        <name>SelectorExpressionNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, WebGrease.Css.Ast.Selectors.AttribNode, WebGrease.Css.Ast.Selectors.PseudoNode, WebGrease.Css.Ast.Selectors.NegationNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AtName</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.AttribNode()</signature>
                        <name>get_AttribNode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CssClass</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Hash</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.NegationNode()</signature>
                        <name>get_NegationNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.PseudoNode()</signature>
                        <name>get_PseudoNode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AtName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.AttribNode)</signature>
                        <name>set_AttribNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CssClass</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Hash</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.NegationNode)</signature>
                        <name>set_NegationNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.PseudoNode)</signature>
                        <name>set_PseudoNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AtName&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.AttribNode</signature>
                        <name>&lt;AttribNode&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CssClass&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Hash&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.NegationNode</signature>
                        <name>&lt;NegationNode&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.PseudoNode</signature>
                        <name>&lt;PseudoNode&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExceptionMessage</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AtName</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.AttribNode()</signature>
                        <name>AttribNode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CssClass</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Hash</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.NegationNode()</signature>
                        <name>NegationNode</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.PseudoNode()</signature>
                        <name>PseudoNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.NegationArgNode</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.TypeSelectorNode, WebGrease.Css.Ast.Selectors.UniversalSelectorNode, string, string, WebGrease.Css.Ast.Selectors.AttribNode, WebGrease.Css.Ast.Selectors.PseudoNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.AttribNode()</signature>
                        <name>get_AttribNode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CssClass</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Hash</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.PseudoNode()</signature>
                        <name>get_PseudoNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.TypeSelectorNode()</signature>
                        <name>get_TypeSelectorNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.UniversalSelectorNode()</signature>
                        <name>get_UniversalSelectorNode</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.AttribNode)</signature>
                        <name>set_AttribNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CssClass</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Hash</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.PseudoNode)</signature>
                        <name>set_PseudoNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.TypeSelectorNode)</signature>
                        <name>set_TypeSelectorNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.UniversalSelectorNode)</signature>
                        <name>set_UniversalSelectorNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.AttribNode</signature>
                        <name>&lt;AttribNode&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CssClass&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Hash&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.PseudoNode</signature>
                        <name>&lt;PseudoNode&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.TypeSelectorNode</signature>
                        <name>&lt;TypeSelectorNode&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.UniversalSelectorNode</signature>
                        <name>&lt;UniversalSelectorNode&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExceptionMessage</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.AttribNode()</signature>
                        <name>AttribNode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CssClass</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Hash</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.PseudoNode()</signature>
                        <name>PseudoNode</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.TypeSelectorNode()</signature>
                        <name>TypeSelectorNode</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.UniversalSelectorNode()</signature>
                        <name>UniversalSelectorNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.NegationNode</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.NegationArgNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.NegationArgNode()</signature>
                        <name>get_NegationArgNode</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.NegationArgNode)</signature>
                        <name>set_NegationArgNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.NegationArgNode</signature>
                        <name>&lt;NegationArgNode&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.NegationArgNode()</signature>
                        <name>NegationArgNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.PseudoNode</name>
                <methodlist>
                    <method>
                        <signature>void(int32, string, WebGrease.Css.Ast.Selectors.FunctionalPseudoNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.FunctionalPseudoNode()</signature>
                        <name>get_FunctionalPseudoNode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Ident</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NumberOfColons</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.FunctionalPseudoNode)</signature>
                        <name>set_FunctionalPseudoNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Ident</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NumberOfColons</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.FunctionalPseudoNode</signature>
                        <name>&lt;FunctionalPseudoNode&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Ident&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;NumberOfColons&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.FunctionalPseudoNode()</signature>
                        <name>FunctionalPseudoNode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Ident</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NumberOfColons</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.SelectorExpressionNode</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>get_SelectorExpressions</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;)</signature>
                        <name>set_SelectorExpressions</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;</signature>
                        <name>&lt;SelectorExpressions&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>SelectorExpressions</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Prefix</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Prefix</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Prefix&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Prefix</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.SelectorNode</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode&gt;()</signature>
                        <name>get_CombinatorSimpleSelectorSequenceNodes</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode()</signature>
                        <name>get_SimpleSelectorSequenceNode</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode&gt;)</signature>
                        <name>set_CombinatorSimpleSelectorSequenceNodes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode)</signature>
                        <name>set_SimpleSelectorSequenceNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode&gt;</signature>
                        <name>&lt;CombinatorSimpleSelectorSequenceNodes&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode</signature>
                        <name>&lt;SimpleSelectorSequenceNode&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode&gt;()</signature>
                        <name>CombinatorSimpleSelectorSequenceNodes</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode()</signature>
                        <name>SimpleSelectorSequenceNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.SelectorsGroupNode</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Selectors.SelectorNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Selectors.SelectorNode&gt;()</signature>
                        <name>get_SelectorNodes</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Selectors.SelectorNode&gt;)</signature>
                        <name>set_SelectorNodes</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Selectors.SelectorNode&gt;</signature>
                        <name>&lt;SelectorNodes&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Selectors.SelectorNode&gt;()</signature>
                        <name>SelectorNodes</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.TypeSelectorNode, WebGrease.Css.Ast.Selectors.UniversalSelectorNode, string, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode&gt;()</signature>
                        <name>get_HashClassAttribPseudoNegationNodes</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Separator</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.TypeSelectorNode()</signature>
                        <name>get_TypeSelectorNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.UniversalSelectorNode()</signature>
                        <name>get_UniversalSelectorNode</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode&gt;)</signature>
                        <name>set_HashClassAttribPseudoNegationNodes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Separator</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.TypeSelectorNode)</signature>
                        <name>set_TypeSelectorNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.UniversalSelectorNode)</signature>
                        <name>set_UniversalSelectorNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode&gt;</signature>
                        <name>&lt;HashClassAttribPseudoNegationNodes&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Separator&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.TypeSelectorNode</signature>
                        <name>&lt;TypeSelectorNode&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.UniversalSelectorNode</signature>
                        <name>&lt;UniversalSelectorNode&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode&gt;()</signature>
                        <name>HashClassAttribPseudoNegationNodes</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Separator</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.TypeSelectorNode()</signature>
                        <name>TypeSelectorNode</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.UniversalSelectorNode()</signature>
                        <name>UniversalSelectorNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.TypeSelectorNode</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ElementName</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode()</signature>
                        <name>get_SelectorNamespacePrefixNode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ElementName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode)</signature>
                        <name>set_SelectorNamespacePrefixNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ElementName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode</signature>
                        <name>&lt;SelectorNamespacePrefixNode&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ElementName</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode()</signature>
                        <name>SelectorNamespacePrefixNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.Selectors.UniversalSelectorNode</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode()</signature>
                        <name>get_SelectorNamespacePrefixNode</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode)</signature>
                        <name>set_SelectorNamespacePrefixNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode</signature>
                        <name>&lt;SelectorNamespacePrefixNode&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode()</signature>
                        <name>SelectorNamespacePrefixNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.StyleSheetNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, System.Nullable`1&lt;float64&gt;, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.ImportNode&gt;, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.NamespaceNode&gt;, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.StyleSheetRuleNode&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CharSetString</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Dpi</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.ImportNode&gt;()</signature>
                        <name>get_Imports</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.NamespaceNode&gt;()</signature>
                        <name>get_Namespaces</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.StyleSheetRuleNode&gt;()</signature>
                        <name>get_StyleSheetRules</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CharSetString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Dpi</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.ImportNode&gt;)</signature>
                        <name>set_Imports</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.NamespaceNode&gt;)</signature>
                        <name>set_Namespaces</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.StyleSheetRuleNode&gt;)</signature>
                        <name>set_StyleSheetRules</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CharSetString&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;float64&gt;</signature>
                        <name>&lt;Dpi&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.ImportNode&gt;</signature>
                        <name>&lt;Imports&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.NamespaceNode&gt;</signature>
                        <name>&lt;Namespaces&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.StyleSheetRuleNode&gt;</signature>
                        <name>&lt;StyleSheetRules&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CharSetString</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>Dpi</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.ImportNode&gt;()</signature>
                        <name>Imports</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.NamespaceNode&gt;()</signature>
                        <name>Namespaces</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.StyleSheetRuleNode&gt;()</signature>
                        <name>StyleSheetRules</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.StyleSheetRuleNode</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.TermNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, WebGrease.Css.Ast.FunctionNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.FunctionNode()</signature>
                        <name>get_FunctionNode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Hexcolor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NumberBasedValue</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StringBasedValue</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnaryOperator</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.FunctionNode)</signature>
                        <name>set_FunctionNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Hexcolor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NumberBasedValue</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StringBasedValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UnaryOperator</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.FunctionNode</signature>
                        <name>&lt;FunctionNode&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Hexcolor&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;NumberBasedValue&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;StringBasedValue&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UnaryOperator&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.FunctionNode()</signature>
                        <name>FunctionNode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Hexcolor</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NumberBasedValue</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StringBasedValue</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnaryOperator</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Ast.TermWithOperatorNode</name>
                <methodlist>
                    <method>
                        <signature>void(string, WebGrease.Css.Ast.TermNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Visitor.NodeVisitor)</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Operator</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.TermNode()</signature>
                        <name>get_TermNode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Operator</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermNode)</signature>
                        <name>set_TermNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Operator&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.TermNode</signature>
                        <name>&lt;TermNode&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Operator</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.TermNode()</signature>
                        <name>TermNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CommonTreeTransformer</name>
                <methodlist>
                    <method>
                        <signature>WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;CreateCombinatorSimpleSelectorSequenceNode&gt;b__12</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;CreateDeclarationNodes&gt;b__a</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;CreateDeclarationNodes&gt;b__b</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;CreateDocumentQueryNode&gt;b__6</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;CreateHashClassAttribPseudoNegationNodes&gt;b__14</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.ImportNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;CreateImportNodes&gt;b__0</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;CreateKeyFramesBlockNode&gt;b__8</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.NamespaceNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;CreateNamespaceNodes&gt;b__2</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;CreatePageNode&gt;b__4</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;CreateSelectorExpressionNode&gt;b__16</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;CreateSelectorsGroupNode&gt;b__10</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.TermWithOperatorNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;CreateTermWithOperatorsNode&gt;b__e</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.AttribNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateAttribNode</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateAttribOperatorValueNode</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateCharsetNode</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Combinator(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateCombinatorNode</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode&gt;(System.Collections.Generic.IEnumerable`1&lt;Antlr.Runtime.Tree.CommonTree&gt;)</signature>
                        <name>CreateCombinatorSimpleSelectorSequenceNode</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;(System.Collections.Generic.IEnumerable`1&lt;Antlr.Runtime.Tree.CommonTree&gt;)</signature>
                        <name>CreateDeclarationNodes</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DocumentQueryNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateDocumentQueryNode</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateDpiNode</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.ExprNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateExpressionNode</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.FunctionNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateFunctionNode</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.FunctionalPseudoNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateFunctionalPseudoNode</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode&gt;(System.Collections.Generic.IEnumerable`1&lt;Antlr.Runtime.Tree.CommonTree&gt;)</signature>
                        <name>CreateHashClassAttribPseudoNegationNodes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.ImportNode&gt;(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateImportNodes</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Animation.KeyFramesBlockNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateKeyFramesBlockNode</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Animation.KeyFramesNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateKeyFramesNode</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.MediaQuery.MediaExpressionNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateMediaExpressionNode</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.MediaQuery.MediaNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateMediaNode</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.MediaQuery.MediaQueryNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateMediaQueryNode</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.NamespaceNode&gt;(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateNamespaceNodes</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateNamespacePrefixNode</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.NegationArgNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateNegationArgNode</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.NegationNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateNegationNode</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.PageNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreatePageNode</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.PseudoNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreatePseudoNode</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.RulesetNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateRulesetNode</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorExpressionNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateSelectorExpressionNode</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorsGroupNode(System.Collections.Generic.IEnumerable`1&lt;Antlr.Runtime.Tree.CommonTree&gt;)</signature>
                        <name>CreateSelectorsGroupNode</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateSimpleSelectorSequenceNode</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.StyleSheetNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateStyleSheetNode</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.StyleSheetRuleNode&gt;(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateStyleSheetRulesNodes</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.TermNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateTermNode</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;(System.Collections.Generic.IEnumerable`1&lt;Antlr.Runtime.Tree.CommonTree&gt;)</signature>
                        <name>CreateTermWithOperatorsNode</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.TypeSelectorNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateTypeSelectorNode</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.UniversalSelectorNode(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>CreateUniversalSelectorNode</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>int32(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>GetWhitespaceCount</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>StringOrUriBasedValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>T</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,WebGrease.Css.Ast.ImportNode&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,WebGrease.Css.Ast.Selectors.SelectorNode&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate11</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate13</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate15</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate17</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,WebGrease.Css.Ast.NamespaceNode&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate7</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate9</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,WebGrease.Css.Ast.DeclarationNode&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatec</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegated</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,WebGrease.Css.Ast.TermWithOperatorNode&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatef</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssConstants</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>And</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Charset</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>CloseCurlyBracket</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>CloseRoundBracket</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>CloseSquareBracket</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>Colon</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>Comma</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DashMatch</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>Dot</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DoubleDot</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Equal</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EscapedCarriageReturnNewLine</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EscapedFormFeed</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EscapedNewLine</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Greater</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>Hash</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Import</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Important</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Includes</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Media</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Namespace</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Not</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>OpenCurlyBracket</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>OpenRoundBracket</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>OpenSquareBracket</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Page</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Pipe</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Plus</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PrefixMatch</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Rgb</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>Semicolon</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>SingleSpace</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Star</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SubstringMatch</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SuffixMatch</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Tilde</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Url</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Whitespace</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssLexer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.ICharStream)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.ICharStream, Antlr.Runtime.RecognizerSharedState)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitDFAs</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>RemoveComments</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>RemoveUrlEdgeWhitespaces</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Antlr.Runtime.DFA, int32, Antlr.Runtime.IIntStream)</signature>
                        <name>SpecialStateTransition129</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Antlr.Runtime.DFA, int32, Antlr.Runtime.IIntStream)</signature>
                        <name>SpecialStateTransition25</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GrammarFileName</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mA</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mAND</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mANGLE</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mAT_NAME</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mB</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mBACKWARD_SLASH</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mC</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mCHARSET_SYM</name>
                        <newname>ce</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mCIRCLE_BEGIN</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mCIRCLE_END</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mCLASS_IDENT</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mCOLON</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mCOMMA</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mCOMMENTS</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mCURLY_BEGIN</name>
                        <newname>b0</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mCURLY_END</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mD</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mDASHMATCH</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mDIGITS</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mDIMENSION</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mDOCUMENT_SYM</name>
                        <newname>b9</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mDOMAIN_FUNCTION</name>
                        <newname>b7</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mE</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mEQUALS</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mESCAPE</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mF</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mFORWARD_SLASH</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mFREQ</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mFROM</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mG</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mGREATER</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mH</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mHASH</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mHASH_IDENT</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mHEXDIGIT</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mI</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mIDENT</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mIMPORTANT_SYM</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mIMPORT_SYM</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mINCLUDES</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mK</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mKEYFRAMES_SYM</name>
                        <newname>ca</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mL</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mLENGTH</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mLETTER</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mM</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mMEDIA_SYM</name>
                        <newname>cd</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mMINUS</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mMSIE_EXPRESSION</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mMSIE_IMAGE_TRANSFORM</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mN</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mNAME</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mNAMESPACE_SYM</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mNL</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mNMCHAR</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mNMSTART</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mNONASCII</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mNOT</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mNUMBER</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mO</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mONLY</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mP</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mPAGE_SYM</name>
                        <newname>cb</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mPERCENTAGE</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mPIPE</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mPLUS</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mPREFIXMATCH</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mR</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mREGEXP_FUNCTION</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mRELATIVELENGTH</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mRESOLUTION</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mS</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mSEMICOLON</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mSPACE_AFTER_UNICODE</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mSPEECH</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mSQUARE_BEGIN</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mSQUARE_END</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mSTAR</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mSTRING</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mSUBSTRINGMATCH</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mSUFFIXMATCH</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mT</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mTILDE</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mTIME</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mTO</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mTokens</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mU</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mUNICODE</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mUNICODE_ESCAPE_HACK</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mUNICODE_NULLTERM</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mUNICODE_RANGE</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mUNICODE_TAB</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mUNICODE_ZEROS</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mURI</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mURL</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mURLPREFIX_FUNCTION</name>
                        <newname>b8</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mV</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mW</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mWG_DPI_SYM</name>
                        <newname>cc</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mWS</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mWS_FRAGMENT</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mX</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mY</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>mZ</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>A</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>AND</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ANGLE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>AT_NAME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>B</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BACKWARD_SLASH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>C</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CHARSET_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CIRCLE_BEGIN</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CIRCLE_END</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CLASS_IDENT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>COLON</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>COMMA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>COMMENTS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CURLY_BEGIN</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CURLY_END</name>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>CommentsRegex</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>D</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DASHMATCH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGITS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIMENSION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DOCUMENT_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DOMAIN_FUNCTION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>E</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>EOF</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>EQUALS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ESCAPE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>F</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FORWARD_SLASH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FREQ</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FROM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>G</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GREATER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>H</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HASH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HASH_IDENT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HEXDIGIT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>I</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IDENT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IMPORTANT_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IMPORT_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>INCLUDES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>K</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>KEYFRAMES_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>L</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>LENGTH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>LETTER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>M</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEDIA_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MINUS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MSIE_EXPRESSION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MSIE_IMAGE_TRANSFORM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>N</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NAME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NAMESPACE_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NMCHAR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NMSTART</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NONASCII</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NOT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NUMBER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>O</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ONLY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>P</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PAGE_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PERCENTAGE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PIPE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PLUS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PREFIXMATCH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>R</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>REGEXP_FUNCTION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RELATIVELENGTH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RESOLUTION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>S</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SEMICOLON</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SPACE_AFTER_UNICODE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SPEECH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SQUARE_BEGIN</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SQUARE_END</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>STAR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>STRING</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SUBSTRINGMATCH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SUFFIXMATCH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>T</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TILDE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TIME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TO</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>U</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNICODE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNICODE_ESCAPE_HACK</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNICODE_NULLTERM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNICODE_RANGE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNICODE_TAB</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNICODE_ZEROS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>URI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>URL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>URLPREFIX_FUNCTION</name>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>UrlWhitespaceRegex</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>V</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>W</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WG_DPI_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WS_FRAGMENT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>X</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Y</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Z</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.CssLexer/DFA10</signature>
                        <name>dfa10</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.CssLexer/DFA12</signature>
                        <name>dfa12</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.CssLexer/DFA129</signature>
                        <name>dfa129</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.CssLexer/DFA14</signature>
                        <name>dfa14</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.CssLexer/DFA18</signature>
                        <name>dfa18</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.CssLexer/DFA25</signature>
                        <name>dfa25</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.CssLexer/DFA31</signature>
                        <name>dfa31</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.CssLexer/DFA46</signature>
                        <name>dfa46</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.CssLexer/DFA8</signature>
                        <name>dfa8</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>GrammarFileName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssLexer/DFA10</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.BaseRecognizer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.NoViableAltException)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA10_accept</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA10_acceptS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA10_eof</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA10_eofS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA10_eot</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA10_eotS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA10_max</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA10_maxS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA10_min</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA10_minS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA10_special</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA10_specialS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16[][]</signature>
                        <name>DFA10_transition</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DFA10_transitionS</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssLexer/DFA12</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.BaseRecognizer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.NoViableAltException)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA12_accept</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA12_acceptS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA12_eof</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA12_eofS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA12_eot</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA12_eotS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA12_max</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA12_maxS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA12_min</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA12_minS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA12_special</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA12_specialS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16[][]</signature>
                        <name>DFA12_transition</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DFA12_transitionS</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssLexer/DFA129</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.BaseRecognizer, Antlr.Runtime.SpecialStateTransitionHandler)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.NoViableAltException)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA129_accept</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA129_acceptS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA129_eof</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA129_eofS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA129_eot</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA129_eotS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA129_max</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA129_maxS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA129_min</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA129_minS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA129_special</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA129_specialS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16[][]</signature>
                        <name>DFA129_transition</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DFA129_transitionS</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssLexer/DFA14</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.BaseRecognizer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.NoViableAltException)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA14_accept</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA14_acceptS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA14_eof</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA14_eofS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA14_eot</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA14_eotS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA14_max</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA14_maxS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA14_min</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA14_minS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA14_special</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA14_specialS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16[][]</signature>
                        <name>DFA14_transition</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DFA14_transitionS</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssLexer/DFA18</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.BaseRecognizer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.NoViableAltException)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA18_accept</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA18_acceptS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA18_eof</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA18_eofS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA18_eot</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA18_eotS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA18_max</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA18_maxS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA18_min</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA18_minS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA18_special</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA18_specialS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16[][]</signature>
                        <name>DFA18_transition</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DFA18_transitionS</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssLexer/DFA25</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.BaseRecognizer, Antlr.Runtime.SpecialStateTransitionHandler)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.NoViableAltException)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA25_accept</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA25_acceptS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA25_eof</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA25_eofS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA25_eot</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA25_eotS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA25_max</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA25_maxS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA25_min</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA25_minS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA25_special</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA25_specialS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16[][]</signature>
                        <name>DFA25_transition</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DFA25_transitionS</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssLexer/DFA31</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.BaseRecognizer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.NoViableAltException)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA31_accept</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA31_acceptS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA31_eof</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA31_eofS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA31_eot</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA31_eotS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA31_max</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA31_maxS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA31_min</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA31_minS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA31_special</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA31_specialS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16[][]</signature>
                        <name>DFA31_transition</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DFA31_transitionS</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssLexer/DFA46</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.BaseRecognizer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.NoViableAltException)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA46_accept</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA46_acceptS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA46_eof</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA46_eofS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA46_eot</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA46_eotS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA46_max</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA46_maxS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA46_min</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA46_minS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA46_special</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA46_specialS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16[][]</signature>
                        <name>DFA46_transition</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DFA46_transitionS</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssLexer/DFA8</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.BaseRecognizer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.NoViableAltException)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA8_accept</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA8_acceptS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA8_eof</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA8_eofS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA8_eot</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA8_eotS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA8_max</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA8_maxS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA8_min</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA8_minS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA8_special</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA8_specialS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16[][]</signature>
                        <name>DFA8_transition</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DFA8_transitionS</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.ITokenStream)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.ITokenStream, Antlr.Runtime.RecognizerSharedState)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Action)</signature>
                        <name>EvaluatePredicate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Antlr.Runtime.CommonToken()</signature>
                        <name>GetWhitespaceToken</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitDFAs</name>
                    </method>
                    <method>
                        <signature>void(string, Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>LogDiagnostics</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>LogTree</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.StyleSheetNode(System.IO.FileInfo, bool)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.StyleSheetNode(WebGrease.IWebGreaseContext, string, bool)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.StyleSheetNode(WebGrease.IWebGreaseContext, string, bool)</signature>
                        <name>ParseStyleSheet</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.RecognitionException)</signature>
                        <name>ReportError</name>
                    </method>
                    <method>
                        <signature>int32(Antlr.Runtime.DFA, int32, Antlr.Runtime.IIntStream)</signature>
                        <name>SpecialStateTransition28</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(Antlr.Runtime.DFA, int32, Antlr.Runtime.IIntStream)</signature>
                        <name>SpecialStateTransition43</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Antlr.Runtime.CommonToken(string)</signature>
                        <name>TrimMsieExpression</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/atname_return()</signature>
                        <name>atname</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/attrib_return()</signature>
                        <name>attrib</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/beginfunc_return()</signature>
                        <name>beginfunc</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/class_return()</signature>
                        <name>class</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/combinator_return()</signature>
                        <name>combinator</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/combinator_simple_selector_sequence_return()</signature>
                        <name>combinator_simple_selector_sequence</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/declaration_return()</signature>
                        <name>declaration</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/document_return()</signature>
                        <name>document</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/document_match_function_return()</signature>
                        <name>document_match_function</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/element_name_return()</signature>
                        <name>element_name</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/expr_return()</signature>
                        <name>expr</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/function_return()</signature>
                        <name>function</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/functional_pseudo_return()</signature>
                        <name>functional_pseudo</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GrammarFileName</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_TokenNames</name>
                    </method>
                    <method>
                        <signature>Antlr.Runtime.Tree.ITreeAdaptor()</signature>
                        <name>get_TreeAdaptor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/hash_return()</signature>
                        <name>hash</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/hashclassatnameattribpseudonegation_return()</signature>
                        <name>hashclassatnameattribpseudonegation</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/keyframes_return()</signature>
                        <name>keyframes</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/keyframes_block_return()</signature>
                        <name>keyframes_block</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/keyframes_selector_return()</signature>
                        <name>keyframes_selector</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/keyframes_selectors_return()</signature>
                        <name>keyframes_selectors</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/main_return()</signature>
                        <name>main</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/media_return()</signature>
                        <name>media</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/media_expression_return()</signature>
                        <name>media_expression</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/media_feature_return()</signature>
                        <name>media_feature</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/media_query_return()</signature>
                        <name>media_query</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/media_query_list_return()</signature>
                        <name>media_query_list</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/media_type_return()</signature>
                        <name>media_type</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/namespace_return()</signature>
                        <name>namespace</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/namespace_prefix_return()</signature>
                        <name>namespace_prefix</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/negation_return()</signature>
                        <name>negation</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/negation_arg_return()</signature>
                        <name>negation_arg</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/operator_return()</signature>
                        <name>operator</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/page_return()</signature>
                        <name>page</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/prio_return()</signature>
                        <name>prio</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/property_return()</signature>
                        <name>property</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/pseudo_return()</signature>
                        <name>pseudo</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/pseudo_page_return()</signature>
                        <name>pseudo_page</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/ruleset_return()</signature>
                        <name>ruleset</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/selector_return()</signature>
                        <name>selector</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/selector_namespace_prefix_return()</signature>
                        <name>selector_namespace_prefix</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/selectorexpression_return()</signature>
                        <name>selectorexpression</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/selectors_group_return()</signature>
                        <name>selectors_group</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.Tree.ITreeAdaptor)</signature>
                        <name>set_TreeAdaptor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/simple_selector_sequence_return()</signature>
                        <name>simple_selector_sequence</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/stringoruri_return()</signature>
                        <name>stringoruri</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/styleSheet_return()</signature>
                        <name>styleSheet</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/styleSheetrules_return()</signature>
                        <name>styleSheetrules</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/styleimport_return()</signature>
                        <name>styleimport</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>synpred1_CssParser_fragment</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>synpred2_CssParser_fragment</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>synpred3_CssParser_fragment</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>synpred4_CssParser_fragment</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>synpred5_CssParser_fragment</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>synpred6_CssParser_fragment</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>synpred7_CssParser_fragment</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>synpred8_CssParser_fragment</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/term_return()</signature>
                        <name>term</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/termwithoperator_return()</signature>
                        <name>termwithoperator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/type_selector_return()</signature>
                        <name>type_selector</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/unary_operator_return()</signature>
                        <name>unary_operator</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/universal_return()</signature>
                        <name>universal</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/wg_dpi_return()</signature>
                        <name>wg_dpi</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.CssParser/whitespace_return()</signature>
                        <name>whitespace</name>
                        <newname>ae</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>A</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>AND</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ANGLE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ATIDENTIFIER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ATTRIBIDENTIFIER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ATTRIBNAME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ATTRIBOPERATOR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ATTRIBOPERATORVALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ATTRIBVALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>AT_NAME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>B</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BACKWARD_SLASH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>C</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CHARSET</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CHARSET_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CIRCLE_BEGIN</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CIRCLE_END</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CLASSIDENTIFIER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CLASS_IDENT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>COLON</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>COLONS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>COMBINATOR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>COMBINATOR_SIMPLE_SELECTOR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>COMBINATOR_SIMPLE_SELECTOR_SEQUENCES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>COMMA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>COMMENTS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CURLY_BEGIN</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CURLY_END</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>D</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DASHMATCH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DECLARATION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DECLARATIONS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGITS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIMENSION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DOCUMENT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DOCUMENT_MATCHNAME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DOCUMENT_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DOCUMENT_SYMBOL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DOMAIN_FUNCTION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>E</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ELEMENT_NAME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>EOF</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>EQUALS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ESCAPE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>EXPR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>F</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FORWARD_SLASH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FREQ</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FROM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FUNCTIONAL_PSEUDO</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FUNCTIONBASEDVALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FUNCTIONNAME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FUNCTIONPARAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>G</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GREATER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>H</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HASH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HASHCLASSATNAMEATTRIBPSEUDONEGATION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HASHCLASSATNAMEATTRIBPSEUDONEGATIONNODES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HASHIDENTIFIER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HASH_IDENT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HEXBASEDVALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HEXDIGIT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>I</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IDENT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IDENTBASEDVALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IMPORT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IMPORTANT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IMPORTANT_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IMPORTS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IMPORT_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>INCLUDES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>K</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>KEYFRAMES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>KEYFRAMES_BLOCK</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>KEYFRAMES_BLOCKS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>KEYFRAMES_SELECTOR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>KEYFRAMES_SELECTORS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>KEYFRAMES_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>KEYFRAMES_SYMBOL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>L</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>LENGTH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>LETTER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>M</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEDIA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEDIA_EXPRESSION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEDIA_EXPRESSIONS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEDIA_FEATURE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEDIA_QUERY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEDIA_QUERY_LIST</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEDIA_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEDIA_TYPE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MINUS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MSIE_EXPRESSION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MSIE_IMAGE_TRANSFORM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>N</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NAME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NAMESPACE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NAMESPACES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NAMESPACE_PREFIX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NAMESPACE_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NEGATIONIDENTIFIER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NEGATION_ARG</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NMCHAR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NMSTART</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NONASCII</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NOT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NOT_TEXT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NUMBER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NUMBERBASEDVALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>O</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ONLY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ONLY_TEXT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>OPERATOR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>P</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PAGE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PAGE_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PERCENTAGE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PIPE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PLUS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PREFIXMATCH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PROPERTY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PSEUDOIDENTIFIER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PSEUDONAME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PSEUDO_PAGE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>R</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>REGEXP_FUNCTION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RELATIVELENGTH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RESOLUTION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RULESET</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RULESETS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>S</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SELECTOR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SELECTORS_GROUP</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SELECTOR_EXPRESSION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SELECTOR_NAMESPACE_PREFIX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SEMICOLON</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SIMPLE_SELECTOR_SEQUENCE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SPACE_AFTER_UNICODE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SPEECH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SQUARE_BEGIN</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SQUARE_END</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>STAR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>STAR_TEXT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>STRING</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>STRINGBASEDVALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>STYLESHEET</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SUBSTRINGMATCH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SUFFIXMATCH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>T</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TERM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TERMWITHOPERATOR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TERMWITHOPERATORS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TILDE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TIME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TO</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TYPE_SELECTOR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>U</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNARY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNICODE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNICODE_ESCAPE_HACK</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNICODE_NULLTERM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNICODE_RANGE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNICODE_TAB</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNICODE_ZEROS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UNIVERSAL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>URI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>URIBASEDVALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>URL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>URLPREFIX_FUNCTION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>V</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>W</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WG_DPI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WG_DPI_SYM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WHITESPACE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WS_FRAGMENT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>X</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Y</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Z</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;System.Exception&gt;</signature>
                        <name>_exceptions</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>_semicolon</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.Tree.ITreeAdaptor</signature>
                        <name>adaptor</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.CssParser/DFA28</signature>
                        <name>dfa28</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.CssParser/DFA43</signature>
                        <name>dfa43</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>tokenNames</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>GrammarFileName</name>
                    </property>
                    <property>
                        <signature>string[]()</signature>
                        <name>TokenNames</name>
                    </property>
                    <property>
                        <signature>Antlr.Runtime.Tree.ITreeAdaptor()</signature>
                        <name>TreeAdaptor</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/&lt;&gt;c__DisplayClass3</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Antlr.Runtime.Tree.CommonTree()</signature>
                        <name>&lt;ParseStyleSheet&gt;b__0</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.StyleSheetNode()</signature>
                        <name>&lt;ParseStyleSheet&gt;b__1</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Antlr.Runtime.Tree.CommonTree</signature>
                        <name>commonTree</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>cssContent</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.CssParser</signature>
                        <name>parser</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>shouldLogDiagnostics</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/DFA28</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.BaseRecognizer, Antlr.Runtime.SpecialStateTransitionHandler)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.NoViableAltException)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA28_accept</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA28_acceptS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA28_eof</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA28_eofS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA28_eot</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA28_eotS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA28_max</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA28_maxS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA28_min</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA28_minS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA28_special</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA28_specialS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16[][]</signature>
                        <name>DFA28_transition</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DFA28_transitionS</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/DFA43</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.BaseRecognizer, Antlr.Runtime.SpecialStateTransitionHandler)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Antlr.Runtime.NoViableAltException)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA43_accept</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA43_acceptS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA43_eof</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA43_eofS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA43_eot</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA43_eotS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA43_max</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA43_maxS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>DFA43_min</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA43_minS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>DFA43_special</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DFA43_specialS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16[][]</signature>
                        <name>DFA43_transition</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DFA43_transitionS</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/Follow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_AND_in_media_query1036</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_AND_in_media_query993</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_ANGLE_in_term2852</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_AT_NAME_in_atname2546</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CHARSET_SYM_in_styleSheet653</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CIRCLE_BEGIN_in_beginfunc3145</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CIRCLE_BEGIN_in_beginfunc3169</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CIRCLE_BEGIN_in_beginfunc3191</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CIRCLE_BEGIN_in_beginfunc3214</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CIRCLE_BEGIN_in_media_expression1091</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CIRCLE_BEGIN_in_negation2478</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CIRCLE_END_in_function3111</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CIRCLE_END_in_functional_pseudo2401</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CIRCLE_END_in_media_expression1102</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CIRCLE_END_in_negation2483</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CLASS_IDENT_in_class2089</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_COLON_in_declaration2580</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_COLON_in_media_expression1096</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_COLON_in_negation2474</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_COLON_in_pseudo2302</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_COLON_in_pseudo2306</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_COLON_in_pseudo2349</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_COLON_in_pseudo2353</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_COLON_in_pseudo_page1211</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_COMMA_in_keyframes_selectors3370</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_COMMA_in_media_query_list946</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_COMMA_in_selectors_group1429</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CURLY_BEGIN_in_document3435</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CURLY_BEGIN_in_keyframes3252</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CURLY_BEGIN_in_keyframes_block3315</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CURLY_BEGIN_in_media881</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CURLY_BEGIN_in_page1160</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CURLY_BEGIN_in_ruleset1370</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CURLY_END_in_document3440</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CURLY_END_in_keyframes3257</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CURLY_END_in_keyframes_block3325</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CURLY_END_in_media894</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CURLY_END_in_page1170</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_CURLY_END_in_ruleset1388</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_DASHMATCH_in_attrib2191</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_DOCUMENT_SYM_in_document3425</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_DOMAIN_FUNCTION_in_document_match_function3526</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_EOF_in_main629</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_EQUALS_in_attrib2183</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_FREQ_in_term2868</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_FROM_in_beginfunc3167</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_GREATER_in_combinator1558</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_HASH_IDENT_in_hash3074</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IDENT_in_attrib2144</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IDENT_in_attrib2209</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IDENT_in_beginfunc3143</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IDENT_in_element_name1999</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IDENT_in_keyframes3247</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IDENT_in_media_feature1128</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IDENT_in_media_type1068</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IDENT_in_namespace_prefix811</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IDENT_in_property1328</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IDENT_in_pseudo2311</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IDENT_in_pseudo_page1213</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IDENT_in_term2973</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IMPORTANT_SYM_in_prio2698</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_IMPORT_SYM_in_styleimport730</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_INCLUDES_in_attrib2187</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_KEYFRAMES_SYM_in_keyframes3244</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_LENGTH_in_term2836</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_MEDIA_SYM_in_media876</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_MINUS_in_unary_operator1279</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_MSIE_EXPRESSION_in_term2944</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_MSIE_IMAGE_TRANSFORM_in_beginfunc3212</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_NAMESPACE_SYM_in_namespace772</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_NOT_in_media_query986</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_NOT_in_negation2476</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_NUMBER_in_term2820</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_NUMBER_in_wg_dpi842</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_ONLY_in_media_query982</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_PAGE_SYM_in_page1155</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_PERCENTAGE_in_term2828</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_PIPE_in_selector_namespace_prefix1970</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_PLUS_in_combinator1547</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_PLUS_in_unary_operator1295</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_PREFIXMATCH_in_attrib2171</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_REGEXP_FUNCTION_in_document_match_function3546</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_RELATIVELENGTH_in_term2844</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_RESOLUTION_in_term2876</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_SEMICOLON_in_keyframes_block3320</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_SEMICOLON_in_namespace779</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_SEMICOLON_in_page1165</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_SEMICOLON_in_ruleset1379</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_SEMICOLON_in_styleSheet657</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_SEMICOLON_in_styleimport737</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_SEMICOLON_in_wg_dpi844</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_SPEECH_in_term2884</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_SQUARE_BEGIN_in_attrib2128</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_SQUARE_END_in_attrib2229</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_STAR_in_element_name2019</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_STAR_in_property1324</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_STAR_in_universal2060</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_STRING_in_attrib2211</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_STRING_in_keyframes3249</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_STRING_in_stringoruri2619</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_STRING_in_styleSheet655</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_STRING_in_term2997</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_SUBSTRINGMATCH_in_attrib2179</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_SUFFIXMATCH_in_attrib2175</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_S_in_document3427</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_S_in_document3432</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_TILDE_in_combinator1569</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_TIME_in_term2860</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_TO_in_beginfunc3189</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_URI_in_document_match_function3484</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_URI_in_stringoruri2639</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_URI_in_term2914</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_URLPREFIX_FUNCTION_in_document_match_function3505</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_WG_DPI_SYM_in_wg_dpi840</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_WS_in_synpred1_CssParser1626</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_WS_in_whitespace1631</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_atname_in_hashclassatnameattribpseudonegation1824</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_attrib_in_hashclassatnameattribpseudonegation1844</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_attrib_in_negation_arg2529</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_beginfunc_in_function3106</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_beginfunc_in_functional_pseudo2397</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_class_in_hashclassatnameattribpseudonegation1804</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_class_in_negation_arg2527</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_combinator_in_combinator_simple_selector_sequence1504</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_combinator_simple_selector_sequence_in_selector1465</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_declaration_in_keyframes_block3318</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_declaration_in_page1163</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_declaration_in_ruleset1377</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_document_in_styleSheetrules2676</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_document_match_function_in_document3430</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_element_name_in_selector_namespace_prefix1967</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_element_name_in_type_selector1933</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_expr_in_declaration2582</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_expr_in_function3108</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_expr_in_media_expression1098</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_function_in_term3045</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_functional_pseudo_in_pseudo2356</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_hash_in_hashclassatnameattribpseudonegation1784</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_hash_in_negation_arg2525</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_hash_in_term3021</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_hashclassatnameattribpseudonegation_in_simple_selector_sequence1709</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_hashclassatnameattribpseudonegation_in_simple_selector_sequence1751</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_hashclassatnameattribpseudonegation_in_synpred4_CssParser1704</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_hashclassatnameattribpseudonegation_in_synpred5_CssParser1746</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_keyframes_block_in_keyframes3254</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_keyframes_in_styleSheetrules2674</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_keyframes_selector_in_keyframes_selectors3367</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_keyframes_selector_in_keyframes_selectors3372</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_keyframes_selectors_in_keyframes_block3313</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_media_expression_in_media_query1033</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_media_expression_in_media_query1038</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_media_expression_in_media_query995</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_media_feature_in_media_expression1093</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_media_in_styleSheetrules2670</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_media_query_in_media_query_list943</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_media_query_in_media_query_list948</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_media_query_list_in_media878</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_media_query_list_in_styleimport734</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_media_type_in_media_query990</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_namespace_in_styleSheet664</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_namespace_prefix_in_namespace774</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_negation_arg_in_negation2481</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_negation_in_hashclassatnameattribpseudonegation1884</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_operator_in_termwithoperator2772</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_page_in_media889</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_page_in_styleSheetrules2672</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_prio_in_declaration2584</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_property_in_declaration2578</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_pseudo_in_hashclassatnameattribpseudonegation1864</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_pseudo_in_negation_arg2531</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_pseudo_page_in_page1157</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_ruleset_in_document3437</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_ruleset_in_media885</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_ruleset_in_styleSheetrules2668</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_selector_in_selectors_group1426</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_selector_in_selectors_group1431</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_selector_namespace_prefix_in_attrib2139</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_selector_namespace_prefix_in_synpred6_CssParser1924</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_selector_namespace_prefix_in_synpred7_CssParser2051</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_selector_namespace_prefix_in_type_selector1929</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_selector_namespace_prefix_in_universal2056</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_selectorexpression_in_functional_pseudo2399</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_selectors_group_in_ruleset1364</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_set_in_keyframes_selector3402</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_set_in_operator1245</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_set_in_selectorexpression2443</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_simple_selector_sequence_in_combinator_simple_selector_sequence1506</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_simple_selector_sequence_in_selector1462</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_stringoruri_in_namespace777</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_stringoruri_in_styleimport732</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_styleSheet_in_main623</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_styleSheetrules_in_styleSheet667</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_styleimport_in_styleSheet661</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_term_in_expr2730</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_term_in_termwithoperator2775</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_termwithoperator_in_expr2733</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_type_selector_in_negation_arg2523</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_type_selector_in_simple_selector_sequence1696</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_type_selector_in_synpred3_CssParser1691</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_unary_operator_in_term2812</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_universal_in_negation_arg2520</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_universal_in_simple_selector_sequence1686</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_universal_in_synpred2_CssParser1681</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_universal_in_synpred8_CssParser2515</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_wg_dpi_in_styleSheetrules2678</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_whitespace_in_combinator1590</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.BitSet</signature>
                        <name>_whitespace_in_simple_selector_sequence1700</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/atname_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/attrib_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/beginfunc_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/class_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/combinator_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/combinator_simple_selector_sequence_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/declaration_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/document_match_function_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/document_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/element_name_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/expr_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/function_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/functional_pseudo_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/hash_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/hashclassatnameattribpseudonegation_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/keyframes_block_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/keyframes_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/keyframes_selector_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/keyframes_selectors_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/main_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/media_expression_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/media_feature_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/media_query_list_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/media_query_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/media_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/media_type_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/namespace_prefix_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/namespace_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/negation_arg_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/negation_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/operator_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/page_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/prio_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/property_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/pseudo_page_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/pseudo_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/ruleset_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/selector_namespace_prefix_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/selector_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/selectorexpression_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/selectors_group_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/simple_selector_sequence_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/stringoruri_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/styleSheet_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/styleSheetrules_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/styleimport_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/term_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/termwithoperator_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/type_selector_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/unary_operator_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/universal_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/wg_dpi_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssParser/whitespace_return</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.CssParser)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.get_Tree</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tree</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_tree</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Antlr.Runtime.IAstRuleReturnScope.Tree</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.CssStrings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CssLowercaseValidationError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CssLowercaseValidationParentNodeError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CssSelectorHackError</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DuplicateBackgroundFormatError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DuplicateImageReferenceWithDifferentRulesError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedAstNode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedEnum</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedIdentifierOrString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedOperator</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedSimpleSelector</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedSingleValue</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpectedValue</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileNotFoundError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InnerExceptionFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InnerExceptionSelector</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InvalidDimensionsError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OriginalFileElementEmptyError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RepeatedPropertyNameError</name>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TooManyLengthsError</name>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CssLowercaseValidationError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CssLowercaseValidationParentNodeError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CssSelectorHackError</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DuplicateBackgroundFormatError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DuplicateImageReferenceWithDifferentRulesError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedAstNode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedEnum</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedIdentifierOrString</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedOperator</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedSimpleSelector</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedSingleValue</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExpectedValue</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileNotFoundError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InnerExceptionFile</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InnerExceptionSelector</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InvalidDimensionsError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OriginalFileElementEmptyError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RepeatedPropertyNameError</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TooManyLengthsError</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ErrorHelper</name>
                <methodlist>
                    <method>
                        <signature>Antlr.Runtime.RecognitionException(System.Exception)</signature>
                        <name>&lt;CreateBuildErrors&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Antlr.Runtime.RecognitionException)</signature>
                        <name>&lt;CreateBuildErrors&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.BuildWorkflowException&gt;(System.AggregateException, string)</signature>
                        <name>CreateBuildErrors</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(System.AggregateException)</signature>
                        <name>DedupeCSSErrors</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;System.Exception,Antlr.Runtime.RecognitionException&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.RecognitionException,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ErrorHelper/&lt;&gt;c__DisplayClass5</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.BuildWorkflowException(Antlr.Runtime.RecognitionException)</signature>
                        <name>&lt;CreateBuildErrors&gt;b__2</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>fileName</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ErrorHelper/ErrorDeduper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Antlr.Runtime.RecognitionException, Antlr.Runtime.RecognitionException)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32(Antlr.Runtime.RecognitionException)</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Extensions.AstNodeExtensions</name>
                <methodlist>
                    <method>
                        <signature>string(WebGrease.Css.Ast.MediaQuery.MediaQueryNode)</signature>
                        <name>&lt;PrintSelector&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(WebGrease.Css.Ast.AstNode)</signature>
                        <name>MinifyPrint</name>
                    </method>
                    <method>
                        <signature>string(WebGrease.Css.Ast.AstNode)</signature>
                        <name>PrettyPrint</name>
                    </method>
                    <method>
                        <signature>string(WebGrease.Css.Ast.MediaQuery.MediaNode)</signature>
                        <name>PrintSelector</name>
                    </method>
                    <method>
                        <signature>string(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>PrintSelector</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.Ast.MediaQuery.MediaQueryNode,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Extensions.AstNodeExtensions/&lt;&gt;c__DisplayClass3</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SelectorNode, bool)</signature>
                        <name>&lt;PrintSelector&gt;b__2</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Text.StringBuilder</signature>
                        <name>rulesetBuilder</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Extensions.BackgroundAstNodeExtensions</name>
                <methodlist>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;&gt;)</signature>
                        <name>&lt;LoadDeclarationPropertiesDictionary&gt;b__a</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;&gt;)</signature>
                        <name>&lt;LoadDeclarationPropertiesDictionary&gt;b__b</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>&lt;TryGetBackgroundDeclaration&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.TermNode(WebGrease.Css.Ast.TermNode)</signature>
                        <name>CopyTerm</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(WebGrease.Css.Ast.DeclarationNode, System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;)</signature>
                        <name>CreateDeclarationNode</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>DeclarationEnumerator</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,WebGrease.Css.Ast.DeclarationNode&gt;(System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;)</signature>
                        <name>LoadDeclarationPropertiesDictionary</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog, WebGrease.Css.Ast.AstNode, string, System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason&gt;)</signature>
                        <name>SafeAdd</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;, WebGrease.Css.Ast.AstNode, WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Background&amp;, WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundImage&amp;, WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundPosition&amp;, WebGrease.Css.Ast.DeclarationNode&amp;, WebGrease.Css.Ast.DeclarationNode&amp;, System.Collections.Generic.List`1&lt;string&gt;, System.Collections.Generic.HashSet`1&lt;string&gt;, WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog, string, float64, bool)</signature>
                        <name>TryGetBackgroundDeclaration</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Css.Ast.DeclarationNode&gt;, WebGrease.Css.Ast.DeclarationNode&amp;)</signature>
                        <name>TryGetBackgroundDpi</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(bool, System.Collections.Generic.IDictionary`2&lt;string,WebGrease.Css.Ast.DeclarationNode&gt;, WebGrease.Css.Ast.DeclarationNode&amp;)</signature>
                        <name>TryGetBackgroundSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, System.Collections.Generic.ICollection`1&lt;string&gt;)</signature>
                        <name>UpdateFailedUrlsList</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.Ast.DeclarationNode,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;&gt;,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatec</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;&gt;,WebGrease.Css.Ast.DeclarationNode&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegated</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Extensions.BackgroundAstNodeExtensions/&lt;&gt;c__DisplayClasse</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>&lt;LoadDeclarationPropertiesDictionary&gt;b__9</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;&gt;</signature>
                        <name>declarationPropertyNames</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Extensions.BackgroundAstNodeExtensions/&lt;DeclarationEnumerator&gt;d__3</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally6</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.TermWithOperatorNode()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;.get_Current</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.TermWithOperatorNode</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.DeclarationNode</signature>
                        <name>&lt;&gt;3__declarationNode</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;</signature>
                        <name>&lt;&gt;7__wrap5</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.TermWithOperatorNode</signature>
                        <name>&lt;termWithOperatorNode&gt;5__4</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.DeclarationNode</signature>
                        <name>declarationNode</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.TermWithOperatorNode()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;.Current</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Extensions.CommonTreeExtensions</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Antlr.Runtime.Tree.CommonTree&gt;(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;GrandChildren&gt;b__d</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Antlr.Runtime.Tree.CommonTree&gt;(Antlr.Runtime.Tree.CommonTree, string)</signature>
                        <name>Children</name>
                    </method>
                    <method>
                        <signature>string(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>FirstChildText</name>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.IEnumerable`1&lt;Antlr.Runtime.Tree.CommonTree&gt;)</signature>
                        <name>FirstChildText</name>
                    </method>
                    <method>
                        <signature>string(Antlr.Runtime.Tree.CommonTree, string)</signature>
                        <name>FirstChildTextOrDefault</name>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.IEnumerable`1&lt;Antlr.Runtime.Tree.CommonTree&gt;, string)</signature>
                        <name>FirstChildTextOrDefault</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Antlr.Runtime.Tree.CommonTree&gt;(Antlr.Runtime.Tree.CommonTree, string)</signature>
                        <name>GrandChildren</name>
                    </method>
                    <method>
                        <signature>string(Antlr.Runtime.Tree.CommonTree, string)</signature>
                        <name>TextOrDefault</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,System.Collections.Generic.IEnumerable`1&lt;Antlr.Runtime.Tree.CommonTree&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatee</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Extensions.CommonTreeExtensions/&lt;&gt;c__DisplayClass2</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Antlr.Runtime.Tree.CommonTree)</signature>
                        <name>&lt;Children&gt;b__0</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>childFilterText</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Extensions.CommonTreeExtensions/&lt;Children&gt;d__4</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally8</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finallya</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Antlr.Runtime.Tree.CommonTree&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Antlr.Runtime.Tree.CommonTree&gt;.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>Antlr.Runtime.Tree.CommonTree()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Antlr.Runtime.Tree.CommonTree&gt;.get_Current</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.Tree.CommonTree</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__childFilterText</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.Tree.CommonTree</signature>
                        <name>&lt;&gt;3__commonTree</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Antlr.Runtime.Tree.CommonTree&gt;</signature>
                        <name>&lt;&gt;7__wrap7</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Antlr.Runtime.Tree.CommonTree&gt;</signature>
                        <name>&lt;&gt;7__wrap9</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.Tree.CommonTree</signature>
                        <name>&lt;child&gt;5__5</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.Tree.CommonTree</signature>
                        <name>&lt;child&gt;5__6</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Extensions.CommonTreeExtensions/&lt;&gt;c__DisplayClass2</signature>
                        <name>CS$&lt;&gt;8__locals3</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Antlr.Runtime.Tree.CommonTree,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>childFilterText</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.Tree.CommonTree</signature>
                        <name>commonTree</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Antlr.Runtime.Tree.CommonTree()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Antlr.Runtime.Tree.CommonTree&gt;.Current</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Extensions.CommonTreeExtensions/&lt;GrandChildren&gt;d__f</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally12</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Antlr.Runtime.Tree.CommonTree&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Antlr.Runtime.Tree.CommonTree&gt;.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>Antlr.Runtime.Tree.CommonTree()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Antlr.Runtime.Tree.CommonTree&gt;.get_Current</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.Tree.CommonTree</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__childFilterText</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.Tree.CommonTree</signature>
                        <name>&lt;&gt;3__commonTree</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Antlr.Runtime.Tree.CommonTree&gt;</signature>
                        <name>&lt;&gt;7__wrap11</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.Tree.CommonTree</signature>
                        <name>&lt;granchChild&gt;5__10</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>childFilterText</name>
                    </field>
                    <field>
                        <signature>Antlr.Runtime.Tree.CommonTree</signature>
                        <name>commonTree</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Antlr.Runtime.Tree.CommonTree()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Antlr.Runtime.Tree.CommonTree&gt;.Current</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Extensions.ListExtensions</name>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>bool(!!0)</signature>
                        <name>&lt;ToSafeReadOnlyCollection&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!0&gt;(System.Collections.Generic.List`1&lt;!!0&gt;)</signature>
                        <name>AsSafeReadOnly</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;, System.Action`1&lt;!!0&gt;)</signature>
                        <name>ForEach</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;, System.Action`2&lt;!!0,int32&gt;)</signature>
                        <name>ForEach</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.IList`1&lt;!!0&gt;, System.Action`2&lt;!!0,bool&gt;)</signature>
                        <name>ForEach</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!0&gt;(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;)</signature>
                        <name>ToSafeReadOnlyCollection</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Extensions.NumberExtensions</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>string(System.Nullable`1&lt;float32&gt;, string)</signature>
                        <name>CssUnitValue</name>
                    </method>
                    <method>
                        <signature>float32(string)</signature>
                        <name>ParseFloat</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>SignInt</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>TryParseZeroBasedNumberValue</name>
                    </method>
                    <method>
                        <signature>string(System.Nullable`1&lt;float32&gt;)</signature>
                        <name>UnaryOperator</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>NumberWithUnitsRegex</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Extensions.OrderedDictionaryExtensions</name>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Specialized.OrderedDictionary, !!0, System.Func`2&lt;!!0,object&gt;)</signature>
                        <name>AppendWithOverride</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.ImageAssembleConstants</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Background</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BackgroundImage</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BackgroundPosition</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BackgroundRepeat</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BackgroundSize</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Bottom</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Center</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Em</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EmFormat</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FileAttributeName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HeightElementName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InputElementName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Left</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NoRepeat</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OriginalfileElementName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OutputElementName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Percentage</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PositionInSpriteElementName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Px</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PxFormat</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Rem</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RemFormat</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Repeat</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RepeatX</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RepeatY</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Right</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SingleSpace</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Subtract</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Top</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UpFolder</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UrlTerm</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WebGreaseBackgroundDpi</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WidthElementName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XCoordinateElementName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>YCoordinateElementName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Zero</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.ImageAssembleException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>GetObjectData</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImageName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SpriteName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ImageName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SpriteName</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ImageName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SpriteName&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ImageName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SpriteName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput</name>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BucketName</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>get_ImagesInBucket</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BucketName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;)</signature>
                        <name>set_ImagesInBucket</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BucketName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;</signature>
                        <name>&lt;ImagesInBucket&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BucketName</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt;()</signature>
                        <name>ImagesInBucket</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanOutput</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput()</signature>
                        <name>get_ImageAssemblyScanInput</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.ImageAssemble.InputImage&gt;()</signature>
                        <name>get_ImageReferencesToAssemble</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput)</signature>
                        <name>set_ImageAssemblyScanInput</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;WebGrease.ImageAssemble.InputImage&gt;)</signature>
                        <name>set_ImageReferencesToAssemble</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput</signature>
                        <name>&lt;ImageAssemblyScanInput&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.ImageAssemble.InputImage&gt;</signature>
                        <name>&lt;ImageReferencesToAssemble&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput()</signature>
                        <name>ImageAssemblyScanInput</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.ImageAssemble.InputImage&gt;()</signature>
                        <name>ImageReferencesToAssemble</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XContainer, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(System.Xml.Linq.XElement)</signature>
                        <name>LoadDimension</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement)</signature>
                        <name>ParseElement</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;WebGrease.ImageAssemble.ImagePosition&gt;()</signature>
                        <name>get_ImagePosition</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OriginalFilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OutputFilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RelativeOutputFilePath</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>get_SpriteHeight</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>get_SpriteWidth</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>get_X</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>get_Y</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;WebGrease.ImageAssemble.ImagePosition&gt;)</signature>
                        <name>set_ImagePosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OriginalFilePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OutputFilePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RelativeOutputFilePath</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>set_SpriteHeight</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>set_SpriteWidth</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>set_X</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>set_Y</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Nullable`1&lt;WebGrease.ImageAssemble.ImagePosition&gt;</signature>
                        <name>&lt;ImagePosition&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OriginalFilePath&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OutputFilePath&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RelativeOutputFilePath&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>&lt;SpriteHeight&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>&lt;SpriteWidth&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>&lt;X&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>&lt;Y&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Nullable`1&lt;WebGrease.ImageAssemble.ImagePosition&gt;()</signature>
                        <name>ImagePosition</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OriginalFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OutputFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RelativeOutputFilePath</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>SpriteHeight</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>SpriteWidth</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>X</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>Y</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason</signature>
                        <name>BackgroundRepeatInvalid</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason</signature>
                        <name>BackgroundSizeIsSetToNonDefaultValue</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason</signature>
                        <name>IgnoreUrl</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason</signature>
                        <name>IncorrectPosition</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason</signature>
                        <name>InvalidDpi</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason</signature>
                        <name>MultipleUrls</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason</signature>
                        <name>NoRepeat</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason</signature>
                        <name>NoUrl</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason</signature>
                        <name>SpritingIgnore</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode()</signature>
                        <name>get_AstNode</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason&gt;()</signature>
                        <name>get_FailureReason</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Image</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;()</signature>
                        <name>get_ImageType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SpritedImage</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.AstNode)</signature>
                        <name>set_AstNode</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason&gt;)</signature>
                        <name>set_FailureReason</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Image</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;)</signature>
                        <name>set_ImageType</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SpritedImage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.AstNode</signature>
                        <name>&lt;AstNode&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason&gt;</signature>
                        <name>&lt;FailureReason&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Image&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;</signature>
                        <name>&lt;ImageType&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SpritedImage&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.AstNode()</signature>
                        <name>AstNode</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason&gt;()</signature>
                        <name>FailureReason</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Image</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;()</signature>
                        <name>ImageType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SpritedImage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>&lt;Save&gt;b__6</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>&lt;Save&gt;b__7</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>&lt;Save&gt;b__8</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>&lt;Save&gt;b__9</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>&lt;Save&gt;b__a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason&gt;(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>&lt;Save&gt;b__b</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason&gt;(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>&lt;Save&gt;b__c</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>&lt;&gt;f__AnonymousTypec`2&lt;string,System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;&gt;(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>&lt;Save&gt;b__d</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Xml.Linq.XElement(System.Linq.IGrouping`2&lt;&lt;&gt;f__AnonymousTypec`2&lt;string,System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;&gt;,WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis&gt;)</signature>
                        <name>&lt;Save&gt;b__e</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>&lt;get_FailedSprites&gt;b__0</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>string(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>GetFailureMessage</name>
                    </method>
                    <method>
                        <signature>System.Xml.Linq.XElement(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>LogNodeToXElement</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ImageAssemble.ImageType, string, string)</signature>
                        <name>UpdateSpritedImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis&gt;()</signature>
                        <name>get_FailedSprites</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>BackgroundRepeatInvalidMessage</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate10</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate11</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate12</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate13</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis,System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate14</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis,System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate15</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis,&lt;&gt;f__AnonymousTypec`2&lt;string,System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate16</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Linq.IGrouping`2&lt;&lt;&gt;f__AnonymousTypec`2&lt;string,System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;&gt;,WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis&gt;,System.Xml.Linq.XElement&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate17</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatef</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IgnoreUrlMessage</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InvalidDpiMessage</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MultipleUrlsMessage</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NoRepeatMessage</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NoUrlMessage</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PxMessage</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SpritingIgnoredMessage</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis&gt;</signature>
                        <name>logNodes</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis&gt;()</signature>
                        <name>FailedSprites</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog/&lt;&gt;c__DisplayClass4</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>&lt;UpdateSpritedImage&gt;b__2</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis)</signature>
                        <name>&lt;UpdateSpritedImage&gt;b__3</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>imagePath</name>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ImageType</signature>
                        <name>imageType</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>spritedImage</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageLog</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XDocument)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, string)</signature>
                        <name>ProcessInputElement</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement)</signature>
                        <name>ProcessOutputElement</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage&gt;()</signature>
                        <name>get_InputImages</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage&gt;)</signature>
                        <name>set_InputImages</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage&gt;</signature>
                        <name>&lt;InputImages&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage&gt;()</signature>
                        <name>InputImages</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageLog/&lt;&gt;c__DisplayClass1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.Linq.XElement)</signature>
                        <name>&lt;ProcessOutputElement&gt;b__0</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageLog</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>outputFilePath</name>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>spriteHeight</name>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>spriteWidth</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Background</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode, string, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermWithOperatorNode)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(string, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, float64)</signature>
                        <name>UpdateBackgroundNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundImage()</signature>
                        <name>get_BackgroundImage</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundPosition()</signature>
                        <name>get_BackgroundPosition</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundRepeat()</signature>
                        <name>get_BackgroundRepeat</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode()</signature>
                        <name>get_DeclarationAstNode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Url</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundImage)</signature>
                        <name>set_BackgroundImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundPosition)</signature>
                        <name>set_BackgroundPosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundRepeat)</signature>
                        <name>set_BackgroundRepeat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>set_DeclarationAstNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundImage</signature>
                        <name>&lt;BackgroundImage&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundPosition</signature>
                        <name>&lt;BackgroundPosition&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundRepeat</signature>
                        <name>&lt;BackgroundRepeat&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.DeclarationNode</signature>
                        <name>&lt;DeclarationAstNode&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundImage()</signature>
                        <name>BackgroundImage</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundPosition()</signature>
                        <name>BackgroundPosition</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundRepeat()</signature>
                        <name>BackgroundRepeat</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.DeclarationNode()</signature>
                        <name>DeclarationAstNode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Url</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundImage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>HasMultipleUrls</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermNode)</signature>
                        <name>ParseTerm</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermWithOperatorNode)</signature>
                        <name>ParseTermWithOperator</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.TermNode, string&amp;)</signature>
                        <name>TryGetUrl</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(string)</signature>
                        <name>UpdateBackgroundImageNode</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.TermNode, WebGrease.Css.Ast.TermNode&amp;, string)</signature>
                        <name>UpdateTermForUrl</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.AstNode, System.Collections.Generic.HashSet`1&lt;string&gt;, WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog, bool&amp;)</signature>
                        <name>VerifyBackgroundUrl</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode()</signature>
                        <name>get_DeclarationNode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Url</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.TermNode()</signature>
                        <name>get_UrlTermNode</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>set_DeclarationNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Url</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermNode)</signature>
                        <name>set_UrlTermNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.DeclarationNode</signature>
                        <name>&lt;DeclarationNode&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Url&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.TermNode</signature>
                        <name>&lt;UrlTermNode&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>MultipleUrlsRegex</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UrlRegEx</name>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>UrlRegex</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.DeclarationNode()</signature>
                        <name>DeclarationNode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Url</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.TermNode()</signature>
                        <name>UrlTermNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundPosition</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode, string, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float32&gt;, System.Nullable`1&lt;float32&gt;, bool, bool, int32, int32, System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.TermWithOperatorNode&gt;, float64)</signature>
                        <name>AddingMissingXAndY</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermNode, System.Nullable`1&lt;float32&gt;, System.Nullable`1&lt;int32&gt;, WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source)</signature>
                        <name>AssignX</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermNode, System.Nullable`1&lt;float32&gt;, System.Nullable`1&lt;int32&gt;, WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source)</signature>
                        <name>AssignXy</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermNode, System.Nullable`1&lt;float32&gt;, System.Nullable`1&lt;int32&gt;, WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source)</signature>
                        <name>AssignY</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(System.Nullable`1&lt;float32&gt;, System.Nullable`1&lt;float32&gt;, float64, string, float64)</signature>
                        <name>CreateNewDeclaration</name>
                    </method>
                    <method>
                        <signature>WebGrease.ImageAssemble.ImagePosition()</signature>
                        <name>GetImagePositionInVerticalSprite</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsHorizontalCenterAligned</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsHorizontalRightAligned</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsVerticalSpriteCandidate</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermNode)</signature>
                        <name>ParseTerm</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermWithOperatorNode)</signature>
                        <name>ParseTermWithOperator</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>TrySwapXCoordinate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(System.Nullable`1&lt;float32&gt;, System.Nullable`1&lt;float32&gt;, float64)</signature>
                        <name>UpdateBackgroundPositionNode</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.TermNode, WebGrease.Css.Ast.TermNode&amp;, System.Nullable`1&lt;float32&gt;, float64)</signature>
                        <name>UpdateTermForX</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.TermNode, WebGrease.Css.Ast.TermNode&amp;, System.Nullable`1&lt;float32&gt;, float64)</signature>
                        <name>UpdateTermForY</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode()</signature>
                        <name>get_DeclarationNode</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float32&gt;()</signature>
                        <name>get_X</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source&gt;()</signature>
                        <name>get_XSource</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.TermNode()</signature>
                        <name>get_XTermNode</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float32&gt;()</signature>
                        <name>get_Y</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source&gt;()</signature>
                        <name>get_YSource</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.TermNode()</signature>
                        <name>get_YTermNode</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>set_DeclarationNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float32&gt;)</signature>
                        <name>set_X</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source&gt;)</signature>
                        <name>set_XSource</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermNode)</signature>
                        <name>set_XTermNode</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float32&gt;)</signature>
                        <name>set_Y</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source&gt;)</signature>
                        <name>set_YSource</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermNode)</signature>
                        <name>set_YTermNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.DeclarationNode</signature>
                        <name>&lt;DeclarationNode&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;float32&gt;</signature>
                        <name>&lt;X&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source&gt;</signature>
                        <name>&lt;XSource&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.TermNode</signature>
                        <name>&lt;XTermNode&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;float32&gt;</signature>
                        <name>&lt;Y&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source&gt;</signature>
                        <name>&lt;YSource&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.Ast.TermNode</signature>
                        <name>&lt;YTermNode&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>outputUnit</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>outputUnitFactor</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Css.Ast.DeclarationNode()</signature>
                        <name>DeclarationNode</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;float32&gt;()</signature>
                        <name>X</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source&gt;()</signature>
                        <name>XSource</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.TermNode()</signature>
                        <name>XTermNode</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;float32&gt;()</signature>
                        <name>Y</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source&gt;()</signature>
                        <name>YSource</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.Ast.TermNode()</signature>
                        <name>YTermNode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundRepeat</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermNode)</signature>
                        <name>ParseTerm</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermWithOperatorNode)</signature>
                        <name>ParseTermWithOperator</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>VerifyBackgroundNoRepeat</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat&gt;()</signature>
                        <name>get_RepeatValue</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat&gt;)</signature>
                        <name>set_RepeatValue</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat&gt;</signature>
                        <name>&lt;RepeatValue&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat&gt;()</signature>
                        <name>RepeatValue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat</signature>
                        <name>NoRepeat</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat</signature>
                        <name>Repeat</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat</signature>
                        <name>RepeatX</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat</signature>
                        <name>RepeatY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source</signature>
                        <name>Bottom</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source</signature>
                        <name>Center</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source</signature>
                        <name>Em</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source</signature>
                        <name>Left</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source</signature>
                        <name>NoUnits</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source</signature>
                        <name>Percentage</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source</signature>
                        <name>Px</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source</signature>
                        <name>Rem</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source</signature>
                        <name>Right</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source</signature>
                        <name>Top</name>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source</signature>
                        <name>Unknown</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.PrinterFormatter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>Append</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Append</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AppendLine</name>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>AppendLine</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DecrementIndentLevel</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>IncrementIndentLevel</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Length</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WriteIndent</name>
                    </method>
                    <method>
                        <signature>char()</signature>
                        <name>get_IndentCharacter</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_IndentSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PrettyPrint</name>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>set_IndentCharacter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_IndentSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_PrettyPrint</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>char</signature>
                        <name>&lt;IndentCharacter&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;IndentSize&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;PrettyPrint&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Text.StringBuilder</signature>
                        <name>_buffer</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_indentLevel</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>char()</signature>
                        <name>IndentCharacter</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>IndentSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>PrettyPrint</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.UnicodeDecoder</name>
                <methodlist>
                    <method>
                        <signature>void(System.IO.TextReader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Decode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetUnicode</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetUnicodeEncodingValue</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(char)</signature>
                        <name>HValue</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsH</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsSpace</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NextChar</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>char()</signature>
                        <name>PeekChar</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>char</signature>
                        <name>_currentChar</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_readAhead</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.IO.TextReader</signature>
                        <name>_reader</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.ColorOptimizationVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.TermWithOperatorNode)</signature>
                        <name>IsCommaNumber</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.TermNode)</signature>
                        <name>IsNumberTerm</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.ExprNode)</signature>
                        <name>IsThreeNumberArguments</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.TermNode, int32&amp;)</signature>
                        <name>TryGetColorFragment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.ExprNode, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>TryGetRgb</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.TermNode)</signature>
                        <name>VisitTermNode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>ColorGroupCapture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>NumberBasedValue</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.ExcludePropertyVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>VisitDeclarationNode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ExcludedSubstring</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.FloatOptimizationVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.TermNode)</signature>
                        <name>VisitTermNode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>LengthUnits</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>NumberBasedValue</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.ImageAssemblyScanVisitor</name>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.IEnumerable`1&lt;string&gt;, System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput&gt;, bool, string, float64, System.Collections.Generic.IDictionary`2&lt;string,string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;.ctor&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;VisitBackgroundDeclarationNode&gt;b__9</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>&lt;VisitMediaNode&gt;b__7</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.PageNode)</signature>
                        <name>&lt;VisitMediaNode&gt;b__8</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.StyleSheetRuleNode)</signature>
                        <name>&lt;VisitStyleSheetNode&gt;b__6</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundPosition)</signature>
                        <name>AddImageReference</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;, WebGrease.Css.Ast.AstNode)</signature>
                        <name>VisitBackgroundDeclarationNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaNode)</signature>
                        <name>VisitMediaNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.PageNode)</signature>
                        <name>VisitPageNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>VisitRulesetNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.StyleSheetNode)</signature>
                        <name>VisitStyleSheetNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.TermWithOperatorNode)</signature>
                        <name>VisitTermWithOperatorNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.IWebGreaseContext()</signature>
                        <name>get_Context</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanOutput()</signature>
                        <name>get_DefaultImageAssemblyScanOutput</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog()</signature>
                        <name>get_ImageAssemblyAnalysisLog</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanOutput&gt;()</signature>
                        <name>get_ImageAssemblyScanOutputs</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>set_Context</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>&lt;Context&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;</signature>
                        <name>_availableImageSources</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_cssPath</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanOutput</signature>
                        <name>_defaultImageAssemblyScanOutput</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_ignoreImagesWithNonDefaultBackgroundSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog</signature>
                        <name>_imageAssemblyAnalysisLog</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanOutput&gt;</signature>
                        <name>_imageAssemblyScanOutputs</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>_imageReferencesToIgnore</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>_imagesCriteriaFailedReferences</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>outputUnit</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>outputUnitFactor</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.IWebGreaseContext()</signature>
                        <name>Context</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanOutput()</signature>
                        <name>DefaultImageAssemblyScanOutput</name>
                    </property>
                    <property>
                        <signature>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog()</signature>
                        <name>ImageAssemblyAnalysisLog</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanOutput&gt;()</signature>
                        <name>ImageAssemblyScanOutputs</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.ImageAssemblyScanVisitor/&lt;&gt;c__DisplayClass15</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;AddImageReference&gt;b__11</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ImageAssemble.InputImage)</signature>
                        <name>&lt;AddImageReference&gt;b__12</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ImageAssemble.InputImage)</signature>
                        <name>&lt;AddImageReference&gt;b__13</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.ImageAssemble.ImagePosition</signature>
                        <name>imagePosition</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>url</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.ImageAssemblyScanVisitor/&lt;&gt;c__DisplayClass4</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;.ctor&gt;b__2</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Visitor.ImageAssemblyScanVisitor</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>imagesInBucket</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.ImageAssemblyScanVisitor/&lt;&gt;c__DisplayClassd</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanOutput)</signature>
                        <name>&lt;VisitBackgroundDeclarationNode&gt;b__a</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ImageAssemble.InputImage)</signature>
                        <name>&lt;VisitBackgroundDeclarationNode&gt;b__b</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>url</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.ImageAssemblyUpdateVisitor</name>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageLog&gt;, float64, string, float64, string, string, System.Collections.Generic.IDictionary`2&lt;string,string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage&gt;(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageLog)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;(WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage, float64)</signature>
                        <name>CreateBackgroundSizeNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(string, string)</signature>
                        <name>CreateDebugDeclarationComment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(System.Nullable`1&lt;float32&gt;, System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source&gt;, System.Nullable`1&lt;float32&gt;, System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source&gt;)</signature>
                        <name>CreateDebugOriginalPositionComment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;)</signature>
                        <name>CreateDebugSpritePositionComment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(float64)</signature>
                        <name>CreateDpiComment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Nullable`1&lt;float32&gt;, System.Nullable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source&gt;)</signature>
                        <name>GetPositionString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;, WebGrease.Css.Ast.DeclarationNode, float64, WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage)</signature>
                        <name>SetBackgroundSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundPosition, WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage&amp;)</signature>
                        <name>TryGetAssembledImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;, WebGrease.Css.Ast.AstNode)</signature>
                        <name>UpdateDeclarations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;WebGrease.Css.Ast.DeclarationNode&gt;, WebGrease.Css.Ast.DeclarationNode, WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>UpdateDeclarations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaNode)</signature>
                        <name>VisitMediaNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.PageNode)</signature>
                        <name>VisitPageNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>VisitRulesetNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.StyleSheetNode)</signature>
                        <name>VisitStyleSheetNode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageLog,System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;</signature>
                        <name>availableSourceImages</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>cssPath</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>defaultDpi</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>destinationDirectory</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage&gt;</signature>
                        <name>inputImages</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>outputUnit</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>outputUnitFactor</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>prependToDestination</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.ImageAssemblyUpdateVisitor/&lt;&gt;c__DisplayClass3</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.StyleSheetRuleNode)</signature>
                        <name>&lt;VisitStyleSheetNode&gt;b__2</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Visitor.ImageAssemblyUpdateVisitor</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.StyleSheetRuleNode&gt;</signature>
                        <name>updatedStyleSheetRuleNodes</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.ImageAssemblyUpdateVisitor/&lt;&gt;c__DisplayClass7</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>&lt;VisitMediaNode&gt;b__5</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.PageNode)</signature>
                        <name>&lt;VisitMediaNode&gt;b__6</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Visitor.ImageAssemblyUpdateVisitor</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.PageNode&gt;</signature>
                        <name>updatedPageNodes</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.RulesetNode&gt;</signature>
                        <name>updatedRulesets</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.ImageAssemblyUpdateVisitor/&lt;&gt;c__DisplayClassb</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage)</signature>
                        <name>&lt;TryGetAssembledImage&gt;b__a</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.ImageAssemble.ImagePosition</signature>
                        <name>imagePosition</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>parsedImagePath</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.NodeTransformVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.RulesetNode(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>&lt;VisitDocumentQueryNode&gt;b__6</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.TermWithOperatorNode(WebGrease.Css.Ast.TermWithOperatorNode)</signature>
                        <name>&lt;VisitExprNode&gt;b__7</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.MediaQuery.MediaQueryNode(WebGrease.Css.Ast.MediaQuery.MediaQueryNode)</signature>
                        <name>&lt;VisitImportNode&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>&lt;VisitKeyFramesBlockNode&gt;b__d</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Animation.KeyFramesBlockNode(WebGrease.Css.Ast.Animation.KeyFramesBlockNode)</signature>
                        <name>&lt;VisitKeyFramesNode&gt;b__c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.RulesetNode(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>&lt;VisitMediaNode&gt;b__3</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.PageNode(WebGrease.Css.Ast.PageNode)</signature>
                        <name>&lt;VisitMediaNode&gt;b__4</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.MediaQuery.MediaExpressionNode(WebGrease.Css.Ast.MediaQuery.MediaExpressionNode)</signature>
                        <name>&lt;VisitMediaQueryNode&gt;b__b</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>&lt;VisitPageNode&gt;b__5</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.DeclarationNode(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>&lt;VisitRulesetNode&gt;b__2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode(WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode)</signature>
                        <name>&lt;VisitSelectorNode&gt;b__8</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNode(WebGrease.Css.Ast.Selectors.SelectorNode)</signature>
                        <name>&lt;VisitSelectorsGroupNode&gt;b__9</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode(WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode)</signature>
                        <name>&lt;VisitSimpleSelectorSequenceNode&gt;b__a</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.StyleSheetRuleNode(WebGrease.Css.Ast.StyleSheetRuleNode)</signature>
                        <name>&lt;VisitStyleSheetNode&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.AttribNode)</signature>
                        <name>VisitAttribNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode)</signature>
                        <name>VisitAttribOperatorAndValueNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode)</signature>
                        <name>VisitCombinatorSimpleSelectorSequenceNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>VisitDeclarationNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.DocumentQueryNode)</signature>
                        <name>VisitDocumentQueryNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.ExprNode)</signature>
                        <name>VisitExprNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.FunctionNode)</signature>
                        <name>VisitFunctionNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.FunctionalPseudoNode)</signature>
                        <name>VisitFunctionalPseudoNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode)</signature>
                        <name>VisitHashClassAtNameAttribPseudoNegationNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.ImportNode)</signature>
                        <name>VisitImportNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Animation.KeyFramesBlockNode)</signature>
                        <name>VisitKeyFramesBlockNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Animation.KeyFramesNode)</signature>
                        <name>VisitKeyFramesNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaExpressionNode)</signature>
                        <name>VisitMediaExpressionNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaNode)</signature>
                        <name>VisitMediaNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaQueryNode)</signature>
                        <name>VisitMediaQueryNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.NamespaceNode)</signature>
                        <name>VisitNamespaceNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.NegationArgNode)</signature>
                        <name>VisitNegationArgNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.NegationNode)</signature>
                        <name>VisitNegationNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.PageNode)</signature>
                        <name>VisitPageNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.PseudoNode)</signature>
                        <name>VisitPseudoNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>VisitRulesetNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SelectorExpressionNode)</signature>
                        <name>VisitSelectorExpressionNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode)</signature>
                        <name>VisitSelectorNamespacePrefixNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SelectorNode)</signature>
                        <name>VisitSelectorNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SelectorsGroupNode)</signature>
                        <name>VisitSelectorsGroupNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode)</signature>
                        <name>VisitSimpleSelectorSequenceNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.StyleSheetNode)</signature>
                        <name>VisitStyleSheetNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.TermNode)</signature>
                        <name>VisitTermNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.TermWithOperatorNode)</signature>
                        <name>VisitTermWithOperatorNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.TypeSelectorNode)</signature>
                        <name>VisitTypeSelectorNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.UniversalSelectorNode)</signature>
                        <name>VisitUniversalSelectorNode</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.NodeVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.AttribNode)</signature>
                        <name>VisitAttribNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode)</signature>
                        <name>VisitAttribOperatorAndValueNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode)</signature>
                        <name>VisitCombinatorSimpleSelectorSequenceNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>VisitDeclarationNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.DocumentQueryNode)</signature>
                        <name>VisitDocumentQueryNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.ExprNode)</signature>
                        <name>VisitExprNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.FunctionNode)</signature>
                        <name>VisitFunctionNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.FunctionalPseudoNode)</signature>
                        <name>VisitFunctionalPseudoNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode)</signature>
                        <name>VisitHashClassAtNameAttribPseudoNegationNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.ImportNode)</signature>
                        <name>VisitImportNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Animation.KeyFramesBlockNode)</signature>
                        <name>VisitKeyFramesBlockNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Animation.KeyFramesNode)</signature>
                        <name>VisitKeyFramesNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaExpressionNode)</signature>
                        <name>VisitMediaExpressionNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaNode)</signature>
                        <name>VisitMediaNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaQueryNode)</signature>
                        <name>VisitMediaQueryNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.NamespaceNode)</signature>
                        <name>VisitNamespaceNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.NegationArgNode)</signature>
                        <name>VisitNegationArgNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.NegationNode)</signature>
                        <name>VisitNegationNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.PageNode)</signature>
                        <name>VisitPageNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.PseudoNode)</signature>
                        <name>VisitPseudoNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>VisitRulesetNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SelectorExpressionNode)</signature>
                        <name>VisitSelectorExpressionNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode)</signature>
                        <name>VisitSelectorNamespacePrefixNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SelectorNode)</signature>
                        <name>VisitSelectorNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SelectorsGroupNode)</signature>
                        <name>VisitSelectorsGroupNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode)</signature>
                        <name>VisitSimpleSelectorSequenceNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.StyleSheetNode)</signature>
                        <name>VisitStyleSheetNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.TermNode)</signature>
                        <name>VisitTermNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.TermWithOperatorNode)</signature>
                        <name>VisitTermWithOperatorNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.TypeSelectorNode)</signature>
                        <name>VisitTypeSelectorNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.UniversalSelectorNode)</signature>
                        <name>VisitUniversalSelectorNode</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.OptimizationVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.OrderedDictionary, WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>AddDeclaration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Specialized.OrderedDictionary(System.Collections.Generic.IEnumerable`1&lt;WebGrease.Css.Ast.StyleSheetRuleNode&gt;)</signature>
                        <name>GetMergedNodeDictionary</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>GetUniquePropertyKey</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetVendorPrefix</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>HasImportantFlag</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.RulesetNode(WebGrease.Css.Ast.RulesetNode, WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>MergeDeclarations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.MediaQuery.MediaNode, System.Collections.Specialized.OrderedDictionary)</signature>
                        <name>OptimizeMediaQuery</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.RulesetNode(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>OptimizeRuleset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.RulesetNode, System.Collections.Specialized.OrderedDictionary)</signature>
                        <name>OptimizeRulesetNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Specialized.OrderedDictionary(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>UniqueDeclarations</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.StyleSheetNode)</signature>
                        <name>VisitStyleSheetNode</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldMergeMediaQueries</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldMergeMediaQueries</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldMergeMediaQueries&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldMergeMediaQueries</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.PrintVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.TermWithOperatorNode)</signature>
                        <name>&lt;VisitExprNode&gt;b__9</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.MediaQuery.MediaQueryNode, bool)</signature>
                        <name>&lt;VisitImportNode&gt;b__3</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode, bool)</signature>
                        <name>&lt;VisitKeyFramesBlockNode&gt;b__11</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Animation.KeyFramesBlockNode)</signature>
                        <name>&lt;VisitKeyFramesNode&gt;b__10</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.MediaQuery.MediaQueryNode, bool)</signature>
                        <name>&lt;VisitMediaNode&gt;b__a</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.MediaQuery.MediaExpressionNode)</signature>
                        <name>&lt;VisitMediaQueryNode&gt;b__c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.MediaQuery.MediaExpressionNode, bool)</signature>
                        <name>&lt;VisitMediaQueryNode&gt;b__d</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode, bool)</signature>
                        <name>&lt;VisitPageNode&gt;b__b</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode, bool)</signature>
                        <name>&lt;VisitRulesetNode&gt;b__5</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode, bool)</signature>
                        <name>&lt;VisitSelectorNode&gt;b__7</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SelectorNode, bool)</signature>
                        <name>&lt;VisitSelectorsGroupNode&gt;b__6</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode)</signature>
                        <name>&lt;VisitSimpleSelectorSequenceNode&gt;b__8</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.ImportNode)</signature>
                        <name>&lt;VisitStyleSheetNode&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.NamespaceNode)</signature>
                        <name>&lt;VisitStyleSheetNode&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.StyleSheetRuleNode)</signature>
                        <name>&lt;VisitStyleSheetNode&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(WebGrease.Css.Ast.AstNode, bool)</signature>
                        <name>Print</name>
                    </method>
                    <method>
                        <signature>string(bool, WebGrease.Css.Ast.AstNode)</signature>
                        <name>Print</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.AttribNode)</signature>
                        <name>VisitAttribNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode)</signature>
                        <name>VisitAttribOperatorAndValueNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode)</signature>
                        <name>VisitCombinatorSimpleSelectorSequenceNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>VisitDeclarationNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.DocumentQueryNode)</signature>
                        <name>VisitDocumentQueryNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.ExprNode)</signature>
                        <name>VisitExprNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.FunctionNode)</signature>
                        <name>VisitFunctionNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.FunctionalPseudoNode)</signature>
                        <name>VisitFunctionalPseudoNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode)</signature>
                        <name>VisitHashClassAtNameAttribPseudoNegationNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.ImportNode)</signature>
                        <name>VisitImportNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Animation.KeyFramesBlockNode)</signature>
                        <name>VisitKeyFramesBlockNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Animation.KeyFramesNode)</signature>
                        <name>VisitKeyFramesNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaExpressionNode)</signature>
                        <name>VisitMediaExpressionNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaNode)</signature>
                        <name>VisitMediaNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaQueryNode)</signature>
                        <name>VisitMediaQueryNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.NamespaceNode)</signature>
                        <name>VisitNamespaceNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.NegationArgNode)</signature>
                        <name>VisitNegationArgNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.NegationNode)</signature>
                        <name>VisitNegationNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.PageNode)</signature>
                        <name>VisitPageNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.PseudoNode)</signature>
                        <name>VisitPseudoNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>VisitRulesetNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SelectorExpressionNode)</signature>
                        <name>VisitSelectorExpressionNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode)</signature>
                        <name>VisitSelectorNamespacePrefixNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SelectorNode)</signature>
                        <name>VisitSelectorNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SelectorsGroupNode)</signature>
                        <name>VisitSelectorsGroupNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode)</signature>
                        <name>VisitSimpleSelectorSequenceNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.StyleSheetNode)</signature>
                        <name>VisitStyleSheetNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.TermNode)</signature>
                        <name>VisitTermNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.TermWithOperatorNode)</signature>
                        <name>VisitTermWithOperatorNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.TypeSelectorNode)</signature>
                        <name>VisitTypeSelectorNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.Selectors.UniversalSelectorNode)</signature>
                        <name>VisitUniversalSelectorNode</name>
                    </method>
                    <method>
                        <signature>char()</signature>
                        <name>get_IndentCharacter</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_IndentSize</name>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>set_IndentCharacter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_IndentSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>char</signature>
                        <name>&lt;IndentCharacter&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;IndentSize&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Css.PrinterFormatter</signature>
                        <name>_printerFormatter</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>char()</signature>
                        <name>IndentCharacter</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>IndentSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.SelectorValidationOptimizationVisitor</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.HashSet`1&lt;string&gt;, bool, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Css.Ast.Selectors.SelectorNode)</signature>
                        <name>&lt;VisitRulesetNode&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaNode)</signature>
                        <name>VisitMediaNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>VisitRulesetNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.StyleSheetNode)</signature>
                        <name>VisitStyleSheetNode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>selectorsToValidateOrRemove</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>shouldMatchExactly</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>validate</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.SelectorValidationOptimizationVisitor/&lt;&gt;c__DisplayClass1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.StyleSheetRuleNode)</signature>
                        <name>&lt;VisitStyleSheetNode&gt;b__0</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Visitor.SelectorValidationOptimizationVisitor</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.StyleSheetRuleNode&gt;</signature>
                        <name>updatedStyleSheetRules</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.SelectorValidationOptimizationVisitor/&lt;&gt;c__DisplayClass6</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;VisitRulesetNode&gt;b__4</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Ast.Selectors.SelectorNode</signature>
                        <name>sn</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.SelectorValidationOptimizationVisitor/&lt;&gt;c__DisplayClassa</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>&lt;VisitMediaNode&gt;b__8</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.PageNode)</signature>
                        <name>&lt;VisitMediaNode&gt;b__9</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Css.Visitor.SelectorValidationOptimizationVisitor</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.PageNode&gt;</signature>
                        <name>updatePageNodes</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;WebGrease.Css.Ast.RulesetNode&gt;</signature>
                        <name>updatedRulesetNodes</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Css.Visitor.ValidateLowercaseVisitor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.MediaQuery.MediaQueryNode)</signature>
                        <name>&lt;VisitMediaNode&gt;b__7</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>&lt;VisitMediaNode&gt;b__8</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>&lt;VisitPageNode&gt;b__b</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.Selectors.SelectorNode)</signature>
                        <name>&lt;VisitRulesetNode&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>&lt;VisitRulesetNode&gt;b__4</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.ImportNode)</signature>
                        <name>&lt;VisitStyleSheetNode&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Css.Ast.StyleSheetRuleNode)</signature>
                        <name>&lt;VisitStyleSheetNode&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ValidateForLowerCase</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.DeclarationNode)</signature>
                        <name>VisitDeclarationNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.MediaQuery.MediaNode)</signature>
                        <name>VisitMediaNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.PageNode)</signature>
                        <name>VisitPageNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.RulesetNode)</signature>
                        <name>VisitRulesetNode</name>
                    </method>
                    <method>
                        <signature>WebGrease.Css.Ast.AstNode(WebGrease.Css.Ast.StyleSheetNode)</signature>
                        <name>VisitStyleSheetNode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action`1&lt;WebGrease.Css.Ast.ImportNode&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;WebGrease.Css.Ast.Selectors.SelectorNode&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;WebGrease.Css.Ast.MediaQuery.MediaQueryNode&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate9</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.CssMinifier</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Minify</name>
                    </method>
                    <method>
                        <signature>WebGrease.Activities.MinifyCssActivity()</signature>
                        <name>get_CssActivity</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Errors</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldMinify</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Activities.MinifyCssActivity)</signature>
                        <name>set_CssActivity</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_Errors</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldMinify</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Activities.MinifyCssActivity</signature>
                        <name>&lt;CssActivity&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;Errors&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShouldMinify&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.Activities.MinifyCssActivity()</signature>
                        <name>CssActivity</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>Errors</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShouldMinify</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.DelayedLogManager</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.LogManager, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Tuple`2&lt;string,System.Action`1&lt;string&gt;&gt;)</signature>
                        <name>&lt;Flush&gt;b__1b</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, System.Action`1&lt;string&gt;)</signature>
                        <name>AddTimedAction</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Flush</name>
                    </method>
                    <method>
                        <signature>WebGrease.LogManager()</signature>
                        <name>get_LogManager</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.LogManager)</signature>
                        <name>set_LogManager</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.LogManager</signature>
                        <name>&lt;LogManager&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;System.Tuple`2&lt;string,System.Action`1&lt;string&gt;&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1c</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MessageFormat</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;System.Tuple`2&lt;string,System.Action`1&lt;string&gt;&gt;&gt;</signature>
                        <name>actions</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>flushLock</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isFlushed</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>messagePrefix</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.LogManager()</signature>
                        <name>LogManager</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.DelayedLogManager/&lt;&gt;c__DisplayClass10</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, WebGrease.MessageImportance)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;.ctor&gt;b__2</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, string)</signature>
                        <name>&lt;.ctor&gt;b__3</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;.ctor&gt;b__5</name>
                    </method>
                    <method>
                        <signature>void(System.Exception, string, string)</signature>
                        <name>&lt;.ctor&gt;b__6</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, string)</signature>
                        <name>&lt;.ctor&gt;b__8</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.DelayedLogManager</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.LogManager</signature>
                        <name>syncLogManager</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.DelayedLogManager/&lt;&gt;c__DisplayClass10/&lt;&gt;c__DisplayClass12</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;.ctor&gt;b__1</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.DelayedLogManager/&lt;&gt;c__DisplayClass10</signature>
                        <name>CS$&lt;&gt;8__locals11</name>
                    </field>
                    <field>
                        <signature>WebGrease.MessageImportance</signature>
                        <name>importance</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.DelayedLogManager/&lt;&gt;c__DisplayClass10/&lt;&gt;c__DisplayClass14</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;.ctor&gt;b__4</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.DelayedLogManager/&lt;&gt;c__DisplayClass10</signature>
                        <name>CS$&lt;&gt;8__locals11</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>code</name>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>columnNumber</name>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>endColumnNumber</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>file</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>keyword</name>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>lineNumber</name>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>number</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>subcategory</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.DelayedLogManager/&lt;&gt;c__DisplayClass10/&lt;&gt;c__DisplayClass16</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;.ctor&gt;b__7</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.DelayedLogManager/&lt;&gt;c__DisplayClass10</signature>
                        <name>CS$&lt;&gt;8__locals11</name>
                    </field>
                    <field>
                        <signature>System.Exception</signature>
                        <name>exception</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.DelayedLogManager/&lt;&gt;c__DisplayClass10/&lt;&gt;c__DisplayClass18</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;.ctor&gt;b__9</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.DelayedLogManager/&lt;&gt;c__DisplayClass10</signature>
                        <name>CS$&lt;&gt;8__locals11</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>code</name>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>columnNumber</name>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>endColumnNumber</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>file</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>keyword</name>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>lineNumber</name>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>number</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>subcategory</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Extensions.DictionaryExtensions</name>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;!!0,float64&gt;, System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.KeyValuePair`2&lt;!!0,float64&gt;&gt;)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;!!0,int32&gt;, System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.KeyValuePair`2&lt;!!0,int32&gt;&gt;)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,!!0&gt;, !!0)</signature>
                        <name>AddNamedConfig</name>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;!!0,!!1&gt;, System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.KeyValuePair`2&lt;!!0,!!1&gt;&gt;)</signature>
                        <name>AddRange</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(System.Collections.Generic.IDictionary`2&lt;string,!!0&gt;, string)</signature>
                        <name>GetNamedConfig</name>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>!!1(System.Collections.Generic.IDictionary`2&lt;!!0,!!1&gt;, !!0)</signature>
                        <name>TryGetValue</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Extensions.InputSpecExtensions</name>
                <methodlist>
                    <method>
                        <signature>bool(WebGrease.Configuration.InputSpec)</signature>
                        <name>&lt;GetFiles&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetFiles&gt;b__5</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;WebGrease.Configuration.InputSpec&gt;, string, System.Xml.Linq.XElement)</signature>
                        <name>AddInputSpecs</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(System.Collections.Generic.IEnumerable`1&lt;WebGrease.Configuration.InputSpec&gt;, string, WebGrease.LogManager, bool)</signature>
                        <name>GetFiles</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(WebGrease.Configuration.InputSpec, string, WebGrease.LogManager, bool)</signature>
                        <name>GetFiles</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Configuration.InputSpec,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate6</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Extensions.InputSpecExtensions/&lt;&gt;c__DisplayClass3</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(WebGrease.Configuration.InputSpec)</signature>
                        <name>&lt;GetFiles&gt;b__1</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.LogManager</signature>
                        <name>log</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rootPath</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>throwWhenMissingAndNotOptional</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Extensions.JsonExtensions</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>Newtonsoft.Json.JsonSerializerSettings()</signature>
                        <name>&lt;.cctor&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, bool)</signature>
                        <name>FromJson</name>
                    </method>
                    <method>
                        <signature>Newtonsoft.Json.JsonSerializerSettings(bool)</signature>
                        <name>GetJsonSerializationSettings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(object, bool)</signature>
                        <name>ToJson</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`1&lt;Newtonsoft.Json.JsonSerializerSettings&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Newtonsoft.Json.JsonSerializerSettings</signature>
                        <name>DefaultJsonSerializerSettings</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Lazy`1&lt;Newtonsoft.Json.JsonSerializerSettings&gt;</signature>
                        <name>JsonSerializerSettings</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Extensions.StringExtensions</name>
                <methodlist>
                    <method>
                        <signature>string(string)</signature>
                        <name>AsNullIfWhiteSpace</name>
                    </method>
                    <method>
                        <signature>string(string, object[])</signature>
                        <name>InvariantFormat</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsNullOrWhitespace</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>TryParseBool</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>TryParseInt32</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Nullable`1&lt;!!0&gt;(string, System.Nullable`1&lt;!!0&gt;)</signature>
                        <name>TryParseToEnum</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Extensions.StringPathExtensions</name>
                <methodlist>
                    <method>
                        <signature>string(string)</signature>
                        <name>EnsureEndSeparator</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetFullPathWithLowercase</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>MakeAbsoluteTo</name>
                    </method>
                    <method>
                        <signature>string(string, string, char[])</signature>
                        <name>MakeRelativeTo</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>MakeRelativeToDirectory</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>NormalizeUrl</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ICachableWebGreaseSection</name>
                <methodlist>
                    <method>
                        <signature>bool(System.Func`2&lt;WebGrease.ICacheSection,bool&gt;)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICachableWebGreaseSection(System.Func`2&lt;WebGrease.ICacheSection,bool&gt;)</signature>
                        <name>RestoreFromCacheAction</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICachableWebGreaseSection(System.Action`1&lt;WebGrease.ICacheSection&gt;)</signature>
                        <name>WhenSkipped</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ICacheManager</name>
                <methodlist>
                    <method>
                        <signature>WebGrease.ICacheSection(string, WebGrease.ContentItem, object, WebGrease.Configuration.IFileSet)</signature>
                        <name>BeginSection</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CleanUp</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ICacheSection)</signature>
                        <name>EndSection</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetAbsoluteCacheFilePath</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>SetContext</name>
                    </method>
                    <method>
                        <signature>string(string, WebGrease.ContentItem)</signature>
                        <name>StoreInCache</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICacheSection()</signature>
                        <name>get_CurrentCacheSection</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.ReadOnlyCacheSection&gt;()</signature>
                        <name>get_LoadedCacheSections</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RootPath</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>WebGrease.ICacheSection()</signature>
                        <name>CurrentCacheSection</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.ReadOnlyCacheSection&gt;()</signature>
                        <name>LoadedCacheSections</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RootPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ICacheSection</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.ContentItem, string, bool)</signature>
                        <name>AddResult</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.InputSpec)</signature>
                        <name>AddSourceDependency</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddSourceDependency</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.IO.SearchOption)</signature>
                        <name>AddSourceDependency</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CanBeRestoredFromCache</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CanBeSkipped</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EndSection</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string)</signature>
                        <name>GetCacheData</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(string)</signature>
                        <name>GetCachedContentItem</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(string, string, string, System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentPivot&gt;)</signature>
                        <name>GetCachedContentItem</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(string, bool)</signature>
                        <name>GetCachedContentItems</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(string, !!0)</signature>
                        <name>SetCacheData</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>VaryByContentItem</name>
                    </method>
                    <method>
                        <signature>void(object, bool)</signature>
                        <name>VaryBySettings</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICacheSection()</signature>
                        <name>get_Parent</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UniqueKey</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>WebGrease.ICacheSection()</signature>
                        <name>Parent</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UniqueKey</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ITimeMeasure</name>
                <methodlist>
                    <method>
                        <signature>void(bool, string[])</signature>
                        <name>End</name>
                    </method>
                    <method>
                        <signature>WebGrease.TimeMeasureResult[]()</signature>
                        <name>GetResults</name>
                    </method>
                    <method>
                        <signature>void(bool, string[])</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.DateTimeOffset)</signature>
                        <name>WriteResults</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.IWebGreaseContext</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.LogManager)</signature>
                        <name>CleanCache</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CleanDestination</name>
                    </method>
                    <method>
                        <signature>string(string, WebGrease.ContentItem)</signature>
                        <name>EnsureErrorFileOnDisk</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;(string, System.Collections.Generic.IEnumerable`1&lt;string&gt;, System.Collections.Generic.IEnumerable`1&lt;string&gt;, WebGrease.Activities.FileTypes)</signature>
                        <name>GetAvailableFiles</name>
                    </method>
                    <method>
                        <signature>string(WebGrease.ContentItem)</signature>
                        <name>GetContentItemHash</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetFileHash</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetValueHash</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetWorkingSourceDirectory</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MakeRelativeToApplicationRoot</name>
                    </method>
                    <method>
                        <signature>WebGrease.IWebGreaseSection(string[])</signature>
                        <name>SectionedAction</name>
                    </method>
                    <method>
                        <signature>WebGrease.IWebGreaseSection(string[])</signature>
                        <name>SectionedActionGroup</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Configuration.IFileSet, WebGrease.ContentItem)</signature>
                        <name>TemporaryIgnore</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ContentPivot)</signature>
                        <name>TemporaryIgnore</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Touch</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICacheManager()</signature>
                        <name>get_Cache</name>
                    </method>
                    <method>
                        <signature>WebGrease.Configuration.WebGreaseConfiguration()</signature>
                        <name>get_Configuration</name>
                    </method>
                    <method>
                        <signature>WebGrease.LogManager()</signature>
                        <name>get_Log</name>
                    </method>
                    <method>
                        <signature>WebGrease.ITimeMeasure()</signature>
                        <name>get_Measure</name>
                    </method>
                    <method>
                        <signature>WebGrease.Preprocessing.PreprocessingManager()</signature>
                        <name>get_Preprocessing</name>
                    </method>
                    <method>
                        <signature>System.DateTimeOffset()</signature>
                        <name>get_SessionStartTime</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>WebGrease.ICacheManager()</signature>
                        <name>Cache</name>
                    </property>
                    <property>
                        <signature>WebGrease.Configuration.WebGreaseConfiguration()</signature>
                        <name>Configuration</name>
                    </property>
                    <property>
                        <signature>WebGrease.LogManager()</signature>
                        <name>Log</name>
                    </property>
                    <property>
                        <signature>WebGrease.ITimeMeasure()</signature>
                        <name>Measure</name>
                    </property>
                    <property>
                        <signature>WebGrease.Preprocessing.PreprocessingManager()</signature>
                        <name>Preprocessing</name>
                    </property>
                    <property>
                        <signature>System.DateTimeOffset()</signature>
                        <name>SessionStartTime</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.IWebGreaseSection</name>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(System.Func`1&lt;!!0&gt;)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>void(System.Action)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICachableWebGreaseSection(WebGrease.Configuration.IFileSet, object, bool)</signature>
                        <name>MakeCachable</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICachableWebGreaseSection(WebGrease.ContentItem, object, bool)</signature>
                        <name>MakeCachable</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICachableWebGreaseSection(object, bool)</signature>
                        <name>MakeCachable</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.ColorQuantizer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8(unsigned int8, int32)</signature>
                        <name>ChannelAdjustment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Image, System.Drawing.Imaging.PixelFormat)</signature>
                        <name>Quantize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Image, System.Drawing.Imaging.PixelFormat, bool)</signature>
                        <name>Quantize</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.ColorQuantizer/Octree</name>
                <methodlist>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ImageAssemble.ColorQuantizer/Pixel*)</signature>
                        <name>AddColor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ImageAssemble.ColorQuantizer/Octree/OctreeNode)</signature>
                        <name>AddReducibleNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Color[]()</signature>
                        <name>GetPaletteColors</name>
                    </method>
                    <method>
                        <signature>int32(WebGrease.ImageAssemble.ColorQuantizer/Pixel*)</signature>
                        <name>GetPaletteIndex</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ImageAssemble.ColorQuantizer/Octree/OctreeNode, int32)</signature>
                        <name>SetLastNode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>m_colorCount</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_hasTransparent</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_lastArgb</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ColorQuantizer/Octree/OctreeNode</signature>
                        <name>m_lastNode</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_maxColors</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color[]</signature>
                        <name>m_palette</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ColorQuantizer/Octree/OctreeNode[]</signature>
                        <name>m_reducibleNodes</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ColorQuantizer/Octree/OctreeNode</signature>
                        <name>m_root</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.ColorQuantizer/Octree/OctreeNode</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(int32, WebGrease.ImageAssemble.ColorQuantizer/Octree)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ImageAssemble.ColorQuantizer/Pixel*)</signature>
                        <name>AddColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color[], int32&amp;)</signature>
                        <name>AddColorsToPalette</name>
                    </method>
                    <method>
                        <signature>int32(WebGrease.ImageAssemble.ColorQuantizer/Pixel*)</signature>
                        <name>GetChildIndex</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(WebGrease.ImageAssemble.ColorQuantizer/Pixel*)</signature>
                        <name>GetPaletteIndex</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Reduce</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Level</name>
                    </method>
                    <method>
                        <signature>WebGrease.ImageAssemble.ColorQuantizer/Octree/OctreeNode()</signature>
                        <name>get_NextReducibleNode</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_NodeColor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ImageAssemble.ColorQuantizer/Octree/OctreeNode)</signature>
                        <name>set_NextReducibleNode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.ImageAssemble.ColorQuantizer/Octree/OctreeNode</signature>
                        <name>&lt;NextReducibleNode&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_blueSum</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ColorQuantizer/Octree/OctreeNode[]</signature>
                        <name>m_childNodes</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_greenSum</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_isLeaf</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_level</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ColorQuantizer/Octree</signature>
                        <name>m_octree</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_paletteIndex</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_pixelCount</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_redSum</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>s_levelMasks</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Level</name>
                    </property>
                    <property>
                        <signature>WebGrease.ImageAssemble.ColorQuantizer/Octree/OctreeNode()</signature>
                        <name>NextReducibleNode</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>NodeColor</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.ColorQuantizer/Pixel</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>A</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ARGB</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>B</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>G</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>R</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.ImageAssembleBase</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Bitmap)</signature>
                        <name>&lt;PackHorizontal&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Bitmap)</signature>
                        <name>&lt;PackHorizontal&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(System.Collections.Generic.KeyValuePair`2&lt;WebGrease.ImageAssemble.InputImage,System.Drawing.Bitmap&gt;)</signature>
                        <name>&lt;PackHorizontal&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Bitmap)</signature>
                        <name>&lt;PackVertical&gt;b__6</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Bitmap)</signature>
                        <name>&lt;PackVertical&gt;b__7</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Collections.Generic.KeyValuePair`2&lt;WebGrease.ImageAssemble.InputImage,System.Drawing.Bitmap&gt;)</signature>
                        <name>&lt;PackVertical&gt;b__8</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;WebGrease.ImageAssemble.InputImage,System.Drawing.Bitmap&gt;)</signature>
                        <name>Assemble</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>HashImage</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OptimizeImage</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Collections.Generic.Dictionary`2&lt;WebGrease.ImageAssemble.InputImage,System.Drawing.Bitmap&gt;, bool, System.Nullable`1&lt;System.Drawing.Imaging.PixelFormat&gt;)</signature>
                        <name>PackHorizontal</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Collections.Generic.Dictionary`2&lt;WebGrease.ImageAssemble.InputImage,System.Drawing.Bitmap&gt;, bool, System.Nullable`1&lt;System.Drawing.Imaging.PixelFormat&gt;)</signature>
                        <name>PackVertical</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, WebGrease.ImageAssemble.InputImage)</signature>
                        <name>PassThroughImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>SaveImage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssembleFileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultExtension</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Imaging.ImageFormat()</signature>
                        <name>get_Format</name>
                    </method>
                    <method>
                        <signature>WebGrease.ImageAssemble.ImageMap()</signature>
                        <name>get_ImageXmlMap</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OptimizerToolCommand</name>
                    </method>
                    <method>
                        <signature>WebGrease.ImageAssemble.SpritePackingType()</signature>
                        <name>get_PackingType</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PaddingBetweenImages</name>
                    </method>
                    <method>
                        <signature>WebGrease.ImageAssemble.ImageType()</signature>
                        <name>get_Type</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AssembleFileName</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ImageAssemble.ImageMap)</signature>
                        <name>set_ImageXmlMap</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OptimizerToolCommand</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ImageAssemble.SpritePackingType)</signature>
                        <name>set_PackingType</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_PaddingBetweenImages</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AssembleFileName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ImageMap</signature>
                        <name>&lt;ImageXmlMap&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OptimizerToolCommand&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.SpritePackingType</signature>
                        <name>&lt;PackingType&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;PaddingBetweenImages&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Drawing.Bitmap,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Drawing.Bitmap,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;WebGrease.ImageAssemble.InputImage,System.Drawing.Bitmap&gt;,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Drawing.Bitmap,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate9</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Drawing.Bitmap,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatea</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;WebGrease.ImageAssemble.InputImage,System.Drawing.Bitmap&gt;,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AssembleFileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DefaultExtension</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Imaging.ImageFormat()</signature>
                        <name>Format</name>
                    </property>
                    <property>
                        <signature>WebGrease.ImageAssemble.ImageMap()</signature>
                        <name>ImageXmlMap</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OptimizerToolCommand</name>
                    </property>
                    <property>
                        <signature>WebGrease.ImageAssemble.SpritePackingType()</signature>
                        <name>PackingType</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>PaddingBetweenImages</name>
                    </property>
                    <property>
                        <signature>WebGrease.ImageAssemble.ImageType()</signature>
                        <name>Type</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.ImageAssembleGenerator</name>
                <methodlist>
                    <method>
                        <signature>string(WebGrease.ImageAssemble.InputImage)</signature>
                        <name>&lt;GenerateAssembleFileName&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ImageAssemble.ImageMap(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.ImageAssemble.InputImage&gt;, WebGrease.ImageAssemble.SpritePackingType, string, string, bool, WebGrease.IWebGreaseContext, System.Nullable`1&lt;int32&gt;, WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog, System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;)</signature>
                        <name>AssembleImages</name>
                    </method>
                    <method>
                        <signature>WebGrease.ImageAssemble.ImageMap(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.ImageAssemble.InputImage&gt;, WebGrease.ImageAssemble.SpritePackingType, string, string, string, bool, WebGrease.IWebGreaseContext, System.Nullable`1&lt;int32&gt;, WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog, System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;)</signature>
                        <name>AssembleImages</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.ImageAssemble.InputImage&gt;(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.ImageAssemble.InputImage&gt;, WebGrease.IWebGreaseContext)</signature>
                        <name>DedupImages</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.IEnumerable`1&lt;WebGrease.ImageAssemble.InputImage&gt;, string)</signature>
                        <name>GenerateAssembleFileName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Bitmap)</signature>
                        <name>HasAlpha</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Bitmap)</signature>
                        <name>IsIndexable</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Bitmap)</signature>
                        <name>IsIndexed</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Bitmap)</signature>
                        <name>IsMultiframe</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Bitmap)</signature>
                        <name>IsPhoto</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ImageAssemble.ImageAssembleBase&gt;(WebGrease.IWebGreaseContext)</signature>
                        <name>RegisterAvailableAssemblers</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;WebGrease.ImageAssemble.ImageType,System.Collections.Generic.Dictionary`2&lt;WebGrease.ImageAssemble.InputImage,System.Drawing.Bitmap&gt;&gt;(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;WebGrease.ImageAssemble.InputImage&gt;, System.Nullable`1&lt;WebGrease.ImageAssemble.ImageType&gt;)</signature>
                        <name>SeparateByImageType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.ImageAssemble.InputImage,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DefaultPadding</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.ImageAssembleStrings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AdditionalDetailsMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BitDepthParsingErrorMessage</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DirectoryDoesNotExistMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DuplicateInputFilePathsMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EightBitPNGCannotbeSpritedMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IgnoredFilesMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImageHashNameUpdateFailedMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImageLoadOutofMemoryExceptionMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImagePositionValues</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImageSaveExternalExceptionMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InputFilesDuplicateParameterMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InputFilesMissingPositionMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InputFilesPathAndPositionMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InputImageListNoImageMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InvalidImagePositionMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InvalidInputParameterMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InvalidInputParameterValueMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InvalidPaddingValueMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MissingInputParameterMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoInputFileToProcessMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoInputFilesMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoInputParametersMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PNGBitDepthNotSupportedMessage</name>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SingleInputImageCannotBeSpritedMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SinglePNGCannotBeSpritedMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ToolCommandLineErrorMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ToolSuccessfulCompletionMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ToolUsageMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ValueMissingForInputParameterMessage</name>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AdditionalDetailsMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BitDepthParsingErrorMessage</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DirectoryDoesNotExistMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DuplicateInputFilePathsMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>EightBitPNGCannotbeSpritedMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>IgnoredFilesMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImageHashNameUpdateFailedMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImageLoadOutofMemoryExceptionMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImagePositionValues</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImageSaveExternalExceptionMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InputFilesDuplicateParameterMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InputFilesMissingPositionMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InputFilesPathAndPositionMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InputImageListNoImageMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InvalidImagePositionMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InvalidInputParameterMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InvalidInputParameterValueMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InvalidPaddingValueMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MissingInputParameterMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoInputFileToProcessMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoInputFilesMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoInputParametersMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PNGBitDepthNotSupportedMessage</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SingleInputImageCannotBeSpritedMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SinglePNGCannotBeSpritedMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ToolCommandLineErrorMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ToolSuccessfulCompletionMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ToolUsageMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ValueMissingForInputParameterMessage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.ImageMap</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AppendPadding</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>AppendToXml</name>
                    </method>
                    <method>
                        <signature>void(string, string, int32, int32, int32, int32, string, bool, System.Nullable`1&lt;WebGrease.ImageAssemble.ImagePosition&gt;)</signature>
                        <name>AppendToXml</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveXmlMap</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>UpdateAssembledImageName</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>UpdateOrSetOutputAttribute</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, int32, int32)</signature>
                        <name>UpdateSize</name>
                    </method>
                    <method>
                        <signature>System.Xml.Linq.XDocument()</signature>
                        <name>get_Document</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_SpritedFiles</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>CommentNode</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GeneratedFile</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Height</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ImageNode</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InputNode</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OriginalFile</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OutputNode</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Padding</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PositionInSprite</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RootNode</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Width</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XPosition</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XmlEncoding</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XmlVersion</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>YPosition</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Xml.Linq.XElement</signature>
                        <name>currentOutputNode</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mapFileName</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Xml.Linq.XElement</signature>
                        <name>notAssembledNode</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Xml.Linq.XElement</signature>
                        <name>root</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>spritedFiles</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Xml.Linq.XDocument</signature>
                        <name>xdoc</name>
                        <newname>r</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Xml.Linq.XDocument()</signature>
                        <name>Document</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>SpritedFiles</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.ImageMap/&lt;&gt;c__DisplayClass1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Xml.Linq.XElement)</signature>
                        <name>&lt;UpdateAssembledImageName&gt;b__0</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>oldName</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.ImageMap/&lt;&gt;c__DisplayClass4</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Xml.Linq.XElement)</signature>
                        <name>&lt;UpdateOrSetOutputAttribute&gt;b__3</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>file</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.ImagePosition</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.ImageAssemble.ImagePosition</signature>
                        <name>Center</name>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ImagePosition</signature>
                        <name>Left</name>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ImagePosition</signature>
                        <name>Right</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.ImageType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.ImageAssemble.ImageType</signature>
                        <name>NonphotoIndexed</name>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ImageType</signature>
                        <name>NonphotoNonindexed</name>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ImageType</signature>
                        <name>NotSupported</name>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ImageType</signature>
                        <name>Photo</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.InputImage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AbsoluteImagePath</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_DuplicateImagePaths</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OriginalImagePath</name>
                    </method>
                    <method>
                        <signature>WebGrease.ImageAssemble.ImagePosition()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AbsoluteImagePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OriginalImagePath</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ImageAssemble.ImagePosition)</signature>
                        <name>set_Position</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AbsoluteImagePath&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OriginalImagePath&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.ImagePosition</signature>
                        <name>&lt;Position&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>duplicateImagePaths</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AbsoluteImagePath</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>DuplicateImagePaths</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OriginalImagePath</name>
                    </property>
                    <property>
                        <signature>WebGrease.ImageAssemble.ImagePosition()</signature>
                        <name>Position</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.NonphotoIndexedAssemble</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, WebGrease.ImageAssemble.InputImage)</signature>
                        <name>PassThroughImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>SaveImage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultExtension</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Imaging.ImageFormat()</signature>
                        <name>get_Format</name>
                    </method>
                    <method>
                        <signature>WebGrease.ImageAssemble.ImageType()</signature>
                        <name>get_Type</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DefaultExtension</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Imaging.ImageFormat()</signature>
                        <name>Format</name>
                    </property>
                    <property>
                        <signature>WebGrease.ImageAssemble.ImageType()</signature>
                        <name>Type</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.NonphotoNonindexedAssemble</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, WebGrease.ImageAssemble.InputImage)</signature>
                        <name>PassThroughImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>SaveImage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultExtension</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Imaging.ImageFormat()</signature>
                        <name>get_Format</name>
                    </method>
                    <method>
                        <signature>WebGrease.ImageAssemble.ImageType()</signature>
                        <name>get_Type</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DefaultExtension</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Imaging.ImageFormat()</signature>
                        <name>Format</name>
                    </property>
                    <property>
                        <signature>WebGrease.ImageAssemble.ImageType()</signature>
                        <name>Type</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.NotSupportedAssemble</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;WebGrease.ImageAssemble.InputImage,System.Drawing.Bitmap&gt;)</signature>
                        <name>Assemble</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultExtension</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Imaging.ImageFormat()</signature>
                        <name>get_Format</name>
                    </method>
                    <method>
                        <signature>WebGrease.ImageAssemble.ImageType()</signature>
                        <name>get_Type</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DefaultExtension</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Imaging.ImageFormat()</signature>
                        <name>Format</name>
                    </property>
                    <property>
                        <signature>WebGrease.ImageAssemble.ImageType()</signature>
                        <name>Type</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.PhotoAssemble</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Imaging.ImageCodecInfo)</signature>
                        <name>&lt;SaveImage&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>SaveImage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultExtension</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Imaging.ImageFormat()</signature>
                        <name>get_Format</name>
                    </method>
                    <method>
                        <signature>WebGrease.ImageAssemble.ImageType()</signature>
                        <name>get_Type</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;System.Drawing.Imaging.ImageCodecInfo,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>DefaultJpegQuality</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DefaultExtension</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Imaging.ImageFormat()</signature>
                        <name>Format</name>
                    </property>
                    <property>
                        <signature>WebGrease.ImageAssemble.ImageType()</signature>
                        <name>Type</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ImageAssemble.SpritePackingType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.ImageAssemble.SpritePackingType</signature>
                        <name>Horizontal</name>
                    </field>
                    <field>
                        <signature>WebGrease.ImageAssemble.SpritePackingType</signature>
                        <name>Vertical</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.LogManager</name>
                <methodlist>
                    <method>
                        <signature>void(System.Action`2&lt;string,WebGrease.MessageImportance&gt;, System.Action`1&lt;string&gt;, WebGrease.Activities.LogExtendedError, System.Action`1&lt;string&gt;, WebGrease.Activities.LogError, WebGrease.Activities.LogExtendedError, System.Nullable`1&lt;bool&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Exception, string, string)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, string)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ErrorHasOccurred</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, WebGrease.MessageImportance)</signature>
                        <name>Information</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Warning</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, string)</signature>
                        <name>Warning</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_ErrorOccurred</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasExtendedErrorHandler</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_TreatWarningsAsErrors</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_ErrorOccurred</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HasExtendedErrorHandler</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_TreatWarningsAsErrors</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;HasExtendedErrorHandler&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;TreatWarningsAsErrors&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>ErrorOccurred</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.LogError</signature>
                        <name>error</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;string&gt;</signature>
                        <name>errorMessage</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.LogExtendedError</signature>
                        <name>extendedError</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Activities.LogExtendedError</signature>
                        <name>extendedWarning</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Action`2&lt;string,WebGrease.MessageImportance&gt;</signature>
                        <name>information</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;string&gt;</signature>
                        <name>warning</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>HasExtendedErrorHandler</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>TreatWarningsAsErrors</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>ErrorOccurred</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>WebGrease.MessageImportance</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WebGrease.MessageImportance</signature>
                        <name>High</name>
                    </field>
                    <field>
                        <signature>WebGrease.MessageImportance</signature>
                        <name>Low</name>
                    </field>
                    <field>
                        <signature>WebGrease.MessageImportance</signature>
                        <name>Normal</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.NullCacheManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICacheSection(string, WebGrease.ContentItem, object, WebGrease.Configuration.IFileSet)</signature>
                        <name>BeginSection</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CleanUp</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ICacheSection)</signature>
                        <name>EndSection</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetAbsoluteCacheFilePath</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>SetContext</name>
                    </method>
                    <method>
                        <signature>string(string, WebGrease.ContentItem)</signature>
                        <name>StoreInCache</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICacheSection()</signature>
                        <name>get_CurrentCacheSection</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.ReadOnlyCacheSection&gt;()</signature>
                        <name>get_LoadedCacheSections</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RootPath</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,WebGrease.ReadOnlyCacheSection&gt;)</signature>
                        <name>set_LoadedCacheSections</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.ReadOnlyCacheSection&gt;</signature>
                        <name>&lt;LoadedCacheSections&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ICacheSection</signature>
                        <name>EmptyCacheSection</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.ICacheSection()</signature>
                        <name>CurrentCacheSection</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,WebGrease.ReadOnlyCacheSection&gt;()</signature>
                        <name>LoadedCacheSections</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RootPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.NullCacheSection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem, string, bool)</signature>
                        <name>AddResult</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.InputSpec)</signature>
                        <name>AddSourceDependency</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddSourceDependency</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.IO.SearchOption)</signature>
                        <name>AddSourceDependency</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CanBeRestoredFromCache</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CanBeSkipped</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EndSection</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string)</signature>
                        <name>GetCacheData</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(string)</signature>
                        <name>GetCachedContentItem</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(string, string, string, System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentPivot&gt;)</signature>
                        <name>GetCachedContentItem</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;(string, bool)</signature>
                        <name>GetCachedContentItems</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(string, !!0)</signature>
                        <name>SetCacheData</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ContentItem)</signature>
                        <name>VaryByContentItem</name>
                    </method>
                    <method>
                        <signature>void(object, bool)</signature>
                        <name>VaryBySettings</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICacheSection()</signature>
                        <name>get_Parent</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UniqueKey</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UniqueKey</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UniqueKey&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.CacheResult&gt;</signature>
                        <name>EmptyCacheResults</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ContentItem&gt;</signature>
                        <name>EmptyContentItems</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.ICacheSection()</signature>
                        <name>Parent</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UniqueKey</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.NullTimeMeasure</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool, string[])</signature>
                        <name>End</name>
                    </method>
                    <method>
                        <signature>WebGrease.TimeMeasureResult[]()</signature>
                        <name>GetResults</name>
                    </method>
                    <method>
                        <signature>void(bool, string[])</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.DateTimeOffset)</signature>
                        <name>WriteResults</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.TimeMeasureResult[]</signature>
                        <name>emptyResult</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Preprocessing.IPreprocessingEngine</name>
                <methodlist>
                    <method>
                        <signature>bool(WebGrease.ContentItem, WebGrease.Configuration.PreprocessingConfig)</signature>
                        <name>CanProcess</name>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(WebGrease.ContentItem, WebGrease.Configuration.PreprocessingConfig, bool)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext)</signature>
                        <name>SetContext</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Preprocessing.PreprocessingException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Preprocessing.PreprocessingManager</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.Configuration.WebGreaseConfiguration, WebGrease.LogManager, WebGrease.ITimeMeasure)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.Preprocessing.IPreprocessingEngine&gt;(string)</signature>
                        <name>&lt;GetProcessors&gt;b__6</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(WebGrease.Preprocessing.IPreprocessingEngine)</signature>
                        <name>&lt;Process&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.Preprocessing.IPreprocessingEngine[](WebGrease.ContentItem, WebGrease.Configuration.PreprocessingConfig)</signature>
                        <name>GetProcessors</name>
                    </method>
                    <method>
                        <signature>void(string, WebGrease.LogManager, WebGrease.ITimeMeasure)</signature>
                        <name>Initialize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ContentItem(WebGrease.ContentItem, WebGrease.Configuration.PreprocessingConfig, bool)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.WebGreaseContext)</signature>
                        <name>SetContext</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.Preprocessing.IPreprocessingEngine,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.Preprocessing.IPreprocessingEngine&gt;</signature>
                        <name>registeredPreprocessingEngines</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Preprocessing.PreprocessingManager/&lt;&gt;c__DisplayClass4</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;Process&gt;b__0</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ICacheSection)</signature>
                        <name>&lt;Process&gt;b__1</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Preprocessing.PreprocessingManager</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>contentItem</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>minimalOutput</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.PreprocessingConfig</signature>
                        <name>preprocessConfig</name>
                    </field>
                    <field>
                        <signature>WebGrease.Preprocessing.IPreprocessingEngine[]</signature>
                        <name>preprocessorsToUse</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Preprocessing.PreprocessingManager/&lt;&gt;c__DisplayClass9</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Preprocessing.IPreprocessingEngine)</signature>
                        <name>&lt;GetProcessors&gt;b__8</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Preprocessing.PreprocessingManager</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>contentItem</name>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.PreprocessingConfig</signature>
                        <name>preprocessConfig</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Preprocessing.PreprocessingManager/&lt;&gt;c__DisplayClassb</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Preprocessing.IPreprocessingEngine)</signature>
                        <name>&lt;GetProcessors&gt;b__7</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ppe</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ReadOnlyCacheSection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string, WebGrease.IWebGreaseContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Newtonsoft.Json.Linq.JToken)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.CacheResult)</signature>
                        <name>&lt;CanBeRestoredFromCache&gt;b__c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.CacheSourceDependency)</signature>
                        <name>&lt;CanBeSkipped&gt;b__10</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ReadOnlyCacheSection)</signature>
                        <name>&lt;CanBeSkipped&gt;b__11</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.CacheResult)</signature>
                        <name>&lt;CanBeSkipped&gt;b__e</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.CacheResult)</signature>
                        <name>&lt;CanBeSkipped&gt;b__f</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ReadOnlyCacheSection)</signature>
                        <name>&lt;Dispose&gt;b__8</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ReadOnlyCacheSection)</signature>
                        <name>&lt;Dispose&gt;b__9</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.CacheSourceDependency)</signature>
                        <name>&lt;HasChangedSourceDependencies&gt;b__18</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ReadOnlyCacheSection&gt;(WebGrease.ReadOnlyCacheSection)</signature>
                        <name>&lt;SafeAllRecursiveChildSections&gt;b__19</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.CacheResult)</signature>
                        <name>&lt;Touch&gt;b__17</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ReadOnlyCacheSection(string)</signature>
                        <name>&lt;get_ChildCacheSections&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CanBeRestoredFromCache</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CanBeSkipped</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.CacheResult&gt;(string, bool)</signature>
                        <name>GetCacheResults</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.IWebGreaseContext, WebGrease.CacheResult)</signature>
                        <name>HasCachedEndResultThatChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>HasChangedSourceDependencies</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WebGrease.ReadOnlyCacheSection(string, WebGrease.IWebGreaseContext)</signature>
                        <name>Load</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ReadOnlyCacheSection&gt;()</signature>
                        <name>SafeAllRecursiveChildSections</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Touch</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.IWebGreaseContext, string)</signature>
                        <name>Unload</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ReadOnlyCacheSection&gt;()</signature>
                        <name>get_ChildCacheSections</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Newtonsoft.Json.Linq.JToken,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.CacheResult,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate12</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;WebGrease.ReadOnlyCacheSection&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate15</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.ReadOnlyCacheSection,System.Collections.Generic.IEnumerable`1&lt;WebGrease.ReadOnlyCacheSection&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1a</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.ReadOnlyCacheSection,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatea</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;WebGrease.ReadOnlyCacheSection&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.CacheResult,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegated</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>LoadLock</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>absolutePath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.CacheResult&gt;</signature>
                        <name>cacheResults</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>childCacheSectionFiles</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ReadOnlyCacheSection&gt;</signature>
                        <name>childCacheSections</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>disposed</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>referenceCount</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.CacheSourceDependency&gt;</signature>
                        <name>sourceDependencies</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.ReadOnlyCacheSection&gt;()</signature>
                        <name>ChildCacheSections</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ReadOnlyCacheSection/&lt;&gt;c__DisplayClass6</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.CacheResult)</signature>
                        <name>&lt;GetCacheResults&gt;b__4</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.CacheResult&gt;(WebGrease.ReadOnlyCacheSection)</signature>
                        <name>&lt;GetCacheResults&gt;b__5</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>endResultOnly</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fileCategory</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.ResourceStrings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BundlingFiles</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConfigurationFileParseError</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DuplicateFoundFormat</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorsInFileFormat</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileHasheActivityCouldNotLocateDirectory</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileHasherActivityErrorOccurred</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GeneralErrorMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InvalidBundlingOutputFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MinifyingCssFilesAndSpritingBackgroundImages</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MoreThan256Colours</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MultipleSwitches</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoFilesProcessed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PreprocessingCouldNotFindThePluginPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PreprocessingEngineFound</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PreprocessingInitializeEnd</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PreprocessingInitializeStart</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PreprocessingLoadingError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PreprocessingPluginPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ResolvingTokensAndPerformingLocalization</name>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ResourceResolverDuplicateKeyExceptionMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SemiTransparencyFound</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ThereWereErrorsWhileBundlingFiles</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ThereWereErrorsWhileMinifyingTheCssFiles</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Usage</name>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BundlingFiles</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ConfigurationFileParseError</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DuplicateFoundFormat</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorsInFileFormat</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileHasheActivityCouldNotLocateDirectory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileHasherActivityErrorOccurred</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>GeneralErrorMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InvalidBundlingOutputFile</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MinifyingCssFilesAndSpritingBackgroundImages</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MoreThan256Colours</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MultipleSwitches</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoFilesProcessed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PreprocessingCouldNotFindThePluginPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PreprocessingEngineFound</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PreprocessingInitializeEnd</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PreprocessingInitializeStart</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PreprocessingLoadingError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PreprocessingPluginPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ResolvingTokensAndPerformingLocalization</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ResourceResolverDuplicateKeyExceptionMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SemiTransparencyFound</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ThereWereErrorsWhileBundlingFiles</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ThereWereErrorsWhileMinifyingTheCssFiles</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Usage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.SectionIdParts</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>AssemblerActivity</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Assembly</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BundleActivity</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ConfigurationFile</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ContentHash</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Css</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CssFileSet</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CssLocalizationActivity</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EverythingActivity</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FileHasherActivity</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ImageHash</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Initialize</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>JSLocalizationActivity</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Js</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>JsFileSet</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MinifyCssActivity</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MinifyJsActivity</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Optimize</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Parse</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Preprocessing</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PrintCss</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Process</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ResourcesResolutionActivity</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Spriting</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Validate</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WebGreaseBuildTask</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WebGreaseBuildTaskSession</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.Strings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>char[]()</signature>
                        <name>get_SemicolonSeparator</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Css</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CssFilter</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CssLocalizedOutput</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CssLogFile</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DefaultAnalyzeArgs</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DefaultGlobalsToIgnore</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>DefaultImageExtensions</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DefaultLocale</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DefaultMinifyArgs</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DefaultResx</name>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>FileFilterSeparator</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GlobalsToIgnoreArg</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ImagesLogFile</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>JS</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>JsFilter</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>JsLocalizedOutput</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>JsLogFile</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Px</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ResxExtension</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ScanLogExtension</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Semicolon</name>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>SemicolonSeparatorField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>char[]()</signature>
                        <name>SemicolonSeparator</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.TemporaryOverrides</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(System.Xml.Linq.XElement)</signature>
                        <name>&lt;GetElementItems&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;GetElementItems&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetElementItems&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;(System.Xml.Linq.XAttribute)</signature>
                        <name>&lt;LoadFromFile&gt;b__15</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ContentPivot)</signature>
                        <name>&lt;ShouldIgnore&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.TemporaryOverrides(string)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(System.Collections.Generic.IEnumerable`1&lt;System.Xml.Linq.XElement&gt;, string)</signature>
                        <name>GetElementItems</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(string)</signature>
                        <name>GetItems</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadFromFile</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Configuration.IFileSet)</signature>
                        <name>ShouldIgnore</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ContentItem)</signature>
                        <name>ShouldIgnore</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ContentPivot)</signature>
                        <name>ShouldIgnore</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ShouldIgnoreLocale</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Configuration.IFileSet)</signature>
                        <name>ShouldIgnoreOutputExtensions</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Configuration.IFileSet)</signature>
                        <name>ShouldIgnoreOutputs</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ShouldIgnoreTheme</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SkipAll</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UniqueKey</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_SkipAll</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;SkipAll&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Xml.Linq.XAttribute,System.Nullable`1&lt;bool&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate16</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Xml.Linq.XElement,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate6</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>locales</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>outputExtensions</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>outputs</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>themes</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>uniqueKey</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>SkipAll</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UniqueKey</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.TemporaryOverrides/&lt;&gt;c__DisplayClass10</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;ShouldIgnoreTheme&gt;b__f</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>themeToIgnore</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.TemporaryOverrides/&lt;&gt;c__DisplayClass13</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;ShouldIgnoreLocale&gt;b__12</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>localeToIgnore</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.TemporaryOverrides/&lt;&gt;c__DisplayClass9</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;ShouldIgnoreOutputs&gt;b__7</name>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>&lt;ShouldIgnoreOutputs&gt;b__8</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;char,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.IFileSet</signature>
                        <name>fileSet</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.TemporaryOverrides/&lt;&gt;c__DisplayClassd</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;ShouldIgnoreOutputExtensions&gt;b__c</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.Configuration.IFileSet</signature>
                        <name>fileSet</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.TimeMeasure</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(WebGrease.TimeMeasureResult)</signature>
                        <name>&lt;GetMeasureTable&gt;b__11</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64(System.Collections.Generic.KeyValuePair`2&lt;string,float64&gt;)</signature>
                        <name>&lt;GetResults&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WebGrease.TimeMeasureResult(System.Collections.Generic.KeyValuePair`2&lt;string,float64&gt;)</signature>
                        <name>&lt;GetResults&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64(System.Collections.Generic.KeyValuePair`2&lt;WebGrease.Activities.FileTypes,WebGrease.TimeMeasureResult[]&gt;)</signature>
                        <name>&lt;WriteResults&gt;b__7</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>float64(WebGrease.TimeMeasureResult)</signature>
                        <name>&lt;WriteResults&gt;b__8</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>float64(System.Collections.Generic.KeyValuePair`2&lt;WebGrease.Activities.FileTypes,WebGrease.TimeMeasureResult[]&gt;)</signature>
                        <name>&lt;WriteResults&gt;b__9</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64(WebGrease.TimeMeasureResult)</signature>
                        <name>&lt;WriteResults&gt;b__a</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(WebGrease.TimeMeasureResult)</signature>
                        <name>&lt;WriteResults&gt;b__b</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.TimeMeasureItem)</signature>
                        <name>AddToResult</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BeginGroup</name>
                    </method>
                    <method>
                        <signature>void(bool, string[])</signature>
                        <name>End</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EndGroup</name>
                    </method>
                    <method>
                        <signature>string(string, System.Collections.Generic.IEnumerable`1&lt;WebGrease.TimeMeasureResult&gt;)</signature>
                        <name>GetMeasureTable</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WebGrease.TimeMeasureResult[]()</signature>
                        <name>GetResults</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PauseLastTimer</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResumeLastTimer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool, string[])</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.TimeMeasureItem)</signature>
                        <name>StopTimer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, System.Collections.Generic.IDictionary`2&lt;WebGrease.Activities.FileTypes,WebGrease.TimeMeasureResult[]&gt;, string, System.DateTimeOffset, string)</signature>
                        <name>WriteResults</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.DateTimeOffset)</signature>
                        <name>WriteResults</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.TimeMeasureResult,float64&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate10</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.TimeMeasureResult,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate12</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,float64&gt;,float64&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;WebGrease.Activities.FileTypes,WebGrease.TimeMeasureResult[]&gt;,float64&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatec</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;WebGrease.Activities.FileTypes,WebGrease.TimeMeasureResult[]&gt;,float64&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegated</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.TimeMeasureResult,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatee</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.TimeMeasureResult,float64&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatef</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.IDictionary`2&lt;string,int32&gt;&gt;</signature>
                        <name>measurementCounts</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.IDictionary`2&lt;string,float64&gt;&gt;</signature>
                        <name>measurements</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;WebGrease.TimeMeasureItem&gt;</signature>
                        <name>timers</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.TimeMeasure/&lt;&gt;c__DisplayClass5</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.TimeMeasureItem)</signature>
                        <name>&lt;Start&gt;b__4</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>id</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.TimeMeasureExtensions</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>float64(WebGrease.TimeMeasureResult)</signature>
                        <name>&lt;GetCsv&gt;b__0</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>float64(WebGrease.TimeMeasureResult)</signature>
                        <name>&lt;GetCsv&gt;b__1</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>float64(WebGrease.TimeMeasureResult)</signature>
                        <name>&lt;GetTextTable&gt;b__4</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>float64(WebGrease.TimeMeasureResult)</signature>
                        <name>&lt;GetTextTable&gt;b__5</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>WebGrease.TimeMeasureResult(System.Linq.IGrouping`2&lt;string,WebGrease.TimeMeasureResult&gt;)</signature>
                        <name>&lt;Group&gt;b__9</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(WebGrease.TimeMeasureResult)</signature>
                        <name>&lt;Group&gt;b__a</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>float64(WebGrease.TimeMeasureResult)</signature>
                        <name>&lt;Group&gt;b__b</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64(WebGrease.TimeMeasureResult)</signature>
                        <name>&lt;Group&gt;b__c</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.IEnumerable`1&lt;WebGrease.TimeMeasureResult&gt;)</signature>
                        <name>GetCsv</name>
                    </method>
                    <method>
                        <signature>string(object[])</signature>
                        <name>GetCsvRow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.IEnumerable`1&lt;WebGrease.TimeMeasureResult&gt;, string)</signature>
                        <name>GetTextTable</name>
                    </method>
                    <method>
                        <signature>object[](WebGrease.TimeMeasureResult, float64)</signature>
                        <name>GetValues</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;WebGrease.TimeMeasureResult&gt;(System.Collections.Generic.IEnumerable`1&lt;WebGrease.TimeMeasureResult&gt;, System.Func`2&lt;WebGrease.TimeMeasureResult,string&gt;)</signature>
                        <name>Group</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.TimeMeasureResult,float64&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate10</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.TimeMeasureResult,float64&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.TimeMeasureResult,float64&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.TimeMeasureResult,float64&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate6</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.TimeMeasureResult,float64&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate7</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Linq.IGrouping`2&lt;string,WebGrease.TimeMeasureResult&gt;,WebGrease.TimeMeasureResult&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegated</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.TimeMeasureResult,float64&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatee</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.TimeMeasureResult,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatef</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>object[]</signature>
                        <name>HeaderValues</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.TimeMeasureItem</name>
                <methodlist>
                    <method>
                        <signature>void(string, System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_Value</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Id&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Id</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.TimeMeasureResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Duration</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_IdParts</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Count</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Duration</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>set_IdParts</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Count&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>&lt;Duration&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>&lt;IdParts&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Duration</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>IdParts</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.WebGreaseContext</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.WebGreaseConfiguration, System.Action`2&lt;string,WebGrease.MessageImportance&gt;, System.Action`1&lt;string&gt;, WebGrease.Activities.LogExtendedError, System.Action`1&lt;string&gt;, WebGrease.Activities.LogError, WebGrease.Activities.LogExtendedError)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.WebGreaseConfiguration, WebGrease.LogManager)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext, System.IO.FileInfo)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Text.Encoding()</signature>
                        <name>&lt;.cctor&gt;b__10</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Security.Cryptography.MD5CryptoServiceProvider()</signature>
                        <name>&lt;.cctor&gt;b__f</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetAvailableFiles&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetAvailableFiles&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>BytesToHash</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.LogManager)</signature>
                        <name>CleanCache</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CleanDestination</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CleanDirectory</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string, System.Text.Encoding)</signature>
                        <name>ComputeContentHash</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ComputeFileHash</name>
                    </method>
                    <method>
                        <signature>string(string, WebGrease.ContentItem)</signature>
                        <name>EnsureErrorFileOnDisk</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;(string, System.Collections.Generic.IEnumerable`1&lt;string&gt;, System.Collections.Generic.IEnumerable`1&lt;string&gt;, WebGrease.Activities.FileTypes)</signature>
                        <name>GetAvailableFiles</name>
                    </method>
                    <method>
                        <signature>string(WebGrease.ContentItem)</signature>
                        <name>GetContentItemHash</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetFileHash</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetValueHash</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetWorkingSourceDirectory</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.WebGreaseConfiguration, WebGrease.LogManager, WebGrease.ICacheManager, WebGrease.Preprocessing.PreprocessingManager, System.DateTimeOffset, WebGrease.ITimeMeasure)</signature>
                        <name>Initialize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MakeRelativeToApplicationRoot</name>
                    </method>
                    <method>
                        <signature>WebGrease.IWebGreaseSection(string[])</signature>
                        <name>SectionedAction</name>
                    </method>
                    <method>
                        <signature>WebGrease.IWebGreaseSection(string[])</signature>
                        <name>SectionedActionGroup</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.Configuration.IFileSet, WebGrease.ContentItem)</signature>
                        <name>TemporaryIgnore</name>
                    </method>
                    <method>
                        <signature>bool(WebGrease.ContentPivot)</signature>
                        <name>TemporaryIgnore</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(string)</signature>
                        <name>ToIdParts</name>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>ToStringId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Touch</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICacheManager()</signature>
                        <name>get_Cache</name>
                    </method>
                    <method>
                        <signature>WebGrease.Configuration.WebGreaseConfiguration()</signature>
                        <name>get_Configuration</name>
                    </method>
                    <method>
                        <signature>WebGrease.LogManager()</signature>
                        <name>get_Log</name>
                    </method>
                    <method>
                        <signature>WebGrease.ITimeMeasure()</signature>
                        <name>get_Measure</name>
                    </method>
                    <method>
                        <signature>WebGrease.Preprocessing.PreprocessingManager()</signature>
                        <name>get_Preprocessing</name>
                    </method>
                    <method>
                        <signature>System.DateTimeOffset()</signature>
                        <name>get_SessionStartTime</name>
                    </method>
                    <method>
                        <signature>void(WebGrease.ICacheManager)</signature>
                        <name>set_Cache</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Configuration.WebGreaseConfiguration)</signature>
                        <name>set_Configuration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.LogManager)</signature>
                        <name>set_Log</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.ITimeMeasure)</signature>
                        <name>set_Measure</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WebGrease.Preprocessing.PreprocessingManager)</signature>
                        <name>set_Preprocessing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTimeOffset)</signature>
                        <name>set_SessionStartTime</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.ICacheManager</signature>
                        <name>&lt;Cache&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.WebGreaseConfiguration</signature>
                        <name>&lt;Configuration&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>WebGrease.LogManager</signature>
                        <name>&lt;Log&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ITimeMeasure</signature>
                        <name>&lt;Measure&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Preprocessing.PreprocessingManager</signature>
                        <name>&lt;Preprocessing&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.DateTimeOffset</signature>
                        <name>&lt;SessionStartTime&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Func`1&lt;System.Security.Cryptography.MD5CryptoServiceProvider&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate11</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Func`1&lt;System.Text.Encoding&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate12</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>CachedFileHashLock</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,System.Tuple`3&lt;System.DateTime,int64,string&gt;&gt;</signature>
                        <name>CachedFileHashes</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ThreadLocal`1&lt;System.Text.Encoding&gt;</signature>
                        <name>DefaultEncoding</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ThreadLocal`1&lt;System.Security.Cryptography.MD5CryptoServiceProvider&gt;</signature>
                        <name>Hasher</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IdPartsDelimiter</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,System.Collections.Generic.IDictionary`2&lt;string,string&gt;&gt;</signature>
                        <name>availableFileCollections</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;</signature>
                        <name>sessionCachedFileHashes</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WebGrease.ICacheManager()</signature>
                        <name>Cache</name>
                    </property>
                    <property>
                        <signature>WebGrease.Configuration.WebGreaseConfiguration()</signature>
                        <name>Configuration</name>
                    </property>
                    <property>
                        <signature>WebGrease.LogManager()</signature>
                        <name>Log</name>
                    </property>
                    <property>
                        <signature>WebGrease.ITimeMeasure()</signature>
                        <name>Measure</name>
                    </property>
                    <property>
                        <signature>WebGrease.Preprocessing.PreprocessingManager()</signature>
                        <name>Preprocessing</name>
                    </property>
                    <property>
                        <signature>System.DateTimeOffset()</signature>
                        <name>SessionStartTime</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WebGrease.WebGreaseContext/&lt;&gt;c__DisplayClass6</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetAvailableFiles&gt;b__1</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>rootDirectory</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.WebGreaseContext/&lt;&gt;c__DisplayClass9</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;GetValueHash&gt;b__8</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>value</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.WebGreaseContext/&lt;&gt;c__DisplayClassc</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;GetContentItemHash&gt;b__b</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WebGrease.WebGreaseContext</signature>
                        <name>&lt;&gt;4__this</name>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>contentItem</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.WebGreaseSection</name>
                <methodlist>
                    <method>
                        <signature>void(WebGrease.IWebGreaseContext, string[], bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WebGrease.IWebGreaseSection(WebGrease.IWebGreaseContext, string[], bool)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(System.Func`1&lt;!!0&gt;)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>bool(System.Func`2&lt;WebGrease.ICacheSection,bool&gt;)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>void(System.Action)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICachableWebGreaseSection(WebGrease.Configuration.IFileSet, object, bool)</signature>
                        <name>MakeCachable</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICachableWebGreaseSection(WebGrease.ContentItem, object, bool)</signature>
                        <name>MakeCachable</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICachableWebGreaseSection(object, bool)</signature>
                        <name>MakeCachable</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICachableWebGreaseSection(System.Func`2&lt;WebGrease.ICacheSection,bool&gt;)</signature>
                        <name>RestoreFromCacheAction</name>
                    </method>
                    <method>
                        <signature>WebGrease.ICachableWebGreaseSection(System.Action`1&lt;WebGrease.ICacheSection&gt;)</signature>
                        <name>WhenSkipped</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>cacheIsSkipable</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WebGrease.ContentItem</signature>
                        <name>cacheVarByContentItem</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WebGrease.Configuration.IFileSet</signature>
                        <name>cacheVarByFileSet</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>cacheVarBySetting</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WebGrease.IWebGreaseContext</signature>
                        <name>context</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>idParts</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isGroup</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WebGrease.ICacheSection,bool&gt;</signature>
                        <name>restoreFromCacheAction</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;WebGrease.ICacheSection&gt;</signature>
                        <name>whenSkippedAction</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.WebGreaseSection/&lt;&gt;c__DisplayClass1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;Execute&gt;b__0</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>errorHasOccurred</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WebGrease.WorkflowException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>516</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>5436</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>3109</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>1431</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>12</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>1440</statistic>
            <statistic>26.49%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>1579</statistic>
            <statistic>50.79%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>686</statistic>
            <statistic>12.62%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>188</statistic>
            <statistic>3.46%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>97</statistic>
            <statistic>1.78%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>67</statistic>
            <statistic>1.23%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>39</statistic>
            <statistic>0.72%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'f'</description>
            <statistic>28</statistic>
            <statistic>0.52%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'g'</description>
            <statistic>21</statistic>
            <statistic>0.39%</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>